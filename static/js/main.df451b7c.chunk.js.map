{"version":3,"sources":["redux/modules/modification.js","redux/modules/referenceTables.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","components/AlertModal.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","components/LeaveModificationModal.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$"],"names":["START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","id","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","Object","objectSpread","fixed","fixedStatus","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","map","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","INIT_TABLES","FETCH_TABLES_SUCCESS","_ref","referenceTables","originalLength","keys","csvParse","d","length","DELETE_TABLE_ROW","_ref2","data","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","apply","concat","toConsumableArray","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","dispatch","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","indexOf","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","LABEL_FIELDS_FK_SOLVED","export_import","special_general","NON_CHANGABLE_FIELDS","re","source_generic_slugify","fields","f","trim","w","capitalize","replace","join","e","SOURCE_SLUGIFY","source_category","SOURCE_SLUG_FIELDS","SOURCE_SUGGESTION_FIELDS","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_FAILURE","FETCH_BRANCHES_SUCCESS","LOGOUT_USER","LOGIN_CREATE_BRANCH_SUCCESS","LOGIN_CREATE_BRANCH_FAILURE","UPDATE_REMOTE_FILES_REQUEST","UPDATE_REMOTE_FILES_LOG","UPDATE_REMOTE_FILES_SUCCESS","UPDATE_REMOTE_FILES_FAILURE","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","getResourceSchema","createSelector","resource","group","getRelations","selectedResource","relations","key","tableName","reference","console","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","label","getOptions","tables","referenceField","uniq","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","options","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","suggestions","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","onClickCreate","referenceMap","onSuggestionsFetchRequested","suggestedOptions","inputValue","toLowerCase","inputLength","option","getSuggestions","onSuggestionsClearRequested","handleSuggestionChange","newValue","renderSuggestion","suggestion","prevProps","_this$props2","_this2","_this$props3","showNewReference","newReference","isNonchangable","isValidationField","_this$state","inputProps","placeholder","isReferenceField","generateValue","findIndex","react_select_browser_esm","isSearchable","isClearable","dist_default","getSuggestionValue","_this$state2","_this$props4","required","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","onTouch","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","handleDiscard","onDiscard","printValue","isModificationTouched","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","multiParts","continentValue","continents","getContinent","fieldsInvalid","sortedFields","sortBy","_this2$state$fields$f","isMulti","onCancel","newResource","mapValues","part","RICname_group","RICname_part","onAddNew","castFormObject","formObject","v","ReferenceResourceForm","originalValues","prefixedValues","getSlug","preFields","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","_prefixedValues","rows","wrap","_context","prev","next","exchange_rates","modified_currency","Table","load","sent","read","forceCast","t0","stop","arguments","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","components_ContextTable","AlertModal","isActive","closeModal","bodyContent","DataModification","handleTouchModification","touched","handleShowAlert","showAlert","handleHideAlert","nonFixedList","components_SummaryTable","selectError","display","justifyContent","currentIndex","DataModification_ModificationComponent","goNextError","hideModification","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","toString","marginLeft","goPrevError","components_AlertModal","modification","ui","status","_callee3","_context3","downloadFlow","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","csvFormat","GithubAuthModal","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isCommit","invalidInput","bloomer_min","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","lastCommit","remoteUpdateMessage","updatedTables","updatedRows","sources","keyBy","s","parsedFlows","groupedFlows","groupBy","deburr","href","owner","repoName","components_GithubAuthModal","auth","flowFiles","tableFiles","sha","updateRemoteFiles","files","branch","exportFlows","github","Octokat","repo","baseReference","flowRessourceMultipart","flowRessourceGroup","treeItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","exists","newRessource","_fileGit","_filePath","fileGit","tree","commit","repos","fetch","git","refs","undefined","Symbol","iterator","done","includes","get","repoRawContent","responseType","responseEncoding","response","path","log","blobs","create","content","Base64","encode","encoding","filePath","mode","t1","return","finish","JSON","stringify","trees","base_tree","object","commits","parents","update","t2","DataPrep","handleShowLogin","handleLogin","loginCreateBranch","isBranchCreated","fetchAllTables","isLogined","logoutUser","renderFetchTable","_callee2","userInfo","username","branches","refBranch","_context2","user","login","items","ref","then","tablesList","Promise","all","t","catch","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","resolve","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","textAlign","components_HeaderValidation","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","distinctErrors","missingRows","SchemaValidation","validateTable","isRequiredFieldMissing","loader","components_OverviewTable","errorsList","groupedErrorsList","getGroupedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","LeaveModificationModal","onSelectDiscard","onSelectDownload","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_LeaveModificationModal","Boolean","window","location","hostname","match","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json"],"mappings":"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","file":"static/js/main.df451b7c.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit';\nimport {values, isEqual} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          fixedStatus: 'autoFixed',\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            fixedStatus: 'fixInOther',\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            fixedStatus: 'notFixed',\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {isEqual} from 'lodash';\n\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      referenceTables[id] = csvParse(payload[id], (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {\n  START_MODIFICATION,\n} from './modification';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => (dispatch) => {\n  if (payload.id === '0') {\n    dispatch({\n      type: INIT_TABLES\n    })\n  }\n  dispatch({\n    type: SET_STEP,\n    payload\n  });\n}\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import {capitalize, deburr} from 'lodash';\n\nexport const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\nexport const DEFAULT_REF_BRANCH = 'master';\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}\n\nexport const LABEL_FIELDS_FK_SOLVED = {\n  'partner': 'RICname',\n  'reporting': 'RICname',\n  'currency': 'modified_currency',\n  'export_import': 'modified_export_import',\n  'special_general': 'modified_special_general'\n}\nexport const NON_CHANGABLE_FIELDS = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const SOURCE_SLUG_FIELDS = source => [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nconst re = /[^a-zA-Z0-9]+/g;\nconst  source_generic_slugify = (source, fields) => fields.map(f => {\n  if (source[f]){\n    return source[f].trim().split(' ').map(w => capitalize(w.replace(re, ''))).join('')\n  }\n  else\n    return null;\n  \n}, '').filter(e => e).join('_');\n\nexport const SOURCE_SLUGIFY = source => source_generic_slugify(source, SOURCE_SLUG_FIELDS(source))\n\nexport const SOURCE_SLUG_FILENAME = source => deburr(source_generic_slugify(source,\n  [ source.source_category === 'website' ? 'editor' : 'author','name', 'country', 'volume_date', 'volume_number', 'pages']));\n\nexport const SOURCE_SUGGESTION_FIELDS = ['name', 'editor', 'country', 'volumn_number', 'shelf_number']","import {get, post} from 'axios';\nimport {apiUri, branchUri, referenceUri, owner, repoName, repoRawContent} from '../../config/default';\nimport {DEFAULT_REF_BRANCH} from '../../constants';\n\nimport Octokat from 'octokat';\n\nimport { Base64 } from 'js-base64';\nimport {\n  csvFormat,\n  csvParse\n} from 'd3-dsv';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const CREATE_BRANCH_REQUEST = 'CREATE_BRANCH_REQUEST';\nexport const CREATE_BRANCH_SUCCESS = 'CREATE_BRANCH_SUCCESS';\nexport const CREATE_BRANCH_FAILURE = 'CREATE_BRANCH_FAILURE';\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const LOGIN_CREATE_BRANCH_REQUEST = 'LOGIN_CREATE_BRANCH_REQUEST';\nexport const LOGIN_CREATE_BRANCH_SUCCESS = 'LOGIN_CREATE_BRANCH_SUCCESS';\nexport const LOGIN_CREATE_BRANCH_FAILURE = 'LOGIN_CREATE_BRANCH_FAILURE';\n\nexport const UPDATE_REMOTE_FILES_REQUEST = 'UPDATE_REMOTE_FILES_REQUEST';\nexport const UPDATE_REMOTE_FILES_LOG = 'UPDATE_REMOTE_FILES_LOG';\nexport const UPDATE_REMOTE_FILES_SUCCESS = 'UPDATE_REMOTE_FILES_SUCCESS';\nexport const UPDATE_REMOTE_FILES_FAILURE = 'UPDATE_REMOTE_FILES_FAILURE';\n\n\nconst DEFAULT_MESSAGE = 'update data'\n/**\n * ACTIONS\n */\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  // let's get the datapackage from the branch\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  try {\n    get(`${repoRawContent}/${branch}/datapackage.json`,  {responseType: 'json', responseEncoding: 'utf8'}).then(res => {\n      const descriptor = res.data;\n      const tablesList = descriptor.resources.filter(r => !r.group && r.name !== 'flows');\n      dispatch({\n        type: FETCH_DATAPACKAGE_SUCCESS,\n        payload: descriptor\n      });\n      // now we can get tables\n      dispatch({\n        type: FETCH_TABLES_REQUEST,\n      });\n      Promise.all(tablesList.map((table) => {\n        return get(`${repoRawContent}/${branch}/${table.path}`, {responseType: 'text', responseEncoding: 'utf8'}).then(res => {\n          return {...table, data: res.data}; \n        });\n      }))\n      .then((res) => {\n        let tables = {};\n        res.forEach((t) => {\n          tables[t.name] = t.data\n        });\n        dispatch({\n          type: FETCH_TABLES_SUCCESS,\n          payload: tables\n        });\n      })\n      .catch((error) => { \n        console.log(error); \n        dispatch({\n          type: FETCH_TABLES_FAILURE,\n          payload,\n          error\n        });});\n    });\n  }\n  catch(error){ \n    console.log(error);\n    dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    });\n  }\n}\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REMOTE_FILES_REQUEST,\n  });\n  const {files, branch, auth, descriptor} = payload;\n\n  const github = new Octokat({\n    token: auth.token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let flowRessourceMultipart =  descriptor.resources.find((r => r.name === 'flows'))\n      let flowRessourceGroup =  descriptor.resources.find((r => r.group === 'flows'));\n      let treeItems = [];\n      for (let file of files) {\n        \n        if (!file.sha && file.fileName.includes('flows')){\n          //new file flow ?\n          //check if file already exists\n          dispatch({\n            type: UPDATE_REMOTE_FILES_LOG,\n            payload: `downloading existing flows file ${file.fileName}`\n          });\n          try {\n            const exists = await get(`${repoRawContent}/${branch}/data/${file.fileName}`,{ responseType: 'text', responseEncoding: 'utf8'})\n            if (exists.status === 200) {\n              // append new rows at end of the existing file\n              file.data = csvParse(exists.data).concat(file.data) \n            }\n          } catch (error) {\n            if (error.response && error.response.status === 404) {\n              // that's a 404 error which is fine\n              // it's a new file, add it to the datapackage see issue #70\n              if (flowRessourceMultipart) {\n                flowRessourceMultipart.path.push(`data/${file.fileName}`)\n              }\n              else if(flowRessourceGroup) {\n                const newRessource =  {...flowRessourceGroup};\n                newRessource.path = `/data/${file.fileName}`;\n                newRessource.title = file.source;\n                descriptor.resources.push(newRessource);\n              }\n            }\n            else\n              console.log(error);  \n              dispatch({\n                type: UPDATE_REMOTE_FILES_FAILURE,\n                error\n              });          \n          }  \n        }\n        dispatch({\n          type: UPDATE_REMOTE_FILES_LOG,\n          payload: `uploading ${file.fileName}`\n        });\n        let fileGit = await repo.git.blobs.create({content: Base64.encode(csvFormat(file.data)), encoding: 'base64'});\n        let filePath = `data/${file.fileName}`;\n        treeItems.push({\n          path: filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\"\n        })\n      } \n      // commit new version of the datapackage\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `uploading datapackage`\n      });\n      let fileGit = await repo.git.blobs.create({content: Base64.encode(JSON.stringify(descriptor, null, 2)), encoding: 'base64'});\n      let filePath = `datapackage.json`;\n      treeItems.push({\n        path: filePath,\n        sha: fileGit.sha,\n        mode: \"100644\",\n        type: \"blob\"\n      })\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating tree`\n      });\n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha\n      });\n      dispatch({\n        type: UPDATE_REMOTE_FILES_LOG,\n        payload: `creating commit`\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha]\n      });\n  \n      baseReference.update({sha: commit.sha});\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n        payload: commit.sha\n      });\n    } catch(err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err\n      });\n    }\n  })\n}\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST\n  });\n\n  const {auth, branch, reference} = payload;\n  const data = {\n    \"ref\": `refs/heads/${branch}`,\n    \"sha\": reference.sha\n  };\n  \n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token\n    }\n  })\n  .then((res) => dispatch({\n    type: CREATE_BRANCH_SUCCESS,\n    payload: {\n      name: auth.username,\n      ref: res.data\n    }\n  })).catch((error) => dispatch({\n    type: CREATE_BRANCH_FAILURE,\n    error\n  }))\n}\n\nexport const logoutUser = () => ({\n  type: LOGOUT_USER\n})\n\n\nexport const  loginCreateBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_CREATE_BRANCH_REQUEST,\n    payload\n  })\n  const {token} = payload;\n\n  const github = new Octokat({\n    token: token\n  });\n\n  dispatch(async () => {\n    try {\n      let userInfo = await github.user.fetch();\n      const username = userInfo.login;\n      let repo = await github.repos(owner, repoName).fetch();\n      let branches = await repo.branches.fetch();\n      let selectedBranch = branches.items.find((branch) => branch.name === username);\n      if (!selectedBranch) {\n        const refBranch = branches.items.find((branch) => branch.name === DEFAULT_REF_BRANCH);\n        selectedBranch = await repo.git.refs.create({\n          ref: `refs/heads/${username}`,\n          sha: refBranch.commit.sha\n        })\n      }\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: username,\n          ref: selectedBranch\n        }\n      });\n    } catch(error) {\n      console.error(error)\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_FAILURE,\n        payload: {\n          error\n        }\n      })\n    }\n  })\n  \n\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLogined: false,\n        tables: null,\n        selectedBranch:null,\n        isBranchCreated: false\n      }\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null\n      }\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_TABLES_FAILURE:\n      return {\n        ...state,\n        tables: null\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case LOGIN_CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        selectedBranch: payload,\n        isBranchCreated: true,\n      }\n    case LOGIN_CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        selectedBranch: null,\n        isBranchCreated: false\n      }\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: 'loading',\n        lastCommit: null,\n        remoteUpdateMessage: null\n      }\n    case UPDATE_REMOTE_FILES_LOG:\n        return {\n          ...state,\n          remoteUpdateStatus: 'loading',\n          remoteUpdateMessage: payload \n        }\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n        lastCommit: payload\n      }\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\"\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: payload\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName || (resource.group === resourceName && resource.schema));\n    const relations = {};\n    if (!selectedResource) {\n      console.error(`the resource ${resourceName} could not be found!`)\n      return {};\n    }\n    if (selectedResource.schema) {\n      if (selectedResource.schema.foreignKeys) {\n        selectedResource.schema.foreignKeys.forEach((key) => {\n          const tableName = key.reference.resource;\n          relations[tableName] = referenceTables[tableName]\n        });\n        return relations;\n      }\n      else\n        return {};\n    }\n    else {\n      console.error(`the resource ${selectedResource.name} has no schema !`);\n      return {};\n    }\n  })","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {NON_CHANGABLE_FIELDS} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue}-></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length>0 &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const uniqValues = uniq(values);\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq, groupBy, orderBy} from 'lodash';\n\nimport Select from 'react-select';\nimport Autosuggest from 'react-autosuggest';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue, fixedValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue) {\n      this.validateField(fieldValue)\n    }\n    if (fixedValue !== prevProps.fixedValue && !fixedValue) {\n      const state = this.getStateFromProps();\n      this.setState({\n        ...state\n      })\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue || '',\n      fieldValid: {\n        valid: false\n      },\n      options,\n      suggestions: []\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = (value, suggestedOptions) => {\n    const getSuggestions = (value, options) => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0 ? [] : options.filter(option =>\n        option.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    };\n    this.setState({\n      suggestions: getSuggestions(value, suggestedOptions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleSuggestionChange =  (event, { newValue }) => {\n    this.validateField(newValue)\n  };\n\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion}\n    </div>\n  );\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable, isValidationField, suggestedOptions} = this.props;\n    const {fieldSchema, fieldValid, value, suggestions} = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: '',\n      value,\n      onChange: this.handleSuggestionChange\n    };\n\n    let isReferenceField = false;\n    \n    const handleSuggestionsFetchRequested = ({value}) => {\n      this.onSuggestionsFetchRequested(value, suggestedOptions)\n    }\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName: foreignKeys[index].reference.resource,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            (!this.state.value || isValidationField)  &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <Select isClearable={true}\n        value= {generateValue(value)}\n        options={this.state.options}\n        onChange={this.handleChange} />\n      )\n    }\n    else if (suggestedOptions) {\n      return <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      getSuggestionValue={(value) => value}\n      renderSuggestion={this.renderSuggestion}\n      inputProps={inputProps} />\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.props.onTouch(true)\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true)\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  handleDiscard = () => {\n    this.props.onTouch(false);\n    const state = this.hydrateState()\n    this.setState({\n      ...state\n    });\n    this.props.onDiscard()\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor, isModificationTouched} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          fixedValue={this.state.fixedValue}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {/*\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          */}\n          {\n            isModificationTouched &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['ricentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'ricentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'ricentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues,capitalize, pick, sortBy, uniq, deburr} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {NON_CHANGABLE_FIELDS, SOURCE_SLUG_FIELDS, SOURCE_SLUGIFY, SOURCE_SUGGESTION_FIELDS} from '../constants';\n\nconst castFormObject = (formObject) =>  mapValues(formObject, (v => v.value));\n\n\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n\n      if (field.constraints && field.constraints.required) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      if (prefixedValues && prefixedValues[field.name]) {\n        value = prefixedValues[field.name];\n        valid = true\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    let preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    // remove field data structure to mimic source object\n    const value = SOURCE_SLUGIFY(castFormObject(preFields)) ;\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug']) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'ricentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      prefixedValues: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        const prefixedValues = {\n          \"modified_currency\": this.state.newResource['modified_currency'].value\n        }\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              prefixedValues,\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            prefixedValues,\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              sortBy(schema.fields, (field) => field.constraints && field.constraints.required)\n              .map((field, index) => {\n                let suggestedOptions;\n                if (resourceDescriptor.name === 'sources' && SOURCE_SUGGESTION_FIELDS.indexOf(field.name)!== -1) {\n                  suggestedOptions = uniq(referenceTables['sources'].map((d) => d[field.name]))\n                }\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={NON_CHANGABLE_FIELDS.indexOf(field.name) !==-1 || (prefixedValues && prefixedValues[field.name])}\n                    isValidationField={this.state.prefixedValues && this.state.prefixedValues[field.name]}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    suggestedOptions={suggestedOptions}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || (prefixedValues && prefixedValues[field.name])}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                prefixedValues={this.state.prefixedValues}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {NON_CHANGABLE_FIELDS, LABEL_FIELDS_FK_SOLVED} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\nimport FieldInput from './FieldInput';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      let fixedValue = fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]]:\n                                              newResource.data[0][foreignKeyField.reference.fields]\n      if (Object.keys(LABEL_FIELDS_FK_SOLVED).indexOf(field) !== -1) {\n        // incase the value of mapping is not found\n        if (newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]) {\n          fixedValue = newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]\n        }\n      }\n      return {\n        ...res,\n        [field]: fixedValue\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(true)\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleDiscard = () => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(false);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: modificationItem.fixed ? false : true,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    });\n    this.props.onDiscard()\n  }\n  \n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable, fixedStatus}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n    return (\n      <FieldContainer>\n        <Control>\n\n          <Label className=\"has-text-success\">Fixed with value</Label>\n          <p className=\"has-text-success\">{printValue}</p>\n          <Help isColor=\"success\">\n            {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n            {\n              fixedReferenceTable && fixedReferenceTable.map((table)=> {\n                return (\n                  <li>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n                )\n              })\n            }\n          </Help>\n          {!this.state.showSolving && <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>}\n          {unchangable && fixedStatus === 'fixInOther' &&<Help isColor=\"success\">found same value in other error, please fix it there</Help>}\n          {unchangable && fixedStatus === 'autoFixed' &&<Help isColor=\"success\">this foreign key error is auto fixed by previous format modification</Help>}\n        </Control>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, referenceTables, isCurrencyFixDisabled, schema} = this.props;\n\n    const fieldDescriptor = schema.fields.find((f) => f.name === modificationItem.field)\n    \n    return (\n      <div>\n        {modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldInput \n            isNonchangable={false}\n            foreignKeys={schema.foreignKeys}\n            fieldDescriptor={fieldDescriptor} \n            referenceTables={referenceTables}\n            fixedValue={this.state.fixedValues[modificationItem.field]}\n            fieldValue={this.state.fixedValues[modificationItem.field]}\n            onClickCreate={this.handleClickCreate}\n            onChange={this.handleSelectExist} />\n        }\n        {\n          modificationItem.field !== 'source' &&\n          <FieldContainer>\n            <Control>\n              {isCurrencyFixDisabled && <Help isColor=\"danger\">Please fix year format error first</Help>}\n              <Button isDisabled={isCurrencyFixDisabled} isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            </Control>\n          </FieldContainer>  \n        }\n      </div>\n      )\n  }\n\n  render() {\n    const {modificationItem, foreignKeyField, descriptor, referenceTables, isModificationTouched} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {/* {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              } */}\n              {\n                isModificationTouched &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  isCurrencyFixDisabled,\n  isModificationTouched,\n  modificationItem,\n  modificationIndex,\n  onDiscard,\n  onTouch,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          isModificationTouched={isModificationTouched}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          isCurrencyFixDisabled={isCurrencyFixDisabled}\n          isModificationTouched={isModificationTouched}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose\n} from 'design-workshop';\n\n\nconst AlertModal = ({\n  isActive,\n  closeModal\n}) => {\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalContent>\n        <Card bodyContent=\"You have made a modification, please confirm your fix first?\" />\n      </ModalContent>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default AlertModal","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq, findIndex} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\nimport AlertModal from '../../components/AlertModal';\n\nclass DataModification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      isModificationTouched: false\n    }\n  }\n\n  handleTouchModification = (touched) => {\n    this.setState({\n      isModificationTouched: touched\n    })\n  }\n\n  handleShowAlert = () => {\n    this.setState({\n      showAlert: true\n    })\n  }\n\n  handleHideAlert = () => {\n    this.setState({\n      showAlert: false\n    })\n  }\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables, steps, selectedStep} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n    const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n    const modificationItem = modificationList[modificationIndex]\n    let isCurrencyFixDisabled = false;\n    if (modificationItem.field === 'currency|year|reporting' && yearFormatValues.indexOf(modificationItem.value.split('|')[1]) !== -1) {\n      isCurrencyFixDisabled = true\n    }\n    \n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () =>  {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n\n    const handlePrevError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleDiscard = () => {\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError();\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    const handleHideModification = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      this.props.hideModification();\n    }\n    \n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber);\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = [...flows[e.rowNumber -1]]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable && fixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      this.setState({\n        isModificationTouched: false\n      });\n\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError()\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              isCurrencyFixDisabled={isCurrencyFixDisabled}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationItem} \n              isModificationTouched={this.state.isModificationTouched}\n              onTouch={this.handleTouchModification}\n              onDiscard={handleDiscard}\n              onSubmitModification={handleSubmitModification} />\n            \n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={handleHideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <span>{(this.state.showAlert).toString()}</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n            <AlertModal isActive={this.state.showAlert} closeModal={this.handleHideAlert} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n  csvFormat\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFlow (array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv':\n    default: {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx': {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, `${fileName}.${ext}`);\n      break\n    }\n  }\n}\n\nexport function downloadTable (array, fileName, ext) {\n  let file;\n  switch(ext) {\n    case 'csv': \n    default:{\n      const csvString = csvFormat(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose,\n  ModalCard,\n  ModalCardHeader,\n  ModalCardTitle,\n  Delete,\n  ModalCardBody,\n  ModalCardFooter\n} from 'bloomer';\n\nimport {values} from 'lodash';\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.token;\n    \n    if (isCommit) {\n      invalidInput = !this.state.token || !this.state.message;\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, keyBy} from 'lodash';\n\nimport {\n  Button,\n  Control,\n  Field,\n  Columns,\n  Column,\n  Help\n} from 'design-workshop';\n\nimport {\n  csvParse\n} from 'd3-dsv';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {setStep} from '../../redux/modules/ui';\n\nimport {updateRemoteFiles} from '../../redux/modules/repoData';\n\nimport {downloadFlow, downloadTable} from '../../utils/fileExporter';\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\nimport {SOURCE_SLUG_FILENAME} from '../../constants';\nimport {owner, repoName} from '../../config/default';\n\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n\n  handleOpenModal = () => {\n    this.setState({isModalShow: true})\n  }\n\n  handleCloseModal = () => {\n    this.setState({isModalShow: false})\n  }\n\n  render () {\n    const {flows, repoData, referenceTables, originalLength} = this.props;\n    const {selectedBranch, remoteUpdateStatus, lastCommit, remoteUpdateMessage, tables} = repoData;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n\n    const handleExportFlow = () => {\n      const {file, data} = flows;\n      downloadFlow(data, `${file.name}_corrections`, 'csv')\n    }\n    \n    // group flows by source filename\n    // we need to source metadata to generate source filename\n    const sources = keyBy(referenceTables.sources, s => s.slug);\n    const parsedFlows = csvParse(flows.data.map(d => d.join(',')).join('\\n'));\n    const groupedFlows = groupBy(parsedFlows, (item) => SOURCE_SLUG_FILENAME(sources[item['source']]));\n\n    const handleUpdateRemoteFiles= (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          fileName: `flows/${file}.csv`,\n          data: groupedFlows[file],\n          source: file\n        }\n      });\n      const tableFiles = updatedTables.map((table) => {\n        return {\n          fileName: `${table.name}.csv`,\n          data: referenceTables[table.name],\n          sha: tables[table.name].sha\n        }\n      })\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name,\n        descriptor: this.props.repoData.descriptor\n      })\n    }\n    const handleStartOver = () => {\n      this.props.setStep({id: '0'})\n    }\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <strong>fixed flows table by source</strong>\n            {\n              Object.keys(groupedFlows).map((source) => {\n                return (\n                  <p>{source}.csv</p>\n                )\n              })\n            }\n          </Column>\n          <Column>\n            <div>\n              <strong>updated reference tables</strong>\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <Control>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </Control>\n                  )\n                })\n              }\n            </div>\n          </Column>\n        </Columns>\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>Download fixed flows</Button>\n          </Control>\n          <Control>\n            {\n              remoteUpdateStatus === 'updated' ? \n              <Button isColor='success' onClick={handleStartOver}>Start a new import</Button> :\n              <Button isDisabled={remoteUpdateStatus === 'loading'} isColor=\"info\" onClick={this.handleOpenModal}>Publish tables to \"{selectedBranch.name}\" branch</Button>\n            }\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === 'loading' && <Help isColor='success'>updating files on github: {remoteUpdateMessage}...</Help>}\n          {remoteUpdateStatus === 'updated' && <Help isColor='success'>files have been commited on github see <a href={`https://github.com/${owner}/${repoName}/commit/${lastCommit}`}>commit details</a></Help>}\n          {remoteUpdateStatus === 'fail' && <Help isColor='danger'>fail to update files on github</Help>}\n        </Field>\n        <GithubAuthModal \n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  exportFlows,\n  updateRemoteFiles\n})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  fetchAllTables,\n} from '../../redux/modules/repoData';\n\nimport {loginCreateBranch, logoutUser} from '../../redux/modules/repoData';\n\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n   \n  handleShowLogin =()=> {\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginCreateBranch(payload);\n    this.handleCloseModal()\n  }\n\n  renderFetchTable() {\n    const {repoData} = this.props;\n    const {selectedBranch, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not get branch from github, try login again</Help>\n        }\n        {\n          selectedBranch && !tables && \n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables are not loaded, please reload from {selectedBranch.name} branch</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData} = this.props;\n    const {selectedBranch, isLogined} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          { !isLogined &&\n            <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>Login to get branch</span>\n            </Button>\n          }\n          {\n            isLogined &&\n            <Button isColor=\"info\" onClick={this.props.logoutUser}>\n              <span>Logout</span>\n            </Button>\n          }\n          {selectedBranch && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  loginCreateBranch,\n  fetchAllTables\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {findIndex} from 'lodash';\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\n\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  steps,\n  selectedStep,\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name.split('.')[0]\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => {\n    const currentIndex = findIndex(steps, selectedStep);\n    setStep(steps[currentIndex+1])\n  }\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\nimport { file } from '@babel/types';\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let missingRows = [];\n                      if (field.errorType === 'ERROR_FORMAT' && (field.name==='reporting' || field.name === 'partner')) {\n                        missingRows = field.errors.map((error) => error.rowNumber);\n                      }\n                      if(columnIndex === 0) return (<div key={columnIndex} className=\"table-cell\">{field.name}</div>)\n                      else if(columnIndex === 1) return (<div key={columnIndex} className=\"table-cell\">{field.errorType}</div>)\n                      else return (\n                        <div key={columnIndex} className=\"table-cell\">\n                          <span>{distinctErrors} different invalid values, {totalErrors} rows affected in total</span>\n                          {missingRows.map((rowNumber)=> {\n                            return (<li className=\"has-text-danger\">missing value in row {rowNumber}</li>)\n                          })}\n                        </div>\n                      )\n                      \n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getGroupedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList, steps, selectedStep} = this.props;\n    let isRequiredFieldMissing = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isRequiredFieldMissing = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors)\n      }\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isRequiredFieldMissing && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isRequiredFieldMissing}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n  Button,\n  Card,\n  Field,\n  Control\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\nimport {downloadTable} from '../utils/fileExporter';\nconst LeaveModificationModal = ({\n  originalLength,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n  let updatedTables = [];\n  if (referenceTables) {\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n  }\n\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalCard>\n        <ModalCardBody>\n          <div style={{\n          textAlign:'center'\n          }}>\n              <h5 className=\"title is-5\">Leave this step, you might lost your modification?</h5>\n              {updatedTables.length>0 && <p>updated reference tables</p>}\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <div>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </div>\n                  )\n                })\n              }\n              <Field isGrouped>\n                <Control>\n                  <Button onClick={onSelectDownload} isColor=\"success\">Download fixed flows</Button>\n                </Control>\n                <Control>\n                  <Button onClick={onSelectDiscard} isColor=\"danger\">Discard</Button>\n                </Control>\n                <Control>\n                  <Button onClick={closeModal} isColor=\"info\">Cancel</Button>\n                </Control>\n            </Field>\n            </div>\n        </ModalCardBody>\n      </ModalCard>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default LeaveModificationModal","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport LeaveModificationModal from './components/LeaveModificationModal';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  originalLength,\n  modificationList,\n  //actions\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, `${file.name}_ongoing_corrections`, 'csv')\n  }\n\n  const handleSetStep = (step) => {\n    const {remoteUpdateStatus} = repoData;\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0' && remoteUpdateStatus !== 'updated') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <LeaveModificationModal\n        referenceTables={referenceTables}\n        originalLength={originalLength}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./geojson.json\": 332,\n\t\"./table-schema.json\": 808,\n\t\"./topojson.json\": 333\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 807;","var map = {\n\t\"./data-package.json\": 874,\n\t\"./data-resource.json\": 875,\n\t\"./fiscal-data-package.json\": 876,\n\t\"./registry.json\": 877,\n\t\"./tabular-data-package.json\": 878,\n\t\"./tabular-data-resource.json\": 879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 873;"],"sourceRoot":""}