{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","redux/modules/tables.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceForm.js","components/NewResourceRow.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","fixedValues","updatedValues","orderedErrors","item","value","split","forEach","index","indexFind","indexOf","objectSpread","field","fixed","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","successValues","itemValue","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","errors","fieldList","error","columnNumber","data","rowNumber","nonChangableFields","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_BRANCHES_SUCCESS","SELECT_BRANCH","tablesList","path","selectedBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","row","originalRowNumber","selectedErrors","find","err","columnIndex","message","push","joinedColumn","columnName","values","length","resourceName","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getOrderedErrors","collectedErrors","errorsList","concat","groupedErrorsList","groupBy","v","groupedValue","yearRange","fieldName","years","uniq","min","max","replace","sortBy","getResourceSchema","createSelector","resource","getRelations","tables","selectedResource","relations","key","tableName","reference","INIT_TABLES","_ref","csvParse","Base64","decode","content","d","_ref2","UPDATE_TABLE","_ref3","newTable","slice","splice","SummaryTable","className","onSelectError","columnNames","isYearFormatError","react_default","a","createElement","style","position","width","height","errorIndex","fixedValue","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","originalValue","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","validateField","castValue","setState","onChange","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","referenceField","prevProps","_this$props2","_this$props3","referenceTables","showNewReference","newReference","_this$state","isReferenceField","findIndex","getOptions","react_select_browser_esm","isSearchable","isClearable","generateValue","_this$state2","_this$props4","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","printValue","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","slugFields","NewResourceRow","overflow","ReferenceResourceForm","resourceDescriptor","originalValues","newResource","getSlug","preFields","capitalize","slug","handleShowNew","handleHideNew","handleCreateNewReference","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","_this2","fieldsInvalid","pick","getReferenceDescriptor","onCancel","onAddNew","components_NewResourceRow","mapValues","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","fixedValueSelected","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","dispatch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Resource","load","read","t0","console","multiple","messages","stop","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","isEqual","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","updatedTable","updateTable","updateFlows","rowNumbers","currencies","prevErrors","revalidateRows","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","rows","successRows","newErrors","updatedErrors","updatedRowNumbers","successRowNumbers","_context3","Table","sent","keyed","forceCast","downloadFile","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","DataPublish","_this$props$flows","exportFlows","DataPrep","fetchDatapackage","fetchBranches","repoData","branches","selectBranch","branch","fetchAllTables","get","branchUri","then","catch","Promise","all","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","_callee2","_context2","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","isActive","closeModal","bodyContent","onAction","footerActions","OverviewTable","totalErrors","groupedErrors","distinctErrors","cellValue","SchemaValidation","validateTable","loader","components_OverviewTable","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e8dec5c.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 319,\n\t\"./table-schema.json\": 781,\n\t\"./topojson.json\": 320\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 780;","var map = {\n\t\"./data-package.json\": 844,\n\t\"./data-resource.json\": 845,\n\t\"./fiscal-data-package.json\": 846,\n\t\"./registry.json\": 847,\n\t\"./tabular-data-package.json\": 848,\n\t\"./tabular-data-resource.json\": 849\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 843;","var map = {\n\t\"./geojson.json\": 353,\n\t\"./table-schema.json\": 915,\n\t\"./topojson.json\": 354\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 914;","import { createReducer } from 'redux-starter-kit';\nimport {values} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    const {payload} = action;\n    const {fixedValues, orderedErrors} = payload;\n    const updatedValues = orderedErrors.map((item)=> (''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n    state.modificationList.forEach((item, index) => {\n      const indexFind = updatedValues.indexOf((''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n      if (indexFind !== -1) {\n        state.modificationList[index] = {\n          ...payload.orderedErrors[indexFind],\n          index\n        }\n      }\n      else if (item.field === 'currency|year|reporting') {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    });\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    const {payload} = action;\n    const {orderedErrors, successValues, fixedValues} = payload;\n    const updatedValues = orderedErrors.map((item)=> (''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n\n    state.modificationList.forEach((item, index) => {\n      const itemValue = (''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]\n      const indexFind = updatedValues.indexOf(itemValue);\n      if (indexFind !== -1) {\n        state.modificationList[index] = {\n          ...payload.orderedErrors[indexFind],\n          index\n        }\n      }\n      if (successValues) {\n        const successIndex = successValues.indexOf(itemValue);\n        if (successIndex !== -1) {\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        }\n\n      }\n    });\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const nonChangableFields = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}","import {get} from 'axios';\nimport {apiUri, branchUri} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  selectedBranch: 'master'\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case SELECT_BRANCH:\n      return {\n        ...state,\n        selectedBranch: payload.branch,\n        tables: null\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  \n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, fixedValues, source, schema, relations, prevErrors} = payload;\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({keyed:true, forceCast: true, relations});\n      let successRows = [];\n      let successValues;\n      rows.forEach((row, index) => {\n        if (row.errors) {\n          row.originalRowNumber = rowNumbers[index]\n        }\n        else successRows.push(row)\n      });\n\n      if(successRows.length > 0) {\n        successValues = keys(groupBy(successRows, (v)=> v.currency + v.reporting))\n      };\n\n      const errors = rows.filter((row) => row.errors);\n      let newErrors;\n      let orderedErrors;\n\n      const collectedErrors = getCollectedErrors(source, schema, errors);\n\n      if (collectedErrors && collectedErrors['currency|year|reporting']) {\n        collectedErrors['currency|year|reporting'].errors.forEach((error) => error.rowNumber = error.originalRowNumber);\n        const updatedErrors = collectedErrors['currency|year|reporting'].errors;\n\n        const updatedRowNumbers = updatedErrors.map((e)=> e.rowNumber);\n        const successRowNumbers = difference(rowNumbers, updatedRowNumbers);\n        \n        newErrors = prevErrors\n          .filter((error) => successRowNumbers.indexOf(error.rowNumber) === -1)\n          .map((error)=> {\n          if (updatedRowNumbers.indexOf(error.rowNumber) !== -1) {\n            const updatedError = updatedErrors.find((e)=> e.rowNumber === error.rowNumber);\n            return updatedError;\n          }\n          return error;\n        });\n\n        orderedErrors = getOrderedErrors({\n          'currency|year|reporting': {\n            ...collectedErrors['currency|year|reporting'],\n            errors: newErrors\n          }\n        });\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            fixedValues,\n            successValues,\n            newErrors,\n            orderedErrors\n          }\n        })\n      }\n      else {\n        newErrors = prevErrors.filter((error) => rowNumbers.indexOf(error.rowNumber) === -1);\n        orderedErrors = getOrderedErrors({\n          'currency|year|reporting': {\n            errors: newErrors\n          }\n        });\n        if (newErrors.length) {\n          dispatch({\n            type: REVALIDATE_ROWS_SUCCESS,\n            payload: {\n              status: 'done',\n              valid: false,\n              fixedValues,\n              newErrors,\n              orderedErrors\n            }\n          })\n        }\n        else {\n          dispatch({\n            type: REVALIDATE_ROWS_SUCCESS,\n            payload: {\n              rowNumbers,\n              status: 'done',\n              valid: true,\n              fixedValues,\n              newErrors,\n              orderedErrors\n            }\n          })\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case REVALIDATE_ROWS_SUCCESS:\n      // newErrors = state.schemaFeedback.collectedErrors['currency|year|reporting'].errors\n      //                   .filter((error) => payload.rowNumbers.indexOf(error.rowNumber) === -1);\n      return {\n        ...state,\n        schemaFeedback: {\n          ...state.schemaFeedback,\n          collectedErrors: {\n            ...state.schemaFeedback.collectedErrors,\n            'currency|year|reporting': null\n          }\n        }\n      }\n    case REVALIDATE_ROWS_FAILURE:\n      if (payload.newErrors) {\n        return {\n          ...state,\n          schemaFeedback: {\n            ...state.schemaFeedback,\n            collectedErrors: {\n              ...state.schemaFeedback.collectedErrors,\n              'currency|year|reporting': {\n                errors: payload.newErrors\n              }\n            }\n          }\n        }\n      }\n      return state;\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.tables.tables;\n\nconst re = /row\\s\\d*/;\nexport const getOrderedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => {\n      if (v.field !== 'currency|year|reporting') return (v.field + v.value)\n      else {\n        const groupedValue = v.value.split('|')[0] + v.value.split('|')[2]\n        return v.field + groupedValue\n      }\n    }))\n    .map((errors, index)=> {\n      const fieldName = errors[0].field;\n      let yearRange;\n      if (fieldName === 'currency|year|reporting') {\n        const years = uniq(errors.map((error) => error.value.split('|')[1]));\n        yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      }\n      const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, tables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = tables[tableName]\n    });\n    return relations;\n})","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const UPDATE_TABLE = 'UPDATE_TABLE';\nexport const INIT_TABLES = 'INIT_TABLES';\n\nexport const initTables = (payload) => ({\n  type: INIT_TABLES,\n  payload\n})\n\nexport const updateTable = (payload) => ({\n  type: UPDATE_TABLE,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  UPDATE_TABLE: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.tables[resourceName].slice();\n    newTable.splice(newTable.length, 0, data)\n    state.tables[resourceName] = newTable\n  },\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const isYearFormatError = modificationList.find((item)=> item.field === 'year' && !item.fixed)\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n\n              const isCurrencyFixDisabled = item.field === 'currency|year|reporting' && isYearFormatError;\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed &&!isNonchangableField && 'rows affected'}</span>\n                              <br/>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length &&\n                                <div>\n                                  { \n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <span key={index} className=\"has-text-success\">new row added to \"{table.resourceName}\" table</span>\n                                      )\n                                    })\n                                  }\n                                </div>\n                                \n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex} from 'lodash';\n\nimport Select from 'react-select';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select as SimpleSelect\n} from 'design-workshop'\n\nimport {nonChangableFields} from '../constants'\nimport {getEnumOptions} from '../utils/formUtils';\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    if(!event) {\n      const value = '';\n      this.validateField(value);\n    }\n    else if(event.value) {\n      this.validateField(event.value);\n    }\n    else {\n      this.validateField(event.target.value);\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference} = this.props;\n    const {fieldSchema, fieldValid, value} = this.state;\n    \n    let isReferenceField = false;\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n\n    const getOptions = ({tables, resourceName, referenceField}) => {\n      const table = tables[resourceName]\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const resourceName = foreignKeys[index].reference.resource;\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      options = getOptions({\n        tables: referenceTables,\n        resourceName,\n        referenceField\n      });\n    }\n\n\n    if (nonChangableFields.indexOf(fieldSchema.name) !==-1) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <SimpleSelect value={value} onChange={this.handleChange}>\n          {\n            this.state.options.map((item, index) => {\n              return (\n                <option key={index} value={item.value}>{item.label}</option>\n              )\n            })\n          }\n        </SimpleSelect>\n      )\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\n\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\n\nimport {nonChangableFields} from '../constants'\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(nonChangableFields.indexOf(field.name) !== -1) {\n          value = originalValues[field.name];\n          valid = true;\n        }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.fields, (item) => item.value || '')\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                  key={index}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>New row to \"{resourceName}\" table</h3>\n      {Object.keys(data).map((key) => {\n        return (\n          <div>\n            <Label>{key}:</Label>\n            <p>{data[key]}</p>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, capitalize, pick} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Columns,\n  Column\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      if(nonChangableFields.indexOf(field.name) !== -1) {\n        value = originalValues[field.name];\n        valid = true;\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.newResource['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.newResource, (item) => item.value || ''),\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n      this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              schema.fields.map((field, index) => {\n                return (\n                  <FieldInput \n                    key={index}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    fieldValue={this.state.newResource[field.name].value}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference &&\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={pick(originalValues, nonChangableFields)}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {nonChangableFields} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceForm from './NewResourceForm';\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = tables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? newResource.data[foreignKeyField.reference.fields[index]] : newResource.data[foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">{!isNonchangableField ? \"Fixed with value\": \"Keep original value\"}</Label>\n        <p className=\"has-text-success\">{printValue}</p>\n        <Help isColor=\"success\">\n          {!isNonchangableField && <li>total {modificationItem.errors.length} rows affected</li>}\n          {\n            fixedReferenceTable && fixedReferenceTable.map((table)=> {\n              return (\n                <li>new row is added to \"{table.resourceName}\" table</li>\n              )\n            })\n          }\n        </Help>\n        <br/>\n        <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, tables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = tables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              this.state.fixedValues[field] &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            {/* {\n              (this.state.newResource) &&\n              <Help isColor=\"success\">\n                <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                <li>total {modificationItem.errors.length} rows affected</li>\n                <li>new row will be added to \"{resourceName}\" table</li>\n              </Help>\n            } */}\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newResource, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField, descriptor, tables} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n          return '1/3'\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').reduce((res, f, index) => {\n        return {\n          ...res,\n          [f]: value.split('|')[index]\n        }\n      }, {})\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={tables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  tables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          tables={tables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  tables: state.tables.tables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {updateTable} from '../../redux/modules/tables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, schemaFeedback} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {schema, flows, tables} = this.props;\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n      \n      // TODO: hardcoded\n      if (payload.field === 'currency|year|reporting') {\n        const columnIndex = flows[0].indexOf('year');\n        const years = uniq(errors.map((error) => flows[error.rowNumber -1][columnIndex]));\n        fixedReferenceTable.forEach((table) => {\n          if (table.resourceName === 'currencies' || table.resourceName === 'exchange_rates') {\n            years.forEach((year) => {\n              const updatedTable = {\n                ...table,\n                data: {\n                  ...table.data, \n                  year\n                }\n              };\n              this.props.updateTable(updatedTable)\n            });\n            \n          }\n        })\n      }\n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber)\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = flows[e.rowNumber -1]\n          row[columnIndex] = payload.fixedValues['year']\n          return row\n        }));\n        const relations = {currencies: tables['currencies']}\n        const prevErrors = schemaFeedback.collectedErrors['currency|year|reporting'].errors\n        this.props.revalidateRows({\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n          prevErrors\n        });\n      }\n\n      this.props.submitModification(payload);\n\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  tables: state.tables.tables,\n  schema: getResourceSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  updateTable,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFile ( array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        fileName,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {downloadFile} from '../../utils/fileExporter';\n\nclass DataPublish extends React.Component {\n\n  render () {\n    const handleExport = () => {\n      const {file, data} = this.props.flows;\n      downloadFile(data, file.name, 'xlsx')\n    }\n    return (\n      <div>\n        <Button onClick={handleExport}>Export fixed data</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows\n})\n\nexport default connect(mapStateToProps, {exportFlows})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Label,\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n    this.props.fetchBranches()\n  }  \n\n  render () {\n    const {repoData} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n    const handleSelectBranch = (event) => {\n      this.props.selectBranch({\n        branch: event.target.value\n      })\n    }\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch});\n    }\n    return (\n      <div>\n        {branches && \n          <div>\n            <Label>Get tables from {selectedBranch} branch</Label>\n            <Select value={selectedBranch} onChange={handleSelectBranch}>\n              {\n                branches.map((item, index) => {\n                  return (\n                    <option key={index}>{item.name}</option>\n                  )\n                })\n              }\n            </Select>\n            <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button>\n            {tables &&\n              <Help isColor=\"success\">tables from {selectedBranch} branch are loaded</Help>\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchBranches,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\n\nconst ConfirmationModal = ({\n  flows,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${totalErrors} rows affected in total, ${distinctErrors} different invalid values`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getOrderedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              {/* Found format errors in {Object.keys(schemaFeedback.collectedErrors.formatErrors).length} columns, ForeignKey errors in {Object.keys(schemaFeedback.collectedErrors.foreignKeyErrors).length} columns, {schemaFeedback.errors.length} rows */}\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFile} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/tables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFile(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables(repoData.tables);\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport tables from './modules/tables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  tables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}