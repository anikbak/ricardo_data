{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/referenceTables.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceForm.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/ModificationSummary.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","redux/modules/auth.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","objectSpread","fixed","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","data","indexOf","nonChangableFields","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","INIT_TABLES","FETCH_TABLES_SUCCESS","_ref","referenceTables","originalLength","csvParse","Base64","decode","content","d","length","DELETE_TABLE_ROW","_ref2","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","apply","concat","toConsumableArray","FETCH_DATAPACKAGE_SUCCESS","FETCH_BRANCHES_SUCCESS","CREATE_BRANCH_SUCCESS","CREATE_BRANCH_FAILURE","UPDATE_REMOTE_FILES_REQUEST","UPDATE_REMOTE_FILES_SUCCESS","UPDATE_REMOTE_FILES_FAILURE","SELECT_BRANCH","tablesList","path","selectBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getResourceSchema","createSelector","resource","getRelations","selectedResource","relations","key","tableName","reference","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","getOptions","tables","referenceField","uniq","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","prevProps","_this$props2","_this$props3","showNewReference","newReference","isNonchangable","_this$state","isReferenceField","findIndex","react_select_browser_esm","isSearchable","isClearable","generateValue","_this$state2","_this$props4","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","printValue","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","slugFields","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","toLowerCase","multiParts","continentValue","continents","getContinent","_this2","fieldsInvalid","sortedFields","sortBy","_this2$state$fields$f","isMulti","onCancel","newResource","mapValues","part","RICname_group","RICname_part","onAddNew","ReferenceResourceForm","originalValues","getSlug","preFields","capitalize","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","rows","wrap","_context","prev","next","exchange_rates","Table","load","sent","read","forceCast","t0","console","stop","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","fixedValueSelected","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","dispatch","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","_context3","downloadFlow","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","csvFormat","ModificationSummary","groupedFlows","updatedTables","updatedRows","GithubAuthModal","handleChangeUser","username","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isActive","isCommit","closeModal","invalidInput","bloomer_min","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","repoTables","handleExportTables","Promise","setTimeout","parsedFlows","groupBy","components_ModificationSummary","components_GithubAuthModal","auth","flowFiles","tableFiles","sha","updateRemoteFiles","files","branch","exportFlows","github","Octokat","password","repo","baseReference","treeItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","fileGit","filePath","tree","commit","repos","owner","repoName","fetch","git","refs","Symbol","iterator","done","blobs","create","encode","encoding","mode","return","finish","trees","base_tree","object","commits","parents","update","t1","LOGIN_GITHUB_SUCCESS","LOGIN_GITHUB_FAILURE","isLogined","DataPrep","handleShowLogin","fetchBranches","handleLogin","loginGithub","handleCreateBranch","branches","branchToCreated","refBranch","createBranch","fetchDatapackage","isBranchCreated","fetchAllTables","renderFetchTable","getState","get","userUri","then","catch","branchUri","ref","post","referenceUri","all","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","_callee2","_context2","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","bodyContent","onAction","footerActions","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","v","distinctErrors","cellValue","SchemaValidation","validateTable","isNextStepDisabled","loader","components_OverviewTable","errorsList","groupedErrorsList","replace","getGroupedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","remoteResponse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4d5a2f3.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 323,\n\t\"./table-schema.json\": 790,\n\t\"./topojson.json\": 324\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 789;","var map = {\n\t\"./data-package.json\": 853,\n\t\"./data-resource.json\": 854,\n\t\"./fiscal-data-package.json\": 855,\n\t\"./registry.json\": 856,\n\t\"./tabular-data-package.json\": 857,\n\t\"./tabular-data-resource.json\": 858\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 852;","var map = {\n\t\"./geojson.json\": 357,\n\t\"./table-schema.json\": 924,\n\t\"./topojson.json\": 358\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 923;","import { createReducer } from 'redux-starter-kit';\nimport {values, isEqual} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const nonChangableFields = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {pullAll, isEqual} from 'lodash';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      referenceTables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {all, get, put, post, spread} from 'axios';\nimport {apiUri, branchUri, referenceUri, owner, repoName} from '../../config/default';\nimport Octokat from 'octokat';\n\nimport { Base64 } from 'js-base64';\nimport {\n  csvFormat\n} from 'd3-dsv';\n\nimport {INIT_TABLES} from './referenceTables';\nimport { SET_STEP } from './ui';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const CREATE_BRANCH_REQUEST = 'CREATE_BRANCH_REQUEST';\nexport const CREATE_BRANCH_SUCCESS = 'CREATE_BRANCH_SUCCESS';\nexport const CREATE_BRANCH_FAILURE = 'CREATE_BRANCH_FAILURE';\n\nexport const UPDATE_REMOTE_FILES_REQUEST = 'UPDATE_REMOTE_FILES_REQUEST';\nexport const UPDATE_REMOTE_FILES_SUCCESS = 'UPDATE_REMOTE_FILES_SUCCESS';\nexport const UPDATE_REMOTE_FILES_FAILURE = 'UPDATE_REMOTE_FILES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  {\n    name: 'RICentities_groups',\n    path: 'data/RICentities_groups.csv'\n  },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\nconst DEFAULT_MESSAGE = 'update data'\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  const {files, branch, auth} = payload;\n\n  const github = new Octokat({\n    username: auth.username,\n    password: auth.token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let treeItems = [];\n      for (let file of files) {\n        let fileGit = await repo.git.blobs.create({content: Base64.encode(csvFormat(file.data)), encoding: 'base64'});\n        let filePath = `data/${file.fileName}`;\n        treeItems.push({\n          path: filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\"\n        })\n      } \n  \n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha]\n      });\n  \n      baseReference.update({sha: commit.sha});\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n      });\n    } catch(err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err\n      });\n    }\n  })\n}\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST\n  });\n\n  const {auth, branch, reference} = payload;\n  const data = {\n    \"ref\": `refs/heads/${branch}`,\n    \"sha\": reference.sha\n  };\n  \n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token\n    }\n  })\n  .then((res) => dispatch({\n    type: CREATE_BRANCH_SUCCESS,\n    payload: {\n      name: auth.username,\n      ref: res.data\n    }\n  })).catch((error) => dispatch({\n    type: CREATE_BRANCH_FAILURE,\n    error\n  }))\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null,\n        remoteResponse: null\n      }\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        selectedBranch: payload,\n        isBranchCreated: true,\n        branchToCreated: null\n      }\n    case CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        selectedBranch: null,\n        isBranchCreated: false\n      }\n    case SELECT_BRANCH:\n      const selectedBranch = state.branches.find((branch) => branch.name === payload.branch);\n      if (selectedBranch) {\n        return {\n          ...state,\n          selectedBranch,\n          isBranchCreated: true,\n          tables: null\n        }\n      } else {\n        return {\n          ...state,\n          branchToCreated: payload.branch,\n          isBranchCreated: false,\n          selectedBranch: null,\n          tables: null\n        }\n      }\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: 'loading'\n      }\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n      }\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\"\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = referenceTables[tableName]\n    });\n    return relations;\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue} -></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\"> ->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\"> ->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const uniqValues = uniq(values);\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq, groupBy, orderBy} from 'lodash';\n\nimport Select from 'react-select';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select as SimpleSelect\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable} = this.props;\n    const {fieldSchema, fieldValid, value} = this.state;\n\n    let isReferenceField = false;\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const resourceName = foreignKeys[index].reference.resource;\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            !this.state.value &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <SimpleSelect value={value} onChange={this.handleChange}>\n          {\n            this.state.options.map((item, index) => {\n              return (\n                <option key={index} value={item.value}>{item.label}</option>\n              )\n            })\n          }\n        </SimpleSelect>\n      )\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\n\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\n\nimport {nonChangableFields} from '../constants'\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(nonChangableFields.indexOf(field.name) !== -1) {\n          value = originalValues[field.name];\n          valid = true;\n        }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.fields, (item) => item.value || '')\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                  key={index}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['RICentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'RICentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'RICentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues, capitalize, pick} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {nonChangableFields} from '../constants';\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'RICentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              schema.fields.map((field, index) => {\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={nonChangableFields.indexOf(field.name) !==-1}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || ''}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {nonChangableFields} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceForm from './NewResourceForm';\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = referenceTables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]] : newResource.data[0][foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">{!isNonchangableField ? \"Fixed with value\": \"Keep original value\"}</Label>\n        <p className=\"has-text-success\">{printValue}</p>\n        <Help isColor=\"success\">\n          {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n          {\n            fixedReferenceTable && fixedReferenceTable.map((table)=> {\n              return (\n                <li>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n              )\n            })\n          }\n        </Help>\n        <br/>\n        <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleClickCreate}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, referenceTables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = referenceTables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              this.state.fixedValues[field] &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newResource, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField, descriptor, referenceTables} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n\n    const modificationItem = modificationList[modificationIndex]\n\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber)\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = flows[e.rowNumber -1]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n  csvFormat\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFlow (array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n\nexport function downloadTable (array, fileName, ext) {\n  let file;\n  switch(ext) {\n    case 'csv': \n    default:{\n      const csvString = csvFormat(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n  }\n}\n","import React from 'react';\n\nimport {\n  Columns,\n  Column\n} from 'design-workshop';\n\n\nconst ModificationSummary = ({\n  groupedFlows,\n  updatedTables\n}) => {\n\n  return (\n    <Columns>\n      <Column>\n        <strong>fixed flows table by source</strong>\n        {\n          Object.keys(groupedFlows).map((source) => {\n            return (\n              <p>{source}.csv</p>\n            )\n          })\n        }\n      </Column>\n      <Column>\n        <div>\n          <strong>updated reference tables</strong>\n          {\n            updatedTables.map((item)=>{\n              return (\n                <p>\"{item.name}\" table: {item.updatedRows.length} row(s)</p>\n              )\n            })\n          }\n        </div>\n      </Column>\n    </Columns>\n  );\n}\n\nexport default ModificationSummary;","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose,\n  ModalCard,\n  ModalCardHeader,\n  ModalCardTitle,\n  Delete,\n  ModalCardBody,\n  ModalCardFooter\n} from 'bloomer';\n\nimport {values} from 'lodash';\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeUser = (event) => {\n    this.setState({username: event.target.value});\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.username || !this.state.token;\n    \n    if (isCommit) {\n      invalidInput = values(this.state).find((value) => !value)\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>username*:</Label>\n              <Control>\n                <Input value={this.state.username} onChange={this.handleChangeUser} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, pick} from 'lodash';\n\nimport {\n  Button,\n  Control,\n  Field,\n  Help\n} from 'design-workshop';\n\nimport {\n  csvParse\n} from 'd3-dsv';\n\nimport {exportFlows} from '../../redux/modules/flows';\n\nimport {updateRemoteFiles} from '../../redux/modules/repoData';\n\nimport {downloadFlow, downloadTable} from '../../utils/fileExporter';\nimport ModificationSummary from '../../components/ModificationSummary';\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n\n  handleOpenModal = () => {\n    this.setState({isModalShow: true})\n  }\n\n  handleCloseModal = () => {\n    this.setState({isModalShow: false})\n  }\n\n  render () {\n    const {flows, repoData, referenceTables, originalLength} = this.props;\n    const {selectedBranch, remoteUpdateStatus} = repoData;\n    const repoTables = repoData.tables;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n\n    const handleExportFlow = () => {\n      const {file, data} = flows;\n      downloadFlow(data, file.name, 'csv')\n    }\n    \n    const handleExportTables = async () => {\n      updatedTables.forEach((table)=>{\n        downloadTable(referenceTables[table.name], table.name, 'csv')\n      });\n      await new Promise(r => setTimeout(r, 1000))\n    }\n\n    const parsedFlows = csvParse(flows.data.map(d => d.join(',')).join('\\n'));\n    const groupedFlows = groupBy(parsedFlows, (item) => item['source']);\n\n\n    const handleUpdateRemoteFiles= (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          fileName: `${file}.csv`,\n          data: groupedFlows[file]\n        }\n      });\n      const tableFiles = updatedTables.map((table) => {\n        return {\n          fileName: `${table.name}.csv`,\n          data: referenceTables[table.name],\n          sha: repoTables[table.name].sha\n        }\n      })\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name\n      })\n    }\n\n    return (\n      <div>\n        <ModificationSummary groupedFlows={groupedFlows} updatedTables={updatedTables} />\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>Export fixed flows table</Button>\n          </Control>\n          <Control>\n            <Button isDisabled={!updatedTables.length} isColor=\"info\" onClick={handleExportTables}>Export updated reference tables</Button>\n          </Control>\n          <Control>\n            <Button isColor=\"info\" onClick={this.handleOpenModal}>Publish tables to \"{selectedBranch.name}\" branch</Button>\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === 'loading' && <Help isColor='success'>updating files on github...</Help>}\n          {remoteUpdateStatus === 'updated' && <Help isColor='success'>files are updated on github</Help>}\n          {remoteUpdateStatus === 'fail' && <Help isColor='danger'>fail to update files on github</Help>}\n        </Field>\n        <GithubAuthModal \n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  exportFlows,\n  updateRemoteFiles\n})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import {get} from 'axios';\nimport {userUri} from '../../config/default';\n\nimport {selectBranch} from './repoData';\n\nimport {SET_STEP} from './ui';\nexport const LOGIN_GITHUB_REQUEST = 'LOGIN_GITHUB_REQUEST';\nexport const LOGIN_GITHUB_SUCCESS = 'LOGIN_GITHUB_SUCCESS';\nexport const LOGIN_GITHUB_FAILURE = 'LOGIN_GITHUB_FAILURE';\n\nexport const loginGithub = (payload) => (dispatch, getState) => {\n  dispatch({\n    type: LOGIN_GITHUB_REQUEST,\n    payload\n  })\n  const {username, token} = payload;\n  const branch = username;\n  return get(userUri, {\n    auth: {\n      username,\n      password: token\n    }\n  })\n  .then((res) => {\n    dispatch({\n      type: LOGIN_GITHUB_SUCCESS,\n      payload\n    });\n    // const {selectedBranch} = getState().repoData;\n    dispatch(selectBranch({branch}));\n  })\n  .catch(err => {\n    console.error(err);\n    dispatch({\n      type: LOGIN_GITHUB_FAILURE\n    })\n  });\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  isLogined: false\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    // case SET_STEP:\n    //   if (payload.id === '0') {\n    //     return initialState\n    //   }\n    //   return state;\n    case LOGIN_GITHUB_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        auth: payload\n      }\n    case LOGIN_GITHUB_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        auth: null\n      }\n    default: \n      return state;\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  createBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nimport {loginGithub} from '../../redux/modules/auth';\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n  }\n   \n  handleShowLogin =()=> {\n    this.props.fetchBranches()\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginGithub(payload);\n    this.handleCloseModal()\n  }\n\n  handleCreateBranch = () => {\n    const {auth, repoData} = this.props;\n    const {branches, branchToCreated} = repoData;\n    // TODO: hardcoded\n    const refBranch = branches.find((branch) => branch.name === 'master');\n    if (refBranch) {\n      this.props.createBranch({\n        branch: branchToCreated,\n        auth,\n        reference: {\n          sha: refBranch.commit.sha\n        }\n      })\n    }\n  }\n  renderFetchTable() {\n    const {repoData, auth} = this.props;\n    const {selectedBranch, branchToCreated, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {branchToCreated &&\n          <div>\n            <Help isColor=\"danger\">No previous working branch</Help>\n            <Button isColor=\"info\" onClick={this.handleCreateBranch}>Create a new branch</Button>\n          </div>\n        }\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not create branch \"{branchToCreated}\"</Help>\n        }\n        {\n          selectedBranch && !tables &&\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables from {selectedBranch.name} branch are not loaded</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData, isLogined} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>{isLogined ? \"Re-Login\" : \"Login\"} to get branch</span>\n          </Button>\n          {isLogined ? \n            <Help isColor=\"success\">you are logined</Help> :\n            <Help isColor=\"danger\">you are  not logined</Help> \n          }\n          {isLogined && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData,\n isLogined: state.auth.isLogined,\n auth: state.auth.auth\n})\n\nexport default connect(mapStateToProps, {\n  loginGithub,\n  fetchBranches,\n  createBranch,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\nimport ModificationSummary from './ModificationSummary';\n\nconst ConfirmationModal = ({\n  flows,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              {/* {referenceTables.referenceTables && <ModificationSummary referenceTables={referenceTables} />} */}\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${distinctErrors} different invalid values, ${totalErrors} rows affected in total`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getGroupedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n    let isNextStepDisabled = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isNextStepDisabled = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isNextStepDisabled && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isNextStepDisabled}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/referenceTables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables();\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        referenceTables={referenceTables}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport auth from './modules/auth';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  auth,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}