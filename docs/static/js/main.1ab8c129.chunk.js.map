{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","redux/modules/tables.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceForm.js","components/NewResourceRow.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","objectSpread","fixed","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","fixedValue","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","errors","fieldList","error","columnNumber","data","indexOf","rowNumber","nonChangableFields","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_BRANCHES_SUCCESS","SELECT_BRANCH","tablesList","path","selectedBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","row","originalRowNumber","selectedErrors","err","columnIndex","message","push","joinedColumn","columnName","values","length","resourceName","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getResourceSchema","createSelector","resource","getRelations","tables","selectedResource","relations","key","tableName","reference","INIT_TABLES","_ref","csvParse","Base64","decode","content","d","_ref2","UPDATE_TABLE","_ref3","newTable","slice","splice","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","concat","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","referenceField","prevProps","_this$props2","_this$props3","referenceTables","showNewReference","newReference","isFormatInput","_this$state","isReferenceField","findIndex","uniq","getOptions","react_select_browser_esm","isSearchable","isClearable","generateValue","_this$state2","_this$props4","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","printValue","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","slugFields","NewResourceRow","overflow","ReferenceResourceForm","resourceDescriptor","originalValues","newResource","getSlug","preFields","capitalize","slug","handleShowNew","handleHideNew","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","_this2","fieldsInvalid","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","rows","wrap","_context","prev","next","mapValues","exchange_rates","Table","load","sent","read","forceCast","onAddNew","t0","console","stop","apply","getReferenceDescriptor","onCancel","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","fixedValueSelected","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","dispatch","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","isEqual","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","years","updatedTable","updateTable","updateFlows","rowNumbers","currencies","revalidateRows","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","_context3","downloadFile","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","DataPublish","_this$props$flows","exportFlows","DataPrep","fetchDatapackage","fetchBranches","repoData","branches","selectBranch","branch","fetchAllTables","get","branchUri","then","catch","Promise","all","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","_callee2","_context2","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","isActive","closeModal","bodyContent","onAction","footerActions","OverviewTable","collectedErrors","orderedErrors","sortBy","totalErrors","groupedErrors","groupBy","v","distinctErrors","cellValue","SchemaValidation","validateTable","isNextStepDisabled","loader","components_OverviewTable","errorsList","groupedErrorsList","replace","getOrderedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ab8c129.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 319,\n\t\"./table-schema.json\": 781,\n\t\"./topojson.json\": 320\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 780;","var map = {\n\t\"./data-package.json\": 844,\n\t\"./data-resource.json\": 845,\n\t\"./fiscal-data-package.json\": 846,\n\t\"./registry.json\": 847,\n\t\"./tabular-data-package.json\": 848,\n\t\"./tabular-data-resource.json\": 849\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 843;","var map = {\n\t\"./geojson.json\": 353,\n\t\"./table-schema.json\": 915,\n\t\"./topojson.json\": 354\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 914;","import { createReducer } from 'redux-starter-kit';\nimport {values} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === '' +originalValue) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        if (state.modificationList.find((item) => item.value === fixedValue)) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            unchangable: false,\n            // fixedValues: {\n            //   'currency': item.value.split('|')[0],\n            //   'year': fixedValues['year'],\n            //   'reporting': item.value.split('|')[2]\n            // }\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const nonChangableFields = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}","import {get} from 'axios';\nimport {apiUri, branchUri} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  selectedBranch: 'master'\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case SELECT_BRANCH:\n      return {\n        ...state,\n        selectedBranch: payload.branch,\n        tables: null\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.tables.tables;\n\nconst re = /row\\s\\d*/;\nexport const getOrderedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, tables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = tables[tableName]\n    });\n    return relations;\n})","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const UPDATE_TABLE = 'UPDATE_TABLE';\nexport const INIT_TABLES = 'INIT_TABLES';\n\nexport const initTables = (payload) => ({\n  type: INIT_TABLES,\n  payload\n})\n\nexport const updateTable = (payload) => ({\n  type: UPDATE_TABLE,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  UPDATE_TABLE: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.tables[resourceName].slice();\n    newTable.splice(newTable.length, 0, data)\n    state.tables[resourceName] = newTable\n  },\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed &&!isNonchangableField && 'rows affected'}</span>\n                              <br/>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length &&\n                                <div>\n                                  { \n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <span key={index} className=\"has-text-success\">new row added to \"{table.resourceName}\" table</span>\n                                      )\n                                    })\n                                  }\n                                </div>\n                                \n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq} from 'lodash';\n\nimport Select from 'react-select';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select as SimpleSelect\n} from 'design-workshop'\n\nimport {nonChangableFields} from '../constants'\nimport {getEnumOptions} from '../utils/formUtils';\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    if(!event) {\n      const value = '';\n      this.validateField(value);\n    }\n    else if(event.value) {\n      this.validateField(event.value);\n    }\n    else {\n      this.validateField(event.target.value);\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isFormatInput} = this.props;\n    const {fieldSchema, fieldValid, value} = this.state;\n\n    let isReferenceField = false;\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n\n    const getOptions = ({tables, resourceName, referenceField}) => {\n      const table = uniq(tables[resourceName].map((item) => item[referenceField]))\n      return table.map((item) => {\n        return {\n          value: item,\n          label: item\n        }\n      })\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const resourceName = foreignKeys[index].reference.resource;\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (nonChangableFields.indexOf(fieldSchema.name) !==-1 && !isFormatInput) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            !this.state.value &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <SimpleSelect value={value} onChange={this.handleChange}>\n          {\n            this.state.options.map((item, index) => {\n              return (\n                <option key={index} value={item.value}>{item.label}</option>\n              )\n            })\n          }\n        </SimpleSelect>\n      )\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isFormatInput={true}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\n\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\n\nimport {nonChangableFields} from '../constants'\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(nonChangableFields.indexOf(field.name) !== -1) {\n          value = originalValues[field.name];\n          valid = true;\n        }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.fields, (item) => item.value || '')\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                  key={index}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>New row to \"{resourceName}\" table</h3>\n      {Object.keys(data).map((key) => {\n        return (\n          <div>\n            <Label>{key}:</Label>\n            <p>{data[key]}</p>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues, capitalize, pick} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.newResource['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.newResource, (item) => item.value || ''),\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data)].concat([values(payload.newResource.data)]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        }\n        let table;\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              schema.fields.map((field, index) => {\n                return (\n                  <FieldInput \n                    key={index}\n                    isFormatInput={false}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    fieldValue={this.state.newResource[field.name].value}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference &&\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {nonChangableFields} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceForm from './NewResourceForm';\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = tables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? newResource.data[foreignKeyField.reference.fields[index]] : newResource.data[foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">{!isNonchangableField ? \"Fixed with value\": \"Keep original value\"}</Label>\n        <p className=\"has-text-success\">{printValue}</p>\n        <Help isColor=\"success\">\n          {!isNonchangableField && <li>total {modificationItem.errors.length} rows affected</li>}\n          {\n            fixedReferenceTable && fixedReferenceTable.map((table)=> {\n              return (\n                <li>new row is added to \"{table.resourceName}\" table</li>\n              )\n            })\n          }\n        </Help>\n        <br/>\n        <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, tables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = tables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              this.state.fixedValues[field] &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            {/* {\n              (this.state.newResource) &&\n              <Help isColor=\"success\">\n                <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                <li>total {modificationItem.errors.length} rows affected</li>\n                <li>new row will be added to \"{resourceName}\" table</li>\n              </Help>\n            } */}\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newResource, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField, descriptor, tables} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n          return '1/3'\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={tables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  tables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          tables={tables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  tables: state.tables.tables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {updateTable} from '../../redux/modules/tables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, schemaFeedback} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {schema, flows, tables} = this.props;\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n      \n      // TODO: hardcoded\n      if (payload.field === 'currency|year|reporting') {\n        const columnIndex = flows[0].indexOf('year');\n        const years = uniq(errors.map((error) => flows[error.rowNumber -1][columnIndex]));\n        fixedReferenceTable.forEach((table) => {\n          if (table.resourceName === 'currencies' || table.resourceName === 'exchange_rates') {\n            years.forEach((year) => {\n              const updatedTable = {\n                ...table,\n                data: {\n                  ...table.data, \n                  year\n                }\n              };\n              this.props.updateTable(updatedTable)\n            });\n            \n          }\n        })\n      }\n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber)\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = flows[e.rowNumber -1]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: tables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      this.props.submitModification(payload);\n\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  tables: state.tables.tables,\n  schema: getResourceSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  updateTable,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFile ( array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        fileName,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {downloadFile} from '../../utils/fileExporter';\n\nclass DataPublish extends React.Component {\n\n  render () {\n    const handleExport = () => {\n      const {file, data} = this.props.flows;\n      downloadFile(data, file.name, 'xlsx')\n    }\n    return (\n      <div>\n        <Button onClick={handleExport}>Export fixed data</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows\n})\n\nexport default connect(mapStateToProps, {exportFlows})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Label,\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n    this.props.fetchBranches()\n  }  \n\n  render () {\n    const {repoData} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n    const handleSelectBranch = (event) => {\n      this.props.selectBranch({\n        branch: event.target.value\n      })\n    }\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch});\n    }\n    return (\n      <div>\n        {branches && \n          <div>\n            <Label>Get tables from {selectedBranch} branch</Label>\n            <Select value={selectedBranch} onChange={handleSelectBranch}>\n              {\n                branches.map((item, index) => {\n                  return (\n                    <option key={index}>{item.name}</option>\n                  )\n                })\n              }\n            </Select>\n            <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button>\n            {tables &&\n              <Help isColor=\"success\">tables from {selectedBranch} branch are loaded</Help>\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchBranches,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\n\nconst ConfirmationModal = ({\n  flows,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${distinctErrors} different invalid values, ${totalErrors} rows affected in total`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getOrderedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n    let isNextStepDisabled = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isNextStepDisabled = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isNextStepDisabled && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isNextStepDisabled}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFile} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/tables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFile(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables(repoData.tables);\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport tables from './modules/tables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  tables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}