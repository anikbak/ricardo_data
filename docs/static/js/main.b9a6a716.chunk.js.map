{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","redux/modules/repoData.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","redux/modules/flows.js","redux/modules/ui.js","redux/modules/schemaValidation.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","constants.js","utils/fileParser.js","components/FeedbackTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","tablesList","name","path","initialState","DataPrep","this","props","fetchDatapackage","fetchAllTables","branch","repoData","react_default","a","createElement","tables","datapackage","React","Component","connect","state","payload","dispatch","type","Promise","all","table","get","concat","apiUri","then","res","forEach","item","data","split","catch","error","UPDATE_FLOW","IMPORT_FLOWS","SET_STEP","setStep","steps","title","selectedStep","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","tableValidated","schemaFeedback","headerFeedback","getSchema","schemaValidation","descriptor","resources","find","resource","schema","getRelations","foreignKeys","getForeignKeys","relations","key","tableName","reference","HeaderValidation","_ref","diff","headerNames","fieldNames","diffLength","length","difference","className","field","Math","abs","style","display","flexFlow","columnName","index","FileUpload","importFlows","validateHeader","source","objectSpread","status","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","Table","load","slice","sent","read","limit","valid","headers","t0","console","log","stop","components","maxSize","onDrop","_ref2","file","slicedToArray","reject","reader","FileReader","onload","event","bstr","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","blankrows","undefined","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","isSize","isColor","onClick","components_HeaderValidation","FeedbackTable","_this$props","_this$props$columnNam","columnNames","_this$props$values","values","position","width","height","obj","rowIndex","wordBreak","color","value","place","errorType","message","SchemaValidation","flows","validateTable","_this$props2","errorTypes","loader","errors","components_FeedbackTable","output","row","rowNumber","tableRow","reduce","selectedErrors","err","selectedError","columnNumber","defineProperty","push","getFeedbackTable","_callee4","_context5","delegateYield","_callee3","tableLength","chunk","i","_loop","_context4","offset","chunkTable","rows","chunkErrors","_context3","forceCast","filter","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isDisabled","isWorkspace","isSecondary","isPrimary","ui","containers_DataPrep","containers_Layout","containers_FileUpload","containers_SchemaValidation","renderChildren","Boolean","window","location","hostname","match","combineReducers","arguments","action","csvParse","Base64","decode","content","JSON","parse","persistConfig","storage","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9a6a716.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 299,\n\t\"./table-schema.json\": 767,\n\t\"./topojson.json\": 300\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 766;","var map = {\n\t\"./data-package.json\": 835,\n\t\"./data-resource.json\": 836,\n\t\"./fiscal-data-package.json\": 837,\n\t\"./registry.json\": 838,\n\t\"./tabular-data-package.json\": 839,\n\t\"./tabular-data-resource.json\": 840\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 834;","import {get} from 'axios';\nimport {apiUri, repoUrl} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\n\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  // {\n  //   name: 'currencies',\n  //   path: 'data/currencies.csv'\n  // },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  // {\n  //   name: 'expimp_spegen',\n  //   path: 'data/expimp_spegen.csv'\n\n  // }\n];\n\n/**\n * ACTIONS\n */\n export const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      // newDescriptor = {...state.descriptor};\n      // newDescriptor.resources.forEach((resource)=> {\n      //   if (payload[resource.name]) {\n      //     delete resource.path;\n      //     resource.data = csvParseRows(atob(payload[resource.name].content))\n      //   }\n      // });\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    this.props.fetchDatapackage()\n    this.props.fetchAllTables({branch:'master'})\n  }\n\n  render () {\n    const {repoData} = this.props\n    return (\n      <div>\n        {!repoData.tables && <span>loading tables</span>}\n        {!repoData.datapackage && <span>loading datapackage</span>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","export const UPDATE_FLOW = 'UPDATE_FLOW';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\n\nexport const updateFlow = (payload) => ({\n  type: UPDATE_FLOW,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case IMPORT_FLOWS: \n      return payload;\n    case UPDATE_FLOW:\n      return {\n        ...state,\n        data: payload.data\n      };\n    default:\n     return state\n  }\n}","export const SET_STEP = 'SET_STEP';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  // {\n  //   id: '1',\n  //   name: 'Data Summary',\n  //   title: 'Statistics summary of your uploaded data'\n  // },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  // {\n  //   id: '3',\n  //   name: 'Data Validation',\n  //   title: 'Data validation'\n  // },\n  // {\n  //   id: '4',\n  //   name: 'Export/Publish Data',\n  //   title: 'Export or Publish your data to Github'\n  // }\n];\n\nconst initialState = {\n  steps, \n  selectedStep: steps[0]\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...state,\n        selectedStep: steps.find((step) => payload.id === step.id)\n      }\n    default:\n     return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {Package} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor, relations} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      const dataPackage = await Package.load(descriptor, {basePath: repoUrl});\n      resource = dataPackage.getResource('flows');\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    try {\n      const table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.log(error)\n      dispatch({\n        type: VALIDATE_HEADER_FAILURE,\n        valid: false,\n        payload: error\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {\n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => error.rowNumber = error.rowNumber + chunk * offset -offset)\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  tableValidated: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  tables: null\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state\n    case FETCH_TABLES_SUCCESS:\n      const tables = {}\n      Object.keys(payload).forEach((id) => {\n        tables[id] = csvParse(Base64.decode(payload[id].content))\n      })\n      return {\n        ...state,\n        tables\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    // case IMPORT_FLOWS:\n    //   newDescriptor = {...state.descriptor};\n    //   // newDescriptor.resources.forEach((resource)=> {\n    //   //   resource.path = `${repoUrl}/${resource.path}`\n    //   // });\n    //   delete newDescriptor.resources[0].path\n    //   // newDescriptor.resources[0].dialect = {\n    //   //   delimiter: ';',\n    //   //   header: true\n    //   // }\n    //   newDescriptor.resources[0].data = payload.data\n    //   return {\n    //     ...state,\n    //     descriptor: newDescriptor\n    //   }\n    // case VALIDATE_RESOURCE_SUCCESS:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: true\n    //     }\n    //   }\n    // case VALIDATE_RESOURCE_FAILURE:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: false,\n    //       ...payload\n    //     }\n    //   }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nexport const getSchema = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  return resource.schema\n}\n\nexport const getRelations = (state) => {\n  const foreignKeys = getForeignKeys(state)\n  const relations = {};\n  foreignKeys.forEach((key) => {\n    const tableName = key.reference.resource;\n    relations[tableName] = state.schemaValidation.tables[tableName]\n  });\n  return relations;\n}\n\nexport const getForeignKeys = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  const {foreignKeys} = resource.schema;\n  return foreignKeys\n}","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  \n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n\n  return (\n    <div>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        flexFlow: 'row nowrap',\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers</div>\n          {\n            headerNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getSchema\n} from '../../redux/modules/schemaValidation';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DropZone\n        maxSize={MAXIMUM_FILE_SIZE}\n        onDrop={handleDrop}\n        onDropRejected={handleDropRejected}\n        isSize=\"small\">\n        <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n      </DropZone>\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>validating fields</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div>\n          <span>data fields are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div>\n          <span className=\"has-text-danger has-text-weight-bold\">Fields are invalid, plase fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\n","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {type: 'binary'});\n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {\n  Field,\n  Control,\n  Input,\n  Help,\n  HelpPin,\n  ActionableTable\n} from 'design-workshop';\n\nclass FeedbackTable extends React.Component {\n\n  render() {\n    const {\n      className,\n      columnNames = [],\n      values = []} = this.props;\n    return (\n      <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n        <div className={`action-table ${className}`}>\n          <div className={'action-table-header'}>\n            {\n              columnNames.map((columnName, index) => {\n                return (\n                  <div key={index} className=\"table-cell\">\n                    {columnName}\n                  </div>\n                );\n              })\n            }\n          </div>\n          <div className={'action-table-main'}>\n            {\n              values.map((obj, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, index) => {\n                      return (\n                        <div key={index} className=\"table-cell\" style={{ wordBreak: 'break-all', color: obj[columnName].valid ? 'black': 'red'}}>\n                          {obj[columnName].value}\n                          {!obj[columnName].valid && \n                            <HelpPin place='right'>{obj[columnName].errorType}:{obj[columnName].message}</HelpPin>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport FeedbackTable from '../../components/FeedbackTable';\nimport {validateTable, getRelations, getForeignKeys, getSchema} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, schemaFeedback, relations} = this.props;\n    this.props.validateTable({source:flows, schema, relations});\n  }\n  render() {\n    const {flows, schema, schemaFeedback, relations} = this.props;\n\n    const columnNames = flows[0]\n    const errorTypes = ['ERROR_FORMAT', 'ERROR_UNIQUE_KEY', 'ERROR_FOREIGN_KEY'];\n\n    const getFeedbackTable = () => {\n      const output = []\n      schemaFeedback.errors.forEach((error)=>{\n        const row = flows[error.rowNumber -1]\n        const tableRow = columnNames.reduce((res, name, index) => {\n          let item = {\n            name,\n            value: row[index],\n            valid: true\n          };\n          errorTypes.forEach((errorType) => {\n            const selectedErrors = error.errors.find((err) => err.type === errorType)\n            if (selectedErrors && selectedErrors.errors) {\n              const selectedError = selectedErrors.errors.find((err) => {\n                if (err.columnNumber) return err.columnNumber === index + 1;\n                else if (err.columnName) return err.columnName[0] === name;\n                else return;\n              });\n              if (selectedError) {\n                item = {\n                  ...item, \n                  valid: false, \n                  errorType,\n                  message: selectedError.message,\n                }\n              }\n            }\n          })\n          return {...res, [name]: item}\n        }, {});\n        output.push(tableRow)\n      });\n      return output;\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.errors &&\n          <div>\n            <span>Found {schemaFeedback.errors.length} rows has errors</span>\n            {<FeedbackTable\n              values={getFeedbackTable()}\n              columnNames={columnNames} /> }\n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span>Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  relations: state.schemaValidation.descriptor && getRelations(state),\n  foreignKeys: state.schemaValidation.descriptor && getForeignKeys(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback\n})\n\n\nexport default connect(mapStateToProps, {validateTable})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataPrep from './containers/DataPrep';\nimport DataSummary from './containers/DataSummary';\nimport FileUpload from './containers/FileUpload';\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\nimport styles from 'design-workshop/themes/default/style.css';\n\nimport { \n  setStep\n} from './redux/modules/ui';\n\nconst App = ({\n  steps,\n  selectedStep,\n  repoData,\n  //actions\n  setStep\n}) => {\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <DataPrep />\n      { repoData.descriptor &&\n        <Layout \n          steps={steps}\n          selectedStep={selectedStep}\n          onSetStep={setStep}>\n          {renderChildren()}\n        </Layout>\n      }\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\n\nexport default combineReducers({\n  ui,\n  flows,\n  schemaValidation,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    rootReducer,\n    // persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}