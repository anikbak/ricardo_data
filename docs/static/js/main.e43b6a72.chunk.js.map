{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FormatCorrection.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/NewResourceForm.js","components/ForeignkeyCorrection.js","redux/modules/tables.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","HIDE_MODIFICATION","SELECT_ERROR","index","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","objectSpread","fixed","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","errors","fixedValues","fieldList","forEach","error","field","columnNumber","data","indexOf","rowNumber","SummaryTable","_ref","className","onSelectError","columnNames","react_default","a","createElement","style","position","width","height","concat","columnName","key","item","errorIndex","value","message","fixedValue","values","join","handleSelectError","columnIndex","isNull","components","length","fixedReferenceTable","isOutlined","isColor","onClick","ContextTable","flows","modificationItem","errorColumn","split","rowIndex","originalValue","errorColumnIndex","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","FormatCorrection","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hydrateState","_this$props","fieldDescriptor","fieldSchema","Field","constraints","enum","showSolving","fieldValid","validateField","castValue","setState","valid","handleChange","event","preventDefault","target","handleSubmitForm","_this$state","defineProperty","onSubmitForm","handleShowSolving","handleHideSolving","prevProps","printValue","_this$state2","isSubmitDisabled","onChange","isGrouped","isDisabled","isSize","renderOriginal","renderFixed","renderInput","React","Component","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","reporting","partner","export_import|special_general","currency|year|reporting","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_BRANCHES_SUCCESS","SELECT_BRANCH","tablesList","path","selectedBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","getCollectedErrors","schema","foreignKeys","allFields","foreignKeysList","reduce","res","getForeignKeyFields","d","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","errorType","foreignKeyErrors","joinedFields","row","selectedErrors","find","err","push","joinedColumn","resourceName","schemaFeedback","headerFeedback","descriptor","tables","getResourceName","schemaValidation","getResources","resources","getResourceSchema","createSelector","resource","getRelations","selectedResource","relations","tableName","reference","nonChangableFields","slugFields","FieldInput","getStateFromProps","fieldValue","fieldName","_this$props2","NewResourceForm","_this2","_this2$props","resourceDescriptor","getSlug","preFields","f","capitalize","handleFieldChange","slug","_this3","fieldsInvalid","overflow","NewResourceForm_FieldInput","onCancel","mapValues","onAddNew","ForeignKeyCorrection","initFixedValues","showNewForm","newRow","onUpdateTable","handleClickCreate","handleAddNewRow","handleCancel","handleSelectExist","_this$props3","referenceField","generateValue","fixedValueSelected","react_select_browser_esm","isSearchable","isClearable","_this$props4","referenceFieldResource","isSubmitEnabled","renderSolving","flex","components_NewResourceForm","connect","validateResource","dispatch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Resource","load","read","t0","console","log","multiple","messages","stop","INIT_TABLES","csvParse","Base64","decode","content","year","_ref2","UPDATE_TABLE","_ref3","newTable","slice","splice","updateTable","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","isEqual","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","submitModification","updateFlows","hideModification","marginLeft","goPrevError","goNextError","modification","ui","downloadFile","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","DataPublish","_this$props$flows","exportFlows","DataPrep","fetchDatapackage","fetchBranches","repoData","branches","selectBranch","branch","fetchAllTables","get","branchUri","then","catch","Promise","all","table","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","difference","validationMap","Math","abs","FileUpload","importFlows","validateHeader","status","_callee2","_context2","Table","sent","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","isActive","closeModal","bodyContent","onAction","footerActions","OverviewTable","collectedErrors","orderedErrors","sortBy","totalErrors","groupedErrors","groupBy","v","distinctErrors","cellValue","SchemaValidation","validateTable","re","loader","components_OverviewTable","errorsList","groupedErrorsList","groupedValue","yearRange","years","min","max","replace","getOrderedErrors","startModification","_callee4","_context5","delegateYield","_callee3","tableLength","chunk","i","_loop","_context4","offset","chunkTable","rows","chunkErrors","_context3","forceCast","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e43b6a72.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 261,\n\t\"./table-schema.json\": 665,\n\t\"./topojson.json\": 262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 664;","var map = {\n\t\"./geojson.json\": 345,\n\t\"./table-schema.json\": 853,\n\t\"./topojson.json\": 346\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 852;","var map = {\n\t\"./data-package.json\": 892,\n\t\"./data-resource.json\": 893,\n\t\"./fiscal-data-package.json\": 894,\n\t\"./registry.json\": 895,\n\t\"./tabular-data-package.json\": 896,\n\t\"./tabular-data-resource.json\": 897\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 891;","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n    // if (state.modificationList[payload.index].errorType === 'ERROR_FOREIGN_KEY') {\n    //   state.foreignKeyField = state.modificationList[payload.index].field\n    // }\n    // else {\n    //   state.foreignKeyField = null\n    // }\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n// SELECTORS\n// const getModificationIndex = state => state.ui.modificationIndex;\n\n// const getReferenceResource = state => state.modification.referenceResource;\n\n// export const getTable = createSelector(\n  \n// )\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import React from 'react';\nimport {isNull, values} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', '']\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && 'rows affected'}</span>\n                              <br/>\n                              {\n                                item.fixedReferenceTable && \n                                <span className=\"has-text-success\">new row added to \"{item.fixedReferenceTable}\" table</span>\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        let originalValue = value;\n                        if (fixedValues && errorColumn) {\n                          const errorColumnIndex = field.split('|').indexOf(columnName);\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                          originalValue = (''+value).split('|')[errorColumnIndex]\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n","import React from 'react';\nimport {Field, Schema} from 'tableschema';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'  \n\nimport {getEnumOptions} from '../utils/formUtils' \n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n\n    let fixedValue = modificationItem.value;\n    let options;\n    if (modificationItem.fixedValues) fixedValue = modificationItem.fixedValues[fieldSchema.name];\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required);\n      // fixedValue = options[0].value;\n    }\n    return {\n      fieldSchema,\n      fixedValue,\n      options,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    try {\n      fieldSchema.castValue(value);\n      this.setState({\n        fixedValue: value,\n        fieldValid: {\n          valid: true\n        }\n      })\n    } catch(error) {\n      this.setState({\n        fixedValue: value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault()\n    this.validateField(event.target.value)\n  }\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem} = this.props;\n    const {value, errors}= modificationItem;\n    const {fieldSchema, fixedValue, fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n    const printValue = fixedValue.length === 0 ? 'none' : fixedValue;\n\n    return (\n      <div>\n        {\n          (!fieldSchema.constraints || !fieldSchema.constraints.enum) &&\n          <FieldContainer>\n            <Label>Fix with a new input</Label>\n            <Control>\n              <Input\n                value={this.state.fixedValue}\n                onChange={this.handleChange} />\n            </Control>\n            {\n              fieldValid!==null && !fieldValid.valid && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n            }\n            {\n              !isSubmitDisabled &&\n              <Help isColor=\"success\">change {value} to {printValue}, total {errors.length} rows affected</Help>\n            }\n          </FieldContainer>\n        }\n        \n        {\n          fieldSchema.constraints && fieldSchema.constraints.enum &&\n          <FieldContainer>\n            <Label>Select a value of \"{fieldSchema.name}\" from:</Label>\n            <Control>\n              <Select value={this.state.fixedValue} onChange={this.handleChange}>\n                {\n                  this.state.options\n                    .map((item, index) => {\n                    return (\n                      <option key={index} value={item.value}>{item.label}</option>\n                    )\n                  })\n                }\n              </Select>\n              {\n                !isSubmitDisabled &&\n                  <Help isColor=\"success\">change {value} to {printValue}, total {errors.length} rows affected</Help>\n              }\n            </Control>\n          </FieldContainer>\n        }\n\n        <FieldContainer isGrouped>  \n          <Control>\n            <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n          </Control>\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"species_bullions\": 3,\n  \"transport_type\": 4,\n  \"statistical_period\": 5,\n  \"partner_sum\": 6,\n  \"world_trade_type\": 7,\n  \"notes\": 8,\n  \"source\": 9,\n  \"reporting\": 10,\n  \"partner\": 11,\n  \"export_import|special_general\": 12,\n  \"currency|year|reporting\": 13\n}","import {get} from 'axios';\nimport {apiUri, branchUri} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  selectedBranch: 'master'\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case SELECT_BRANCH:\n      return {\n        ...state,\n        selectedBranch: payload.branch,\n        tables: null\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.log(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const rowNumber = error.rowNumber;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  \n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n  tables: null\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    // case INIT_TABLES:\n    // case FETCH_TABLES_SUCCESS:\n    //   const tables = {}\n    //   Object.keys(payload).forEach((id) => {\n    //     tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n    //       if (d.year) {\n    //         return {\n    //           ...d,\n    //           year: +d.year\n    //         }\n    //       }\n    //       return d\n    //     })\n    //   })\n    //   return {\n    //     ...state,\n    //     tables\n    //   }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    // case UPDATE_TABLE:\n    //   const {row, resourceName} = payload;\n    //   const newTable = state.tables[resourceName].slice();\n    //   newTable.splice(newTable.length, 0, row);\n    //   delete state.tables[resourceName]      \n    //   return {\n    //     ...state,\n    //     tables: {\n    //       ...state.tables,\n    //       [resourceName]: newTable\n    //     }\n    //   }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.tables.tables;\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, tables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = tables[tableName]\n    });\n    return relations;\n})","import React from 'react';\n\nimport {Field, Schema} from 'tableschema';\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'\n\nimport {getEnumOptions} from '../utils/formUtils';\n\nconst nonChangableFields = ['slug', 'export_import', 'special_general']\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    this.validateField(event.target.value);\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        { (nonChangableFields.indexOf(fieldSchema.name) !==-1) ?\n          <Control>\n            <span>{this.props.fieldValue}</span>\n          </Control> :\n          <Control>\n            {\n              fieldSchema.constraints && fieldSchema.constraints.enum ?\n              <Select value={value} onChange={this.handleChange}>\n                {\n                  this.state.options.map((item, index) => {\n                    return (\n                      <option key={index} value={item.value}>{item.label}</option>\n                    )\n                  })\n                }\n              </Select>:\n              <Input\n                value={value}\n                onChange={this.handleChange} />\n            }\n          </Control>}\n        {\n          fieldValid && fieldValid.message && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nconst FieldSlug = ({fieldDescriptor, field}) => {\n  return (\n    <FieldContainer>\n      <Label>{fieldDescriptor.name}*</Label>\n      <Control>\n        <span>{field.value}</span>\n      </Control>\n      {\n        !field.value &&<Help isColor=\"danger\">slug is required</Help>\n      }\n    </FieldContainer>\n  )\n}\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValue} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(field.name === 'export_import') {\n        value = originalValue.split('|')[0]\n      }\n      if(field.name === 'special_general') {\n        value = originalValue.split('|')[1]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const data = mapValues(this.state.fields, (item) => item.value || '');\n      this.props.onAddNew(data)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>Add a new row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                key={index}\n                fieldDescriptor={field} \n                fieldValue={this.state.fields[field.name].value}\n                onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\n\nimport NewResourceForm from './NewResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newRow: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const resourceName = this.props.foreignKeyField.reference.resource;  \n    const {fixedValues, newRow} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable: newRow ? resourceName :null,\n    });\n    if (newRow) {\n      this.props.onUpdateTable({\n        row: newRow,\n        resourceName\n      });\n    }\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showNewForm: true,\n      newRow: null\n    })\n  }\n\n  handleAddNewRow = (row) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = tables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? row[foreignKeyField.reference.fields[index]] : row[foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newRow: row,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newRow: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newRow: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {fixedValues}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? 'none': fixedValue;\n    const resourceName = foreignKeyField.reference.resource;  \n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">\n          <li>total {modificationItem.errors.length} rows affected</li>\n          <li>new row will be added to \"{resourceName}\" table</li>\n        </Help>\n        <br/>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, tables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = this.state.newRow ? generateValue(''): generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = tables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              fixedValueSelected.value !== '' && !fixedReferenceTable &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Label>Not found one</Label>\n            <Button isColor=\"info\" onClick={this.handleClickCreate}>Create new item</Button>\n            {\n              (this.state.newRow) &&\n              <Help isColor=\"success\">\n                <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                <li>total {modificationItem.errors.length} rows affected</li>\n                <li>new row will be added to \"{resourceName}\" table</li>\n              </Help>\n            }\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newRow, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField,descriptor} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    // const referenceField = foreignKeyField.reference.fields\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    const fixedValueSelected = this.state.newRow ? generateValue(''): generateValue(fixedValues[field])\n\n    const isSubmitEnabled= this.state.newRow || fixedValueSelected.value;\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize='1/2'>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            {\n              this.state.showNewForm && \n              (modificationItem.field === 'source'|| modificationItem.field === 'export_import|special_general') &&\n              <Column isSize='1/2' className='new-resource-form' style={{flex: 'auto'}}>\n                <NewResourceForm \n                  originalValue={modificationItem.value}\n                  resourceDescriptor={referenceFieldResource} \n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewRow} />\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>  \n              <Control>\n                <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n              </Control>\n              <Control>\n                {\n                  isSubmitEnabled &&\n                    <Button isColor=\"info\" onClick={this.handleSubmitForm}>Confirm this fix</Button>\n                }\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const UPDATE_TABLE = 'UPDATE_TABLE';\nexport const INIT_TABLES = 'INIT_TABLES';\n\nexport const initTables = (payload) => ({\n  type: INIT_TABLES,\n  payload\n})\n\nexport const updateTable = (payload) => ({\n  type: UPDATE_TABLE,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  UPDATE_TABLE: (state, {payload}) => {\n    const {row, resourceName} = payload;\n    const newTable = state.tables[resourceName].slice();\n    newTable.splice(newTable.length, 0, row)\n    state.tables[resourceName] = newTable\n  },\n})","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nimport {updateTable} from '../../redux/modules/tables';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  tables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n  updateTable,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          tables={tables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onUpdateTable={updateTable}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  tables: state.tables.tables\n});\n\nexport default connect(mapStateToProps, {updateTable})(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\n\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\n\nimport {submitModification} from '../../redux/modules/modification';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {index} = payload;\n      this.props.submitModification(payload);\n      this.props.updateFlows(payload);\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFile ( array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        fileName,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {downloadFile} from '../../utils/fileExporter';\n\nclass DataPublish extends React.Component {\n\n  render () {\n    const handleExport = () => {\n      const {file, data} = this.props.flows;\n      downloadFile(data, file.name, 'xlsx')\n    }\n    return (\n      <div>\n        <Button onClick={handleExport}>Export fixed data</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows\n})\n\nexport default connect(mapStateToProps, {exportFlows})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Label,\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n    this.props.fetchBranches()\n  }  \n\n  render () {\n    const {repoData} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n    const handleSelectBranch = (event) => {\n      this.props.selectBranch({\n        branch: event.target.value\n      })\n    }\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch});\n    }\n    return (\n      <div>\n        {branches && \n          <div>\n            <Label>Get tables from {selectedBranch} branch</Label>\n            <Select value={selectedBranch} onChange={handleSelectBranch}>\n              {\n                branches.map((item, index) => {\n                  return (\n                    <option key={index}>{item.name}</option>\n                  )\n                })\n              }\n            </Select>\n            <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button>\n            {tables &&\n              <Help isColor=\"success\">tables from {selectedBranch} branch are loaded</Help>\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchBranches,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\n\nconst ConfirmationModal = ({\n  flows,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${totalErrors} rows affected in total, ${distinctErrors} different invalid values`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, sortBy, values, max, min} from 'lodash';\n\nimport {RANKED_FIELDS} from '../../constants';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\n// import FeedbackTable from '../../components/FeedbackTable';\n// import AggregatedTable from '../../components/AggregatedTable';\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n    const re = /row\\s\\d*/;\n\n    const getOrderedErrors = (collectedErrors) => {\n      const errorsList = values(collectedErrors).reduce((res, item) => {\n        return res.concat(item.errors)\n      },[]);\n      \n      const groupedErrorsList = \n        values(groupBy(errorsList,(v) => {\n          if (v.field !== 'currency|year|reporting') return (v.field + v.value)\n          else {\n            const groupedValue = v.value.split('|')[0] + v.value.split('|')[2]\n            return v.field + groupedValue\n          }\n        }))\n        .map((errors, index)=> {\n          const fieldName = errors[0].field;\n          let yearRange;\n          if (fieldName === 'currency|year|reporting') {\n            const years = errors.map((error) => error.value.split('|')[1]);\n            yearRange = years.length > 0 ? `${min(years)}-${max(years)}` : years[0]\n          }\n          const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n          return {\n            index,\n            field: errors[0].field,\n            errorType: errors[0].errorType,\n            fixed: false,\n            message: errors[0].message.replace(re, `${errors.length} rows`),\n            value, \n            errors\n          }\n        });\n      return sortBy(groupedErrorsList, (field) => {\n        return RANKED_FIELDS[field.name]\n      });\n    }\n\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              {/* Found format errors in {Object.keys(schemaFeedback.collectedErrors.formatErrors).length} columns, ForeignKey errors in {Object.keys(schemaFeedback.collectedErrors.foreignKeyErrors).length} columns, {schemaFeedback.errors.length} rows */}\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFile} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/tables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFile(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables(repoData.tables);\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport tables from './modules/tables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  tables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}