{"version":3,"sources":["redux/modules/modification.js","constants.js","redux/modules/repoData.js","redux/modules/referenceTables.js","redux/modules/ui.js","redux/modules/flows.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","components/LeaveModificationModal.js","App.js","serviceWorker.js","redux/modules/auth.js","redux/rootReducer.js","redux/configureStore.js","index.js","../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$"],"names":["START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","id","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","Object","objectSpread","fixed","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","map","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","LABEL_FIELDS_FK_SOLVED","export_import","special_general","NON_CHANGABLE_FIELDS","SOURCE_SLUG_FIELDS","SOURCE_SUGGESTION_FIELDS","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_TABLES_FAILURE","FETCH_BRANCHES_SUCCESS","LOGIN_CREATE_BRANCH_SUCCESS","LOGIN_CREATE_BRANCH_FAILURE","UPDATE_REMOTE_FILES_REQUEST","UPDATE_REMOTE_FILES_SUCCESS","UPDATE_REMOTE_FILES_FAILURE","tablesList","name","path","INIT_TABLES","_ref","referenceTables","originalLength","keys","csvParse","Base64","decode","content","d","length","DELETE_TABLE_ROW","_ref2","data","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","apply","concat","toConsumableArray","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","dispatch","type","steps","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","indexOf","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getResourceSchema","createSelector","resource","getRelations","selectedResource","relations","key","tableName","reference","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","e","label","getOptions","tables","referenceField","uniq","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","options","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","suggestions","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","onSuggestionsFetchRequested","suggestedOptions","inputValue","trim","toLowerCase","inputLength","option","getSuggestions","onSuggestionsClearRequested","handleSuggestionChange","newValue","renderSuggestion","suggestion","prevProps","_this$props2","_this2","_this$props3","showNewReference","newReference","isNonchangable","isValidationField","_this$state","inputProps","placeholder","isReferenceField","generateValue","findIndex","react_select_browser_esm","isSearchable","isClearable","dist_default","getSuggestionValue","_this$state2","_this$props4","required","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","printValue","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","multiParts","continentValue","continents","getContinent","fieldsInvalid","sortedFields","sortBy","_this2$state$fields$f","isMulti","onCancel","newResource","mapValues","part","RICname_group","RICname_part","onAddNew","ReferenceResourceForm","originalValues","prefixedValues","getSlug","preFields","capitalize","replace","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","_prefixedValues","rows","wrap","_context","prev","next","exchange_rates","modified_currency","Table","load","sent","read","forceCast","t0","console","stop","arguments","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","fixedValueSelected","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","currentIndex","DataModification_ModificationComponent","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","_context3","downloadFlow","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","csvFormat","GithubAuthModal","handleChangeUser","username","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isActive","isCommit","closeModal","invalidInput","bloomer_min","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","repoTables","updatedTables","updatedRows","parsedFlows","groupedFlows","groupBy","href","components_GithubAuthModal","auth","flowFiles","tableFiles","sha","updateRemoteFiles","files","branch","exportFlows","github","Octokat","password","repo","baseReference","treeItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","fileGit","filePath","tree","commit","repos","owner","repoName","fetch","git","refs","undefined","Symbol","iterator","done","blobs","create","encode","encoding","mode","return","finish","trees","base_tree","object","commits","parents","update","t1","DataPrep","handleShowLogin","handleLogin","loginCreateBranch","fetchDatapackage","isBranchCreated","fetchAllTables","renderFetchTable","_callee2","branches","refBranch","_context2","items","ref","Promise","all","get","apiUri","then","catch","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","resolve","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","v","distinctErrors","missingRows","SchemaValidation","validateTable","isRequiredFieldMissing","loader","components_OverviewTable","errorsList","groupedErrorsList","getGroupedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","LeaveModificationModal","onSelectDiscard","onSelectDownload","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_LeaveModificationModal","Boolean","window","location","hostname","match","LOGIN_GITHUB_SUCCESS","LOGIN_GITHUB_FAILURE","isLogined","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json"],"mappings":"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","file":"static/js/main.b10ed472.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit';\nimport {values, isEqual} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\nexport const DEFAULT_REF_BRANCH = 'master';\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}\n\nexport const LABEL_FIELDS_FK_SOLVED = {\n  'partner': 'RICname',\n  'reporting': 'RICname',\n  'currency': 'modified_currency',\n  'export_import': 'modified_export_import',\n  'special_general': 'modified_special_general'\n}\nexport const NON_CHANGABLE_FIELDS = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const SOURCE_SLUG_FIELDS = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nexport const SOURCE_SUGGESTION_FIELDS = ['name', 'editor', 'country', 'volumn_number', 'shelf_number']","import {all, get, put, post, spread} from 'axios';\nimport {apiUri, branchUri, referenceUri, owner, repoName} from '../../config/default';\nimport {DEFAULT_REF_BRANCH} from '../../constants';\n\nimport Octokat from 'octokat';\n\nimport { Base64 } from 'js-base64';\nimport {\n  csvFormat\n} from 'd3-dsv';\n\nimport {INIT_TABLES} from './referenceTables';\nimport { SET_STEP } from './ui';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const CREATE_BRANCH_REQUEST = 'CREATE_BRANCH_REQUEST';\nexport const CREATE_BRANCH_SUCCESS = 'CREATE_BRANCH_SUCCESS';\nexport const CREATE_BRANCH_FAILURE = 'CREATE_BRANCH_FAILURE';\n\nexport const LOGIN_CREATE_BRANCH_REQUEST = 'LOGIN_CREATE_BRANCH_REQUEST';\nexport const LOGIN_CREATE_BRANCH_SUCCESS = 'LOGIN_CREATE_BRANCH_SUCCESS';\nexport const LOGIN_CREATE_BRANCH_FAILURE = 'LOGIN_CREATE_BRANCH_FAILURE';\n\nexport const UPDATE_REMOTE_FILES_REQUEST = 'UPDATE_REMOTE_FILES_REQUEST';\nexport const UPDATE_REMOTE_FILES_SUCCESS = 'UPDATE_REMOTE_FILES_SUCCESS';\nexport const UPDATE_REMOTE_FILES_FAILURE = 'UPDATE_REMOTE_FILES_FAILURE';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  {\n    name: 'RICentities_groups',\n    path: 'data/RICentities_groups.csv'\n  },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\nconst DEFAULT_MESSAGE = 'update data'\n/**\n * ACTIONS\n */\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REMOTE_FILES_REQUEST,\n  });\n  const {files, branch, auth} = payload;\n\n  const github = new Octokat({\n    username: auth.username,\n    password: auth.token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let treeItems = [];\n      for (let file of files) {\n        let fileGit = await repo.git.blobs.create({content: Base64.encode(csvFormat(file.data)), encoding: 'base64'});\n        let filePath = `data/${file.fileName}`;\n        treeItems.push({\n          path: filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\"\n        })\n      } \n  \n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha]\n      });\n  \n      baseReference.update({sha: commit.sha});\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n      });\n    } catch(err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err\n      });\n    }\n  })\n}\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST\n  });\n\n  const {auth, branch, reference} = payload;\n  const data = {\n    \"ref\": `refs/heads/${branch}`,\n    \"sha\": reference.sha\n  };\n  \n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token\n    }\n  })\n  .then((res) => dispatch({\n    type: CREATE_BRANCH_SUCCESS,\n    payload: {\n      name: auth.username,\n      ref: res.data\n    }\n  })).catch((error) => dispatch({\n    type: CREATE_BRANCH_FAILURE,\n    error\n  }))\n}\n\nexport const  loginCreateBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_CREATE_BRANCH_REQUEST,\n    payload\n  })\n  const {username, token} = payload;\n\n  const github = new Octokat({\n    username: username,\n    password: token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let branches = await repo.branches.fetch();\n      let selectedBranch = branches.items.find((branch) => branch.name === username);\n      if (!selectedBranch) {\n        const refBranch = branches.items.find((branch) => branch.name === DEFAULT_REF_BRANCH);\n        selectedBranch = await repo.git.refs.create({\n          ref: `refs/heads/${username}`,\n          sha: refBranch.commit.sha\n        })\n      }\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: username,\n          ref: selectedBranch\n        }\n      })\n\n    } catch(error) {\n      console.error(error)\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_FAILURE,\n        payload: {\n          error\n        }\n      })\n    }\n  })\n  \n\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null\n      }\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_TABLES_FAILURE:\n      return {\n        ...state,\n        tables: null\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case LOGIN_CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        selectedBranch: payload,\n        isBranchCreated: true,\n      }\n    case LOGIN_CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        selectedBranch: null,\n        isBranchCreated: false\n      }\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: 'loading'\n      }\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n      }\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\"\n      }\n    default:\n      return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {pullAll, isEqual} from 'lodash';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      referenceTables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {\n  START_MODIFICATION,\n} from './modification';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => (dispatch) => {\n  if (payload.id === '0') {\n    dispatch({\n      type: INIT_TABLES\n    })\n  }\n  dispatch({\n    type: SET_STEP,\n    payload\n  });\n}\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = referenceTables[tableName]\n    });\n    return relations;\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {NON_CHANGABLE_FIELDS} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue}-></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const uniqValues = uniq(values);\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq, groupBy, orderBy} from 'lodash';\n\nimport Select from 'react-select';\nimport Autosuggest from 'react-autosuggest';\nimport theme from './theme.css';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options,\n      suggestions: []\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = (value, suggestedOptions) => {\n    const getSuggestions = (value, options) => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0 ? [] : options.filter(option =>\n        option.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    };\n    this.setState({\n      suggestions: getSuggestions(value, suggestedOptions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleSuggestionChange =  (event, { newValue }) => {\n    this.validateField(newValue)\n  };\n\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion}\n    </div>\n  );\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable, isValidationField, suggestedOptions} = this.props;\n    const {fieldSchema, fieldValid, value, suggestions} = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: '',\n      value,\n      onChange: this.handleSuggestionChange\n    };\n\n    let isReferenceField = false;\n    \n    const handleSuggestionsFetchRequested = ({value}) => {\n      this.onSuggestionsFetchRequested(value, suggestedOptions)\n    }\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName: foreignKeys[index].reference.resource,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            (!this.state.value || isValidationField)  &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <Select isClearable={true}\n        value= {generateValue(value)}\n        options={this.state.options}\n        onChange={this.handleChange} />\n      )\n    }\n    else if (suggestedOptions) {\n      return <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      getSuggestionValue={(value) => value}\n      renderSuggestion={this.renderSuggestion}\n      inputProps={inputProps} />\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['RICentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'RICentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'RICentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues,capitalize, pick, sortBy, uniq} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {NON_CHANGABLE_FIELDS, SOURCE_SLUG_FIELDS, SOURCE_SUGGESTION_FIELDS} from '../constants';\n\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n\n      if (field.constraints && field.constraints.required) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      if (prefixedValues && prefixedValues[field.name]) {\n        value = prefixedValues[field.name];\n        valid = true\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const re = /[^a-zA-Z0-9]+/g;\n    const value = SOURCE_SLUG_FIELDS.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue.trim().replace(re, ''))\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug'] && SOURCE_SLUG_FIELDS.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'RICentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      prefixedValues: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        const prefixedValues = {\n          \"modified_currency\": this.state.newResource['modified_currency'].value\n        }\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              prefixedValues,\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            prefixedValues,\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              sortBy(schema.fields, (field) => field.constraints && field.constraints.required)\n              .map((field, index) => {\n                let suggestedOptions;\n                if (resourceDescriptor.name === 'sources' && SOURCE_SUGGESTION_FIELDS.indexOf(field.name)!== -1) {\n                  suggestedOptions = uniq(referenceTables['sources'].map((d) => d[field.name]))\n                }\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={NON_CHANGABLE_FIELDS.indexOf(field.name) !==-1 || (prefixedValues && prefixedValues[field.name])}\n                    isValidationField={this.state.prefixedValues && this.state.prefixedValues[field.name]}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    suggestedOptions={suggestedOptions}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || (prefixedValues && prefixedValues[field.name])}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                prefixedValues={this.state.prefixedValues}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {NON_CHANGABLE_FIELDS, LABEL_FIELDS_FK_SOLVED} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = referenceTables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      let fixedValue = fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]]:\n                                              newResource.data[0][foreignKeyField.reference.fields]\n      if (Object.keys(LABEL_FIELDS_FK_SOLVED).indexOf(field) !== -1) {\n        // incase the value of mapping is not found\n        if (newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]) {\n          fixedValue = newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]\n        }\n      }\n      return {\n        ...res,\n        [field]: fixedValue\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n    return (\n      <FieldContainer>\n        <Control>\n\n          <Label className=\"has-text-success\">Fixed with value</Label>\n          <p className=\"has-text-success\">{printValue}</p>\n          <Help isColor=\"success\">\n            {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n            {\n              fixedReferenceTable && fixedReferenceTable.map((table)=> {\n                return (\n                  <li>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n                )\n              })\n            }\n          </Help>\n          <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleClickCreate}>Change this fix</Button>\n          {unchangable && <Help isColor=\"success\">found same value in other error, please fix it there</Help>}\n        </Control>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, referenceTables, isCurrencyFixDisabled} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = referenceTables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              this.state.fixedValues[field] &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            {isCurrencyFixDisabled && <Help isColor=\"danger\">Please fix year format error first</Help>}\n            <Button isDisabled={isCurrencyFixDisabled} isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newResource, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField, descriptor, referenceTables} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  isCurrencyFixDisabled,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          isCurrencyFixDisabled={isCurrencyFixDisabled}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq, findIndex} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables, steps, selectedStep} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n    const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n    const modificationItem = modificationList[modificationIndex]\n    let isCurrencyFixDisabled = false;\n    if (modificationItem.field === 'currency|year|reporting' && yearFormatValues.indexOf(modificationItem.value.split('|')[1]) !== -1) {\n      isCurrencyFixDisabled = true\n    }\n    \n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () =>  {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber);\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = [...flows[e.rowNumber -1]]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              isCurrencyFixDisabled={isCurrencyFixDisabled}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationItem} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n  csvFormat\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFlow (array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv':\n    default: {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx': {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, `${fileName}.${ext}`);\n      break\n    }\n  }\n}\n\nexport function downloadTable (array, fileName, ext) {\n  let file;\n  switch(ext) {\n    case 'csv': \n    default:{\n      const csvString = csvFormat(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose,\n  ModalCard,\n  ModalCardHeader,\n  ModalCardTitle,\n  Delete,\n  ModalCardBody,\n  ModalCardFooter\n} from 'bloomer';\n\nimport {values} from 'lodash';\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeUser = (event) => {\n    this.setState({username: event.target.value});\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.username || !this.state.token;\n    \n    if (isCommit) {\n      invalidInput =!this.state.username || !this.state.token || !this.state.message;\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>username*:</Label>\n              <Control>\n                <Input value={this.state.username} onChange={this.handleChangeUser} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, pick} from 'lodash';\n\nimport {\n  Button,\n  Control,\n  Field,\n  Columns,\n  Column,\n  Help\n} from 'design-workshop';\n\nimport {\n  csvParse\n} from 'd3-dsv';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {setStep} from '../../redux/modules/ui';\n\nimport {updateRemoteFiles} from '../../redux/modules/repoData';\n\nimport {downloadFlow, downloadTable} from '../../utils/fileExporter';\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n\n  handleOpenModal = () => {\n    this.setState({isModalShow: true})\n  }\n\n  handleCloseModal = () => {\n    this.setState({isModalShow: false})\n  }\n\n  render () {\n    const {flows, repoData, referenceTables, originalLength} = this.props;\n    const {selectedBranch, remoteUpdateStatus} = repoData;\n    const repoTables = repoData.tables;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n\n    const handleExportFlow = () => {\n      const {file, data} = flows;\n      downloadFlow(data, `${file.name}_corrections`, 'csv')\n    }\n    \n    const parsedFlows = csvParse(flows.data.map(d => d.join(',')).join('\\n'));\n    const groupedFlows = groupBy(parsedFlows, (item) => item['source']);\n\n\n    const handleUpdateRemoteFiles= (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          fileName: `${file}.csv`,\n          data: groupedFlows[file]\n        }\n      });\n      const tableFiles = updatedTables.map((table) => {\n        return {\n          fileName: `${table.name}.csv`,\n          data: referenceTables[table.name],\n          sha: repoTables[table.name].sha\n        }\n      })\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name\n      })\n    }\n    const handleStartOver = () => {\n      this.props.setStep({id: '0'})\n    }\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <strong>fixed flows table by source</strong>\n            {\n              Object.keys(groupedFlows).map((source) => {\n                return (\n                  <p>{source}.csv</p>\n                )\n              })\n            }\n          </Column>\n          <Column>\n            <div>\n              <strong>updated reference tables</strong>\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <Control>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </Control>\n                  )\n                })\n              }\n            </div>\n          </Column>\n        </Columns>\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>Download fixed flows</Button>\n          </Control>\n          <Control>\n            {\n              remoteUpdateStatus === 'updated' ? \n              <Button isColor='success' onClick={handleStartOver}>Start a new import</Button> :\n              <Button isDisabled={remoteUpdateStatus === 'loading'} isColor=\"info\" onClick={this.handleOpenModal}>Publish tables to \"{selectedBranch.name}\" branch</Button>\n            }\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === 'loading' && <Help isColor='success'>updating files on github...</Help>}\n          {remoteUpdateStatus === 'updated' && <Help isColor='success'>files are updated on github</Help>}\n          {remoteUpdateStatus === 'fail' && <Help isColor='danger'>fail to update files on github</Help>}\n        </Field>\n        <GithubAuthModal \n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  exportFlows,\n  updateRemoteFiles\n})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nimport {loginCreateBranch} from '../../redux/modules/repoData';\n\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n  componentDidMount() {\n    this.props.fetchDatapackage()\n  }\n   \n  handleShowLogin =()=> {\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginCreateBranch(payload);\n    this.handleCloseModal()\n  }\n\n  renderFetchTable() {\n    const {repoData} = this.props;\n    const {selectedBranch, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not get branch from github, try login again</Help>\n        }\n        {\n          selectedBranch && !tables &&\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables are not loaded, please reload from {selectedBranch.name} branch</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData} = this.props;\n    const {selectedBranch} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>Login to get branch</span>\n          </Button>\n          {selectedBranch && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData,\n auth: state.auth.auth\n})\n\nexport default connect(mapStateToProps, {\n  loginCreateBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {findIndex} from 'lodash';\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\n\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  steps,\n  selectedStep,\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name.split('.')[0]\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => {\n    const currentIndex = findIndex(steps, selectedStep);\n    setStep(steps[currentIndex+1])\n  }\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\nimport { file } from '@babel/types';\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let missingRows = [];\n                      if (field.errorType === 'ERROR_FORMAT' && (field.name==='reporting' || field.name === 'partner')) {\n                        missingRows = field.errors.map((error) => error.rowNumber);\n                      }\n                      if(columnIndex === 0) return (<div key={columnIndex} className=\"table-cell\">{field.name}</div>)\n                      else if(columnIndex === 1) return (<div key={columnIndex} className=\"table-cell\">{field.errorType}</div>)\n                      else return (\n                        <div key={columnIndex} className=\"table-cell\">\n                          <span>{distinctErrors} different invalid values, {totalErrors} rows affected in total</span>\n                          {missingRows.map((rowNumber)=> {\n                            return (<li className=\"has-text-danger\">missing value in row {rowNumber}</li>)\n                          })}\n                        </div>\n                      )\n                      \n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getGroupedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList, steps, selectedStep} = this.props;\n    let isRequiredFieldMissing = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isRequiredFieldMissing = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors)\n      }\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isRequiredFieldMissing && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isRequiredFieldMissing}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n  Button,\n  Card,\n  Field,\n  Control\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\nimport {downloadTable} from '../utils/fileExporter';\nconst LeaveModificationModal = ({\n  originalLength,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n  let updatedTables = [];\n  if (referenceTables) {\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n  }\n\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalCard>\n        <ModalCardBody>\n          <div style={{\n          textAlign:'center'\n          }}>\n              <strong>Leave this step, you might lost your modification?</strong>\n              <p>updated reference tables</p>\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <div>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </div>\n                  )\n                })\n              }\n              <Field isGrouped>\n                <Control>\n                  <Button onClick={onSelectDownload} isColor=\"success\">Download fixed flows</Button>\n                </Control>\n                <Control>\n                  <Button onClick={onSelectDiscard} isColor=\"danger\">Discard</Button>\n                </Control>\n                <Control>\n                  <Button onClick={closeModal} isColor=\"info\">Cancel</Button>\n                </Control>\n            </Field>\n            </div>\n        </ModalCardBody>\n      </ModalCard>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default LeaveModificationModal","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport LeaveModificationModal from './components/LeaveModificationModal';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  originalLength,\n  modificationList,\n  //actions\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, `${file.name}_ongoing_corrections`, 'csv')\n  }\n\n  const handleSetStep = (step) => {\n    const {remoteUpdateStatus} = repoData;\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0' && remoteUpdateStatus !== 'updated') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <LeaveModificationModal\n        referenceTables={referenceTables}\n        originalLength={originalLength}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {get} from 'axios';\nimport {userUri} from '../../config/default';\n\n\nimport {SET_STEP} from './ui';\nexport const LOGIN_GITHUB_REQUEST = 'LOGIN_GITHUB_REQUEST';\nexport const LOGIN_GITHUB_SUCCESS = 'LOGIN_GITHUB_SUCCESS';\nexport const LOGIN_GITHUB_FAILURE = 'LOGIN_GITHUB_FAILURE';\n\nexport const loginGithub = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_GITHUB_REQUEST,\n    payload\n  })\n  const {username, token} = payload;\n  const branch = username;\n  return get(userUri, {\n    auth: {\n      username,\n      password: token\n    }\n  })\n  .then((res) => {\n    dispatch({\n      type: LOGIN_GITHUB_SUCCESS,\n      payload\n    });\n  })\n  .catch(err => {\n    console.error(err);\n    dispatch({\n      type: LOGIN_GITHUB_FAILURE\n    })\n  });\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  isLogined: false\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    // case SET_STEP:\n    //   if (payload.id === '0') {\n    //     return initialState\n    //   }\n    //   return state;\n    case LOGIN_GITHUB_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        auth: payload\n      }\n    case LOGIN_GITHUB_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        auth: null\n      }\n    default: \n      return state;\n  }\n}","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport auth from './modules/auth';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  auth,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./geojson.json\": 354,\n\t\"./table-schema.json\": 867,\n\t\"./topojson.json\": 355\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 866;","var map = {\n\t\"./data-package.json\": 928,\n\t\"./data-resource.json\": 929,\n\t\"./fiscal-data-package.json\": 930,\n\t\"./registry.json\": 931,\n\t\"./tabular-data-package.json\": 932,\n\t\"./tabular-data-resource.json\": 933\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 927;","var map = {\n\t\"./geojson.json\": 390,\n\t\"./table-schema.json\": 999,\n\t\"./topojson.json\": 391\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 998;"],"sourceRoot":""}