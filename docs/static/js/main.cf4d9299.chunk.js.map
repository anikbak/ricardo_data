{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","redux/modules/repoData.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","redux/modules/modification.js","redux/modules/ui.js","components/SummaryTable.js","components/ContextTable.js","components/FormatCorrection.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","redux/modules/flows.js","constants.js","redux/modules/schemaValidation.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","tablesList","name","path","initialState","DataPrep","repoData","this","props","tables","datapackage","fetchDatapackage","fetchAllTables","branch","react_default","a","createElement","React","Component","connect","state","payload","dispatch","type","Promise","all","table","get","concat","apiUri","then","res","forEach","item","data","split","catch","error","START_MODIFICATION","modificationList","createReducer","SET_STEP","action","SUBMIT_MODIFICATION","index","objectSpread","fixed","fixedValue","HIDE_MODIFICATION","GO_NEXT_ERROR","GO_PREV_ERROR","SELECT_ERROR","setStep","steps","title","selectedStep","isModification","modificationIndex","fixedIndex","SummaryTable","_ref","className","onSelectError","columnNames","style","position","width","height","columnName","key","errorIndex","field","errors","value","message","handleSelectError","columnIndex","isNull","components","length","isOutlined","isColor","onClick","ContextTable","flows","modificationItem","errorColumn","indexOf","rowIndex","wordBreak","rowNumber","FormatCorrection","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hydrateState","_this$props","descriptor","fieldSchema","Field","constraints","enum","fieldError","validateField","castValue","setState","handleChange","event","target","handleSubmitForm","_this$state","onSubmitForm","prevProps","_this$state2","isSubmitDisabled","isSize","onChange","isDisabled","ForeignKeyCorrection","schema","_this$props2","ModificationComponent","onSubmitModification","handleSubmitModification","getDescriptor","fields","find","f","errorType","components_FormatCorrection","ForeignkeyCorrection","components_ContextTable","UPDATE_FLOW","IMPORT_FLOWS","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","reporting","partner","export_import|special_general","currency|year|reporting","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","join","getCollectedErrors","foreignKeys","allFields","foreignKeysList","reduce","getForeignKeyFields","d","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","defineProperty","foreignKeyErrors","joinedFields","row","selectedErrors","err","columnNumber","push","joinedColumn","values","tableValidated","schemaFeedback","headerFeedback","getSchema","schemaValidation","resources","resource","getRelations","getForeignKeys","relations","tableName","reference","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","DataPublish","HeaderValidation","diff","headerNames","fieldNames","diffLength","difference","validationMap","valid","Math","abs","FileUpload","importFlows","validateHeader","status","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","Table","load","slice","sent","read","limit","headers","t0","console","stop","maxSize","onDrop","_ref2","file","slicedToArray","reject","reader","FileReader","onload","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","blankrows","undefined","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","OverviewTable","collectedErrors","orderedErrors","sortBy","totalErrors","groupedErrors","groupBy","v","distinctErrors","cellValue","SchemaValidation","validateTable","re","loader","components_OverviewTable","errorsList","groupedErrorsList","replace","getOrderedErrors","startModification","_callee4","_context5","delegateYield","_callee3","tableLength","chunk","i","_loop","_context4","offset","chunkTable","rows","chunkErrors","_context3","forceCast","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","containers_DataPrep","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","Boolean","window","location","hostname","match","combineReducers","arguments","csvParse","Base64","decode","content","year","JSON","parse","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf4d9299.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 259,\n\t\"./table-schema.json\": 675,\n\t\"./topojson.json\": 260\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 674;","var map = {\n\t\"./geojson.json\": 343,\n\t\"./table-schema.json\": 864,\n\t\"./topojson.json\": 344\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 863;","var map = {\n\t\"./data-package.json\": 903,\n\t\"./data-resource.json\": 904,\n\t\"./fiscal-data-package.json\": 905,\n\t\"./registry.json\": 906,\n\t\"./tabular-data-package.json\": 907,\n\t\"./tabular-data-resource.json\": 908\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 902;","import {get} from 'axios';\nimport {apiUri, repoUrl} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\n\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n export const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      // newDescriptor = {...state.descriptor};\n      // newDescriptor.resources.forEach((resource)=> {\n      //   if (payload[resource.name]) {\n      //     delete resource.path;\n      //     resource.data = csvParseRows(atob(payload[resource.name].content))\n      //   }\n      // });\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    const {repoData} = this.props\n    if (!repoData.tables && !repoData.datapackage) {\n      this.props.fetchDatapackage()\n      this.props.fetchAllTables({branch:'master'})\n    }\n  }  \n\n  render () {\n    const {repoData} = this.props\n    return (\n      <div>\n        {!repoData.tables && <span>loading tables</span>}\n        {!repoData.datapackage && <span>loading datapackage</span>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n// export const validateHeader = (payload) => (dispatch) => {\n//   const {source, schema} = payload;\n//   dispatch({\n//     type: VALIDATE_HEADER_REQUEST,\n//     payload: {                                                                                                                                                                                                                                                                                                                                                                                             \n//       ...payload,\n//       status: 'loading'\n//     }\n//   })\n//   dispatch(async() => {\n//     let table;\n//     try {\n//       table = await Table.load(source.slice(0,2), {schema});\n//       await table.read({limit: 1});\n//       dispatch({\n//         type: VALIDATE_HEADER_SUCCESS,\n//         payload: {\n//           status: 'done',\n//           valid: true,\n//           headers: table.headers\n//         }\n//       })\n//     } catch (error) {\n//       console.error(error)\n//       if (error.type !== 'ERROR_HEADER') {\n//         dispatch({\n//           type: VALIDATE_HEADER_SUCCESS,\n//           payload: {\n//             status: 'done',\n//             valid: true,\n//             headers: table.headers\n//           }\n//         })\n//       } else {\n//         dispatch({\n//           type: VALIDATE_HEADER_FAILURE,\n//           valid: false,\n//           status: 'done',\n//           payload: error\n//         })\n//       }\n//     }\n//   })\n// }\n\nconst initialState = {\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      fixed: true,\n      fixedValue: payload.fixedValue\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n  SUBMIT_MODIFICATION\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\n\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  selectedStep: steps[0],\n  isModification: false,\n  modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        modificationIndex: payload.index\n      }\n    case GO_NEXT_ERROR:\n      return {\n        ...state,\n        modificationIndex: state.modificationIndex + 1\n      }\n    case GO_PREV_ERROR:\n      if (state.modificationIndex === 0) return;\n      return {\n        ...state,\n        modificationIndex: state.modificationIndex - 1\n      }\n    default:\n     return state\n  }\n}","import React from 'react';\nimport {isNull} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', '']\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message} = item;\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'null' : value }</span>\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && 'rows affected'}</span>\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field} = modificationItem;\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.indexOf(columnName) !== -1 ? true : false\n\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import React from 'react';\nimport {Field, Schema} from 'tableschema';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem, descriptor} = this.props;\n    const fieldSchema = new Field(descriptor);\n\n    let fixedValue = '';\n    if (modificationItem.fixedValue) fixedValue = modificationItem.fixedValue;\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      fixedValue = fieldSchema.constraints.enum[0];\n    }\n    return {\n      fieldSchema,\n      fixedValue,\n      fieldError: null\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    try {\n      fieldSchema.castValue(value)\n      this.setState({\n        fieldError: null\n      })\n    } catch(error) {\n      this.setState({\n        fieldError: error\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      fixedValue: event.target.value\n    });\n    this.validateField(event.target.value);\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValue, fieldError} = this.state;\n    if(!fixedValue || fixedValue.length === 0 || fieldError) return;\n    this.props.onSubmitForm(fixedValue);\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {value, message, errors}= modificationItem;\n    const {fieldSchema, fixedValue, fieldError} = this.state;\n    const isSubmitDisabled = !fixedValue || fixedValue.length === 0 || fieldError;\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize='1/2'>\n              <FieldContainer>\n                <Label>Original value of \"{fieldSchema.name}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {\n                (!fieldSchema.constraints || !fieldSchema.constraints.enum) &&\n                <FieldContainer>\n                  <Label>Input a new value of \"{fieldSchema.name}\"</Label>\n                  <Control>\n                    <Input\n                      value={this.state.fixedValue}\n                      onChange={this.handleChange} />\n                  </Control>\n                  {\n                    fieldError && <Help isColor=\"danger\">{fieldError.message}</Help>\n                  }\n                  {\n                    !isSubmitDisabled &&\n                      <Help isColor=\"success\">change {value} to {this.state.fixedValue}, total {errors.length} rows affected</Help>\n                  }\n                </FieldContainer>\n              }\n              \n              {\n                fieldSchema.constraints && fieldSchema.constraints.enum &&\n                <FieldContainer>\n                  <Label>Select a value of \"{fieldSchema.name}\" from:</Label>\n                  <Control>\n                    <Select value={this.state.fixedValue} onChange={this.handleChange}>\n                      {\n                        fieldSchema.constraints.enum.map((item, index) => {\n                          return (\n                            <option key={index}>{item}</option>\n                          )\n                        })\n                      }\n                    </Select>\n                    {\n                      !isSubmitDisabled &&\n                        <Help isColor=\"success\">change {value} to {this.state.fixedValue}, total {errors.length} rows affected</Help>\n                    }\n                  </Control>\n                </FieldContainer>\n              }\n  \n              <FieldContainer>\n                <Control>\n                  <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n                </Control>\n              </FieldContainer>\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {Field, Schema} from 'tableschema';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem, schema} = this.props;\n    const {field}= modificationItem;\n    return {}\n    // const descriptor = schema.fields.find((f) => f.name === field)\n    // const fieldSchema = new Field(descriptor);\n\n    // let fixedValue = '';\n    // if (modificationItem.fixedValue) fixedValue = modificationItem.fixedValue;\n    // else if (schema.constraints && schema.constraints.enum) {\n    //   fixedValue = schema.constraints.enum[0];\n    // }\n    // return {\n    //   fieldSchema,\n    //   fixedValue,\n    //   fieldError: null\n    // }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      fixedValue: event.target.value\n    });\n    this.validateField(event.target.value);\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValue, fieldError} = this.state;\n    if(!fixedValue || fixedValue.length === 0 || fieldError) return;\n    this.props.onSubmitForm(fixedValue);\n  }\n\n  render() {\n    const {modificationItem, schema} = this.props;\n    const {value, message, errors, field}= modificationItem;\n    const {fieldSchema, fixedValue, fieldError} = this.state;\n\n    const isSubmitDisabled = !fixedValue || fixedValue.length === 0 || fieldError;\n    // if (errorType === 'ERROR_FOREIGN_KEY') {\n    //   const foreignKeys = schema.foreignKeys.find((f) => f.fields.indexOf(field) !==-1)\n    //   fieldSchema = {\n    //     ...fieldSchema,\n    //     foreignKeys\n    //   }\n    // }\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize='1/2'>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              <FieldContainer>\n                <Control>\n                  <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n                </Control>\n              </FieldContainer>\n            </Column>\n          </Columns>\n  \n        </form>    \n        {\n          !isSubmitDisabled &&\n            <span>change {value} to {this.state.fixedValue}, total {errors.length} rows affected</span>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ForeignKeyCorrection;","import React from 'react';\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification\n}) => {\n  const handleSubmitModification = (fixedValue) => {\n    return onSubmitModification({\n      fixedValue,\n      index: modificationIndex\n    })\n  }\n  const getDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  return (\n    <div>\n      <div>\n        {\n          modificationItem.errorType === 'ERROR_FORMAT' &&\n          <FormatCorrection \n            descriptor={getDescriptor()} \n            modificationItem={modificationItem}\n            modificationIndex={modificationIndex}\n            onSubmitForm={handleSubmitModification} \n          /> \n        }\n         {\n          modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n          <ForeignkeyCorrection \n            descriptor={getDescriptor()} \n            modificationItem={modificationItem}\n            modificationIndex={modificationIndex}\n            onSubmitForm={handleSubmitModification} \n          /> \n        }\n        <ContextTable flows={flows} modificationItem={modificationItem} />\n      </div>\n    </div>\n  );\n}\n\nexport default ModificationComponent;","import {SET_STEP} from './ui';\n\nexport const UPDATE_FLOW = 'UPDATE_FLOW';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\n\nexport const updateFlow = (payload) => ({\n  type: UPDATE_FLOW,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      if(payload.id === '0') {\n        return initialState;\n      }\n      return state;\n    case IMPORT_FLOWS: \n      return payload;\n    case UPDATE_FLOW:\n      return {\n        ...state,\n        data: payload.data\n      };\n    default:\n     return state\n  }\n}","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"species_bullions\": 3,\n  \"transport_type\": 4,\n  \"statistical_period\": 5,\n  \"partner_sum\": 6,\n  \"world_trade_type\": 7,\n  \"notes\": 8,\n  \"source\": 9,\n  \"reporting\": 10,\n  \"partner\": 11,\n  \"export_import|special_general\": 12,\n  \"currency|year|reporting\": 13\n}","import { createSelector } from 'reselect'\n\nimport {Package} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor, relations} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      const dataPackage = await Package.load(descriptor, {basePath: repoUrl});\n      resource = dataPackage.getResource('flows');\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const rowNumber = error.rowNumber;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  \n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  tableValidated: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  tables: null\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state\n    case FETCH_TABLES_SUCCESS:\n      const tables = {}\n      Object.keys(payload).forEach((id) => {\n        tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n          if (d.year) {\n            return {\n              ...d,\n              year: +d.year\n            }\n          }\n          return d\n        })\n      })\n      return {\n        ...state,\n        tables\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    // case IMPORT_FLOWS:\n    //   newDescriptor = {...state.descriptor};\n    //   // newDescriptor.resources.forEach((resource)=> {\n    //   //   resource.path = `${repoUrl}/${resource.path}`\n    //   // });\n    //   delete newDescriptor.resources[0].path\n    //   // newDescriptor.resources[0].dialect = {\n    //   //   delimiter: ';',\n    //   //   header: true\n    //   // }\n    //   newDescriptor.resources[0].data = payload.data\n    //   return {\n    //     ...state,\n    //     descriptor: newDescriptor\n    //   }\n    // case VALIDATE_RESOURCE_SUCCESS:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: true\n    //     }\n    //   }\n    // case VALIDATE_RESOURCE_FAILURE:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: false,\n    //       ...payload\n    //     }\n    //   }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nexport const getSchema = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  return resource.schema\n}\n\nexport const getRelations = (state) => {\n  const foreignKeys = getForeignKeys(state)\n  const relations = {};\n  foreignKeys.forEach((key) => {\n    const tableName = key.reference.resource;\n    relations[tableName] = state.schemaValidation.tables[tableName]\n  });\n  return relations;\n}\n\nexport const getForeignKeys = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  const {foreignKeys} = resource.schema;\n  return foreignKeys\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {submitModification} from '../../redux/modules/modification';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\nimport {getSchema} from '../../redux/modules/schemaValidation';\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = ({fixedValue, index}) => {\n      this.props.submitModification({\n        fixedValue,\n        index\n      });\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.ui.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import React from 'react';\nimport {connect} from 'react-redux'\n\nclass DataPublish extends React.Component {\n\n  render () {\n    return (\n      <div>\n        github publish\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps)(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getSchema\n} from '../../redux/modules/schemaValidation';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DropZone\n        maxSize={MAXIMUM_FILE_SIZE}\n        onDrop={handleDrop}\n        onDropRejected={handleDropRejected}\n        isSize=\"small\">\n        <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n      </DropZone>\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  flows: state.flows,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${totalErrors} rows affected in total, ${distinctErrors} different invalid values`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, sortBy, values} from 'lodash';\nimport {RANKED_FIELDS} from '../../constants';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\n// import FeedbackTable from '../../components/FeedbackTable';\n// import AggregatedTable from '../../components/AggregatedTable';\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getForeignKeys, getSchema} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n    const re = /row\\s\\d*/;\n\n    const getOrderedErrors = (collectedErrors) => {\n      const errorsList = values(collectedErrors).reduce((res, item) => {\n        return res.concat(item.errors)\n      },[])\n      const groupedErrorsList = values(groupBy(errorsList, (v) => v.field + v.value))\n                                .map((errors, index)=> {\n                                  return {\n                                    index,\n                                    field: errors[0].field,\n                                    errorType: errors[0].errorType,\n                                    fixed: false,\n                                    message: errors[0].message.replace(re, `${errors.length} rows`),\n                                    value: errors[0].value,\n                                    errors\n                                  }\n                                })\n      return sortBy(groupedErrorsList, (field) => {\n        return RANKED_FIELDS[field.name]\n      });\n    }\n\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              {/* Found format errors in {Object.keys(schemaFeedback.collectedErrors.formatErrors).length} columns, ForeignKey errors in {Object.keys(schemaFeedback.collectedErrors.foreignKeyErrors).length} columns, {schemaFeedback.errors.length} rows */}\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  relations: state.schemaValidation.descriptor && getRelations(state),\n  foreignKeys: state.schemaValidation.descriptor && getForeignKeys(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataPrep from './containers/DataPrep';\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\n\nimport FileUpload from './containers/FileUpload';\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep\n} from './redux/modules/ui';\n\nconst App = ({\n  steps,\n  selectedStep,\n  repoData,\n  //actions\n  setStep\n}) => {\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <DataPrep />\n      { repoData.descriptor &&\n        <Layout \n          steps={steps}\n          selectedStep={selectedStep}\n          onSetStep={setStep}>\n          {renderChildren()}\n        </Layout>\n      }\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}