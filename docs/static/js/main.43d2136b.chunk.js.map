{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FormatCorrection.js","components/NewResourceForm.js","components/ForeignkeyCorrection.js","redux/modules/tables.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","fixedValues","updatedValues","orderedErrors","item","value","split","forEach","index","indexFind","indexOf","objectSpread","field","fixed","currency","year","reporting","REVALIDATE_ROWS_FAILURE","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","errors","fieldList","error","columnNumber","data","rowNumber","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_BRANCHES_SUCCESS","SELECT_BRANCH","tablesList","path","selectedBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","row","originalRowNumber","selectedErrors","find","err","columnIndex","message","push","joinedColumn","columnName","values","length","resourceName","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getOrderedErrors","collectedErrors","errorsList","concat","groupedErrorsList","groupBy","v","groupedValue","yearRange","fieldName","years","min","max","replace","sortBy","getResourceSchema","createSelector","resource","getRelations","tables","selectedResource","relations","key","tableName","reference","SummaryTable","_ref","className","onSelectError","columnNames","isYearFormatError","react_default","a","createElement","style","position","width","height","errorIndex","fixedValue","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","originalValue","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","FormatCorrection","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hydrateState","_this$props","fieldDescriptor","fieldSchema","Field","constraints","enum","showSolving","fieldValid","validateField","castValue","setState","valid","handleChange","event","preventDefault","target","handleSubmitForm","_this$state","onSubmitForm","handleShowSolving","handleHideSolving","prevProps","printValue","_this$state2","isSubmitDisabled","onChange","isGrouped","isSize","renderOriginal","renderFixed","renderInput","React","Component","nonChangableFields","slugFields","FieldInput","getStateFromProps","fieldValue","_this$props2","NewResourceForm","_this2","_this2$props","resourceDescriptor","getSlug","preFields","f","capitalize","handleFieldChange","slug","_this3","fieldsInvalid","overflow","NewResourceForm_FieldInput","onCancel","mapValues","onAddNew","ForeignKeyCorrection","initFixedValues","showNewForm","newRow","onUpdateTable","handleClickCreate","handleAddNewRow","handleCancel","handleSelectExist","_this$props3","referenceField","generateValue","fixedValueSelected","react_select_browser_esm","isSearchable","isClearable","_this$props4","referenceFieldResource","isSubmitEnabled","renderSolving","flex","components_NewResourceForm","connect","validateResource","dispatch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Resource","load","read","t0","console","multiple","messages","stop","INIT_TABLES","csvParse","Base64","decode","content","d","_ref2","UPDATE_TABLE","_ref3","newTable","slice","splice","updateTable","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","isEqual","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","submitModification","updateFlows","rowNumbers","currencies","prevErrors","revalidateRows","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","table","rows","newErrors","updatedErrors","updatedRowNumbers","_context3","Table","sent","forceCast","downloadFile","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","DataPublish","_this$props$flows","exportFlows","DataPrep","fetchDatapackage","fetchBranches","repoData","branches","selectBranch","branch","fetchAllTables","get","branchUri","then","catch","Promise","all","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","difference","validationMap","Math","abs","FileUpload","importFlows","validateHeader","_callee2","_context2","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","isActive","closeModal","bodyContent","onAction","footerActions","OverviewTable","totalErrors","groupedErrors","distinctErrors","cellValue","SchemaValidation","validateTable","loader","components_OverviewTable","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43d2136b.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 318,\n\t\"./table-schema.json\": 781,\n\t\"./topojson.json\": 319\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 780;","var map = {\n\t\"./data-package.json\": 844,\n\t\"./data-resource.json\": 845,\n\t\"./fiscal-data-package.json\": 846,\n\t\"./registry.json\": 847,\n\t\"./tabular-data-package.json\": 848,\n\t\"./tabular-data-resource.json\": 849\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 843;","var map = {\n\t\"./geojson.json\": 352,\n\t\"./table-schema.json\": 915,\n\t\"./topojson.json\": 353\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 914;","import { createReducer } from 'redux-starter-kit';\nimport {values} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    const {payload} = action;\n    const {fixedValues, orderedErrors} = payload;\n    const updatedValues = orderedErrors.map((item)=> (''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n    state.modificationList.forEach((item, index) => {\n      const indexFind = updatedValues.indexOf((''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n      if (indexFind !== -1) {\n        state.modificationList[index] = {\n          ...payload.orderedErrors[indexFind],\n          index\n        }\n      }\n      else if (item.field === 'currency|year|reporting') {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[1]\n          }\n        }\n      }\n    });\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    const {payload} = action;\n    const updatedValues = payload.orderedErrors.map((item)=> (''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n\n    state.modificationList.forEach((item, index) => {\n      const indexFind = updatedValues.indexOf((''+item.value).split(\"|\")[0] + (''+item.value).split(\"|\")[2]);\n      if (indexFind !== -1) {\n        state.modificationList[index] = {\n          ...payload.orderedErrors[indexFind],\n          index\n        }\n      }\n    });\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n    // if (state.modificationList[payload.index].errorType === 'ERROR_FOREIGN_KEY') {\n    //   state.foreignKeyField = state.modificationList[payload.index].field\n    // }\n    // else {\n    //   state.foreignKeyField = null\n    // }\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}","import {get} from 'axios';\nimport {apiUri, branchUri} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  selectedBranch: 'master'\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case SELECT_BRANCH:\n      return {\n        ...state,\n        selectedBranch: payload.branch,\n        tables: null\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  \n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers,fixedValues, source, schema, relations, prevErrors} = payload;\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      rows.forEach((row, index) => {\n        if (row.errors) {\n          row.originalRowNumber = rowNumbers[index]\n        }\n      });\n      const errors = rows.filter((row) => row.errors);\n      let newErrors;\n      let orderedErrors;\n\n      const collectedErrors = getCollectedErrors(source, schema, errors);\n      if (collectedErrors && collectedErrors['currency|year|reporting']) {\n        collectedErrors['currency|year|reporting'].errors.forEach((error) => error.rowNumber = error.originalRowNumber);\n        const updatedErrors = collectedErrors['currency|year|reporting'].errors;\n        const updatedRowNumbers = updatedErrors.map((e)=> e.rowNumber);\n        newErrors = prevErrors.map((error)=> {\n          if (updatedRowNumbers.indexOf(error.rowNumber) !== -1) {\n            const updatedError = updatedErrors.find((e)=> e.rowNumber === error.rowNumber);\n            return updatedError;\n          }\n          return error;\n        });\n        orderedErrors = getOrderedErrors({\n          'currency|year|reporting': {\n            ...collectedErrors['currency|year|reporting'],\n            errors: newErrors\n          }\n        });\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            newErrors,\n            orderedErrors\n          }\n        })\n      }\n      else {\n        newErrors = prevErrors.filter((error) => rowNumbers.indexOf(error.rowNumber) === -1);\n        orderedErrors = getOrderedErrors({\n          'currency|year|reporting': {\n            errors: newErrors\n          }\n        });\n        if (newErrors.length) {\n          dispatch({\n            type: REVALIDATE_ROWS_SUCCESS,\n            payload: {\n              status: 'done',\n              valid: false,\n              fixedValues,\n              newErrors,\n              orderedErrors\n            }\n          })\n        }\n        else {\n          dispatch({\n            type: REVALIDATE_ROWS_SUCCESS,\n            payload: {\n              rowNumbers,\n              status: 'done',\n              valid: true,\n              fixedValues,\n              newErrors,\n              orderedErrors\n            }\n          })\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case REVALIDATE_ROWS_SUCCESS:\n      // newErrors = state.schemaFeedback.collectedErrors['currency|year|reporting'].errors\n      //                   .filter((error) => payload.rowNumbers.indexOf(error.rowNumber) === -1);\n      return {\n        ...state,\n        schemaFeedback: {\n          ...state.schemaFeedback,\n          collectedErrors: {\n            ...state.schemaFeedback.collectedErrors,\n            'currency|year|reporting': null\n          }\n        }\n      }\n    case REVALIDATE_ROWS_FAILURE:\n      if (payload.newErrors) {\n        return {\n          ...state,\n          schemaFeedback: {\n            ...state.schemaFeedback,\n            collectedErrors: {\n              ...state.schemaFeedback.collectedErrors,\n              'currency|year|reporting': {\n                errors: payload.newErrors\n              }\n            }\n          }\n        }\n      }\n      return state;\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.tables.tables;\n\nconst re = /row\\s\\d*/;\nexport const getOrderedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => {\n      if (v.field !== 'currency|year|reporting') return (v.field + v.value)\n      else {\n        const groupedValue = v.value.split('|')[0] + v.value.split('|')[2]\n        return v.field + groupedValue\n      }\n    }))\n    .map((errors, index)=> {\n      const fieldName = errors[0].field;\n      let yearRange;\n      if (fieldName === 'currency|year|reporting') {\n        const years = errors.map((error) => error.value.split('|')[1]);\n        yearRange = years.length > 0 ? `${min(years)}-${max(years)}` : years[0]\n      }\n      const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, tables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = tables[tableName]\n    });\n    return relations;\n})","import React from 'react';\nimport {isNull, values} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const isYearFormatError = modificationList.find((item)=> item.field === 'year' && !item.fixed)\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n\n              const isCurrencyFixDisabled = item.field === 'currency|year|reporting' && isYearFormatError;\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && 'rows affected'}</span>\n                              <br/>\n                              {\n                                item.fixedReferenceTable && \n                                <span className=\"has-text-success\">new row added to \"{item.fixedReferenceTable}\" table</span>\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n","import React from 'react';\nimport {Field, Schema} from 'tableschema';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'  \n\nimport {getEnumOptions} from '../utils/formUtils' \n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n\n    let fixedValue = modificationItem.value;\n    let options;\n    if (modificationItem.fixedValues) fixedValue = modificationItem.fixedValues[fieldSchema.name];\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required);\n      // fixedValue = options[0].value;\n    }\n    return {\n      fieldSchema,\n      fixedValue,\n      options,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    try {\n      fieldSchema.castValue(value);\n      this.setState({\n        fixedValue: value,\n        fieldValid: {\n          valid: true\n        }\n      })\n    } catch(error) {\n      this.setState({\n        fixedValue: value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault()\n    this.validateField(event.target.value)\n  }\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem} = this.props;\n    const {value, errors}= modificationItem;\n    const {fieldSchema, fixedValue, fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n    const printValue = fixedValue.length === 0 ? 'none' : fixedValue;\n\n    return (\n      <div>\n        {\n          (!fieldSchema.constraints || !fieldSchema.constraints.enum) &&\n          <FieldContainer>\n            <Label>Fix with a new input</Label>\n            <Control>\n              <Input\n                value={this.state.fixedValue}\n                onChange={this.handleChange} />\n            </Control>\n            {\n              fieldValid!==null && !fieldValid.valid && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n            }\n            {\n              !isSubmitDisabled &&\n              <Help isColor=\"success\">change {value} to {printValue}, total {errors.length} rows affected</Help>\n            }\n          </FieldContainer>\n        }\n        \n        {\n          fieldSchema.constraints && fieldSchema.constraints.enum &&\n          <FieldContainer>\n            <Label>Select a value of \"{fieldSchema.name}\" from:</Label>\n            <Control>\n              <Select value={this.state.fixedValue} onChange={this.handleChange}>\n                {\n                  this.state.options\n                    .map((item, index) => {\n                    return (\n                      <option key={index} value={item.value}>{item.label}</option>\n                    )\n                  })\n                }\n              </Select>\n              {\n                !isSubmitDisabled &&\n                  <Help isColor=\"success\">change {value} to {printValue}, total {errors.length} rows affected</Help>\n              }\n            </Control>\n          </FieldContainer>\n        }\n\n        <FieldContainer isGrouped>  \n          <Control>\n            <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n          </Control>\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\n\nimport {Field, Schema} from 'tableschema';\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select\n} from 'design-workshop'\n\nimport {getEnumOptions} from '../utils/formUtils';\n\nconst nonChangableFields = ['slug', 'export_import', 'special_general']\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    this.validateField(event.target.value);\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        { (nonChangableFields.indexOf(fieldSchema.name) !==-1) ?\n          <Control>\n            <span>{this.props.fieldValue}</span>\n          </Control> :\n          <Control>\n            {\n              fieldSchema.constraints && fieldSchema.constraints.enum ?\n              <Select value={value} onChange={this.handleChange}>\n                {\n                  this.state.options.map((item, index) => {\n                    return (\n                      <option key={index} value={item.value}>{item.label}</option>\n                    )\n                  })\n                }\n              </Select>:\n              <Input\n                value={value}\n                onChange={this.handleChange} />\n            }\n          </Control>}\n        {\n          fieldValid && fieldValid.message && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nconst FieldSlug = ({fieldDescriptor, field}) => {\n  return (\n    <FieldContainer>\n      <Label>{fieldDescriptor.name}*</Label>\n      <Control>\n        <span>{field.value}</span>\n      </Control>\n      {\n        !field.value &&<Help isColor=\"danger\">slug is required</Help>\n      }\n    </FieldContainer>\n  )\n}\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValue} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(field.name === 'export_import') {\n        value = originalValue.split('|')[0]\n      }\n      if(field.name === 'special_general') {\n        value = originalValue.split('|')[1]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const data = mapValues(this.state.fields, (item) => item.value || '');\n      this.props.onAddNew(data)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>Add a new row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                key={index}\n                fieldDescriptor={field} \n                fieldValue={this.state.fields[field.name].value}\n                onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\n\nimport NewResourceForm from './NewResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newRow: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const resourceName = this.props.foreignKeyField.reference.resource;  \n    const {fixedValues, newRow} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable: newRow ? resourceName :null,\n    });\n    if (newRow) {\n      this.props.onUpdateTable({\n        row: newRow,\n        resourceName\n      });\n    }\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showNewForm: true,\n      newRow: null\n    })\n  }\n\n  handleAddNewRow = (row) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = tables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? row[foreignKeyField.reference.fields[index]] : row[foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newRow: row,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newRow: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newRow: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {fixedValues}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const resourceName = foreignKeyField.reference.resource;  \n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">\n          <li>total {modificationItem.errors.length} rows affected</li>\n          <li>new row will be added to \"{resourceName}\" table</li>\n        </Help>\n        <br/>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, tables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = this.state.newRow ? generateValue(''): generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = tables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              fixedValueSelected.value !== '' && !fixedReferenceTable &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Label>Not found one</Label>\n            <Button isColor=\"info\" onClick={this.handleClickCreate}>Create new item</Button>\n            {\n              (this.state.newRow) &&\n              <Help isColor=\"success\">\n                <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                <li>total {modificationItem.errors.length} rows affected</li>\n                <li>new row will be added to \"{resourceName}\" table</li>\n              </Help>\n            }\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newRow, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField,descriptor} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    // const referenceField = foreignKeyField.reference.fields\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    const fixedValueSelected = this.state.newRow ? generateValue(''): generateValue(fixedValues[field])\n\n    const isSubmitEnabled= this.state.newRow || fixedValueSelected.value;\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize='1/2'>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            {\n              this.state.showNewForm && \n              (modificationItem.field === 'source'|| modificationItem.field === 'export_import|special_general') &&\n              <Column isSize='1/2' className='new-resource-form' style={{flex: 'auto'}}>\n                <NewResourceForm \n                  originalValue={modificationItem.value}\n                  resourceDescriptor={referenceFieldResource} \n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewRow} />\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>  \n              <Control>\n                <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n              </Control>\n              <Control>\n                {\n                  isSubmitEnabled &&\n                    <Button isColor=\"info\" onClick={this.handleSubmitForm}>Confirm this fix</Button>\n                }\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const UPDATE_TABLE = 'UPDATE_TABLE';\nexport const INIT_TABLES = 'INIT_TABLES';\n\nexport const initTables = (payload) => ({\n  type: INIT_TABLES,\n  payload\n})\n\nexport const updateTable = (payload) => ({\n  type: UPDATE_TABLE,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  UPDATE_TABLE: (state, {payload}) => {\n    const {row, resourceName} = payload;\n    const newTable = state.tables[resourceName].slice();\n    newTable.splice(newTable.length, 0, row)\n    state.tables[resourceName] = newTable\n  },\n})","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nimport {updateTable} from '../../redux/modules/tables';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  tables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n  updateTable,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          tables={tables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onUpdateTable={updateTable}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  tables: state.tables.tables\n});\n\nexport default connect(mapStateToProps, {updateTable})(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\n\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, schemaFeedback} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {schema, flows, tables} = this.props;\n      const {index, errors} = payload;\n      this.props.submitModification(payload);\n      this.props.updateFlows(payload);\n\n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber)\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = flows[e.rowNumber]\n          row[columnIndex] = payload.fixedValues['year']\n          return row\n        }));\n        const relations = {currencies: tables['currencies']}\n        const prevErrors = schemaFeedback.collectedErrors['currency|year|reporting'].errors\n        this.props.revalidateRows({\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n          prevErrors\n        });\n      }\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  tables: state.tables.tables,\n  schema: getResourceSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFile ( array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        fileName,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {downloadFile} from '../../utils/fileExporter';\n\nclass DataPublish extends React.Component {\n\n  render () {\n    const handleExport = () => {\n      const {file, data} = this.props.flows;\n      downloadFile(data, file.name, 'xlsx')\n    }\n    return (\n      <div>\n        <Button onClick={handleExport}>Export fixed data</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows\n})\n\nexport default connect(mapStateToProps, {exportFlows})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Label,\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n    this.props.fetchBranches()\n  }  \n\n  render () {\n    const {repoData} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n    const handleSelectBranch = (event) => {\n      this.props.selectBranch({\n        branch: event.target.value\n      })\n    }\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch});\n    }\n    return (\n      <div>\n        {branches && \n          <div>\n            <Label>Get tables from {selectedBranch} branch</Label>\n            <Select value={selectedBranch} onChange={handleSelectBranch}>\n              {\n                branches.map((item, index) => {\n                  return (\n                    <option key={index}>{item.name}</option>\n                  )\n                })\n              }\n            </Select>\n            <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button>\n            {tables &&\n              <Help isColor=\"success\">tables from {selectedBranch} branch are loaded</Help>\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchBranches,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\n\nconst ConfirmationModal = ({\n  flows,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${totalErrors} rows affected in total, ${distinctErrors} different invalid values`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getOrderedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              {/* Found format errors in {Object.keys(schemaFeedback.collectedErrors.formatErrors).length} columns, ForeignKey errors in {Object.keys(schemaFeedback.collectedErrors.foreignKeyErrors).length} columns, {schemaFeedback.errors.length} rows */}\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFile} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/tables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFile(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables(repoData.tables);\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport tables from './modules/tables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  tables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}