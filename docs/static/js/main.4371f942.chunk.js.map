{"version":3,"sources":["redux/modules/modification.js","constants.js","redux/modules/repoData.js","redux/modules/referenceTables.js","redux/modules/ui.js","redux/modules/flows.js","redux/modules/schemaValidation.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","components/AlertModal.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","components/GithubAuthModal.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","components/LeaveModificationModal.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js","../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$"],"names":["START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","id","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","Object","objectSpread","fixed","fixedStatus","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","rowNumbers","errorRowNumbers","errors","map","err","rowNumber","isEqual","fixedValue","existItem","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","LABEL_FIELDS_FK_SOLVED","export_import","special_general","NON_CHANGABLE_FIELDS","SOURCE_SLUG_FIELDS","SOURCE_SUGGESTION_FIELDS","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_TABLES_FAILURE","FETCH_BRANCHES_SUCCESS","LOGOUT_USER","LOGIN_CREATE_BRANCH_SUCCESS","LOGIN_CREATE_BRANCH_FAILURE","UPDATE_REMOTE_FILES_REQUEST","UPDATE_REMOTE_FILES_SUCCESS","UPDATE_REMOTE_FILES_FAILURE","tablesList","name","path","INIT_TABLES","_ref","referenceTables","originalLength","keys","csvParse","Base64","decode","content","d","length","DELETE_TABLE_ROW","_ref2","data","resourceName","newTable","slice","filter","row","some","r","ADD_TABLE_ROW","_ref3","splice","apply","concat","toConsumableArray","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","dispatch","type","steps","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","fieldList","error","columnNumber","indexOf","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","originalRowNumber","selectedErrors","columnIndex","message","push","joinedColumn","columnName","values","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getResourceSchema","createSelector","resource","getRelations","selectedResource","relations","key","tableName","reference","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","e","label","getOptions","tables","referenceField","uniq","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","options","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","suggestions","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","onSuggestionsFetchRequested","suggestedOptions","inputValue","trim","toLowerCase","inputLength","option","getSuggestions","onSuggestionsClearRequested","handleSuggestionChange","newValue","renderSuggestion","suggestion","prevProps","_this$props2","_this2","_this$props3","showNewReference","newReference","isNonchangable","isValidationField","_this$state","inputProps","placeholder","isReferenceField","generateValue","findIndex","react_select_browser_esm","isSearchable","isClearable","dist_default","getSuggestionValue","_this$state2","_this$props4","required","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","onTouch","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","handleDiscard","onDiscard","printValue","isModificationTouched","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","multiParts","continentValue","continents","getContinent","fieldsInvalid","sortedFields","sortBy","_this2$state$fields$f","isMulti","onCancel","newResource","mapValues","part","RICname_group","RICname_part","onAddNew","ReferenceResourceForm","originalValues","prefixedValues","getSlug","preFields","deburr","w","capitalize","replace","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","_prefixedValues","rows","wrap","_context","prev","next","exchange_rates","modified_currency","Table","load","sent","read","forceCast","t0","console","stop","arguments","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","getForeignKeyField","components_ContextTable","AlertModal","isActive","closeModal","bodyContent","DataModification","handleTouchModification","touched","handleShowAlert","showAlert","handleHideAlert","nonFixedList","components_SummaryTable","selectError","display","justifyContent","currentIndex","DataModification_ModificationComponent","goNextError","hideModification","updateFlows","currencies","revalidateRows","prevFixedReferenceTable","deleteTableRow","addTableRow","submitModification","toString","marginLeft","goPrevError","components_AlertModal","modification","ui","status","_callee3","_context3","downloadFlow","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","downloadTable","csvFormat","GithubAuthModal","handleChangeUser","username","handleChangeToken","token","handleChangeMessage","handleSubmit","onSubmitAuth","isCommit","invalidInput","bloomer_min","DataPublish","handleOpenModal","isModalShow","handleCloseModal","repoData","selectedBranch","remoteUpdateStatus","repoTables","updatedTables","updatedRows","parsedFlows","groupedFlows","groupBy","href","components_GithubAuthModal","auth","flowFiles","tableFiles","sha","updateRemoteFiles","files","branch","exportFlows","github","Octokat","password","repo","baseReference","treeItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","fileGit","filePath","tree","commit","repos","owner","repoName","fetch","git","refs","undefined","Symbol","iterator","done","blobs","create","encode","encoding","mode","return","finish","trees","base_tree","object","commits","parents","update","t1","DataPrep","handleShowLogin","handleLogin","loginCreateBranch","fetchDatapackage","isBranchCreated","fetchAllTables","isLogined","logoutUser","renderFetchTable","_callee2","branches","refBranch","_context2","items","ref","Promise","all","get","apiUri","then","catch","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","resolve","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","v","distinctErrors","missingRows","SchemaValidation","validateTable","isRequiredFieldMissing","loader","components_OverviewTable","errorsList","groupedErrorsList","getGroupedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","LeaveModificationModal","onSelectDiscard","onSelectDownload","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_LeaveModificationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json"],"mappings":"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","file":"static/js/main.4371f942.chunk.js","sourcesContent":["import { createReducer } from 'redux-starter-kit';\nimport {values, isEqual} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          fixedStatus: 'autoFixed',\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {fixedValues, rowNumbers} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      const errorRowNumbers = item.errors.map((err) => err.rowNumber);\n      if (item.field === 'currency|year|reporting' && isEqual(errorRowNumbers, rowNumbers)) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        const existItem = state.modificationList.find((item) => item.value === fixedValue)\n        if ( existItem && existItem.index !== index) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            fixedStatus: 'fixInOther',\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            fixedStatus: 'notFixed',\n            unchangable: false,\n            value: fixedValue,\n            fixedValues: null\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\nexport const DEFAULT_REF_BRANCH = 'master';\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}\n\nexport const LABEL_FIELDS_FK_SOLVED = {\n  'partner': 'RICname',\n  'reporting': 'RICname',\n  'currency': 'modified_currency',\n  'export_import': 'modified_export_import',\n  'special_general': 'modified_special_general'\n}\nexport const NON_CHANGABLE_FIELDS = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const SOURCE_SLUG_FIELDS = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nexport const SOURCE_SUGGESTION_FIELDS = ['name', 'editor', 'country', 'volumn_number', 'shelf_number']","import {all, get, put, post, spread} from 'axios';\nimport {apiUri, branchUri, referenceUri, owner, repoName} from '../../config/default';\nimport {DEFAULT_REF_BRANCH} from '../../constants';\n\nimport Octokat from 'octokat';\n\nimport { Base64 } from 'js-base64';\nimport {\n  csvFormat\n} from 'd3-dsv';\n\nimport {INIT_TABLES} from './referenceTables';\nimport { SET_STEP } from './ui';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const CREATE_BRANCH_REQUEST = 'CREATE_BRANCH_REQUEST';\nexport const CREATE_BRANCH_SUCCESS = 'CREATE_BRANCH_SUCCESS';\nexport const CREATE_BRANCH_FAILURE = 'CREATE_BRANCH_FAILURE';\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const LOGIN_CREATE_BRANCH_REQUEST = 'LOGIN_CREATE_BRANCH_REQUEST';\nexport const LOGIN_CREATE_BRANCH_SUCCESS = 'LOGIN_CREATE_BRANCH_SUCCESS';\nexport const LOGIN_CREATE_BRANCH_FAILURE = 'LOGIN_CREATE_BRANCH_FAILURE';\n\nexport const UPDATE_REMOTE_FILES_REQUEST = 'UPDATE_REMOTE_FILES_REQUEST';\nexport const UPDATE_REMOTE_FILES_SUCCESS = 'UPDATE_REMOTE_FILES_SUCCESS';\nexport const UPDATE_REMOTE_FILES_FAILURE = 'UPDATE_REMOTE_FILES_FAILURE';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  {\n    name: 'RICentities_groups',\n    path: 'data/RICentities_groups.csv'\n  },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\nconst DEFAULT_MESSAGE = 'update data'\n/**\n * ACTIONS\n */\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\nexport const updateRemoteFiles = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REMOTE_FILES_REQUEST,\n  });\n  const {files, branch, auth} = payload;\n\n  const github = new Octokat({\n    username: auth.username,\n    password: auth.token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let baseReference = await repo.git.refs(`heads/${branch}`).fetch();\n      let treeItems = [];\n      for (let file of files) {\n        let fileGit = await repo.git.blobs.create({content: Base64.encode(csvFormat(file.data)), encoding: 'base64'});\n        let filePath = `data/${file.fileName}`;\n        treeItems.push({\n          path: filePath,\n          sha: fileGit.sha,\n          mode: \"100644\",\n          type: \"blob\"\n        })\n      } \n  \n      let tree = await repo.git.trees.create({\n        tree: treeItems,\n        base_tree: baseReference.object.sha\n      });\n      let commit = await repo.git.commits.create({\n        message: auth.message || DEFAULT_MESSAGE,\n        tree: tree.sha,\n        parents: [baseReference.object.sha]\n      });\n  \n      baseReference.update({sha: commit.sha});\n      dispatch({\n        type: UPDATE_REMOTE_FILES_SUCCESS,\n      });\n    } catch(err) {\n      console.error(err);\n      dispatch({\n        type: UPDATE_REMOTE_FILES_FAILURE,\n        err\n      });\n    }\n  })\n}\n\nexport const createBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: CREATE_BRANCH_REQUEST\n  });\n\n  const {auth, branch, reference} = payload;\n  const data = {\n    \"ref\": `refs/heads/${branch}`,\n    \"sha\": reference.sha\n  };\n  \n  return post(referenceUri, data, {\n    auth: {\n      username: auth.username,\n      password: auth.token\n    }\n  })\n  .then((res) => dispatch({\n    type: CREATE_BRANCH_SUCCESS,\n    payload: {\n      name: auth.username,\n      ref: res.data\n    }\n  })).catch((error) => dispatch({\n    type: CREATE_BRANCH_FAILURE,\n    error\n  }))\n}\n\nexport const logoutUser = () => ({\n  type: LOGOUT_USER\n})\n\n\nexport const  loginCreateBranch = (payload) => (dispatch) => {\n  dispatch({\n    type: LOGIN_CREATE_BRANCH_REQUEST,\n    payload\n  })\n  const {username, token} = payload;\n\n  const github = new Octokat({\n    username: username,\n    password: token\n  });\n\n  dispatch(async () => {\n    try {\n      let repo = await github.repos(owner, repoName).fetch();\n      let branches = await repo.branches.fetch();\n      let selectedBranch = branches.items.find((branch) => branch.name === username);\n      if (!selectedBranch) {\n        const refBranch = branches.items.find((branch) => branch.name === DEFAULT_REF_BRANCH);\n        selectedBranch = await repo.git.refs.create({\n          ref: `refs/heads/${username}`,\n          sha: refBranch.commit.sha\n        })\n      }\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_SUCCESS,\n        payload: {\n          name: username,\n          ref: selectedBranch\n        }\n      })\n\n    } catch(error) {\n      console.error(error)\n      dispatch({\n        type: LOGIN_CREATE_BRANCH_FAILURE,\n        payload: {\n          error\n        }\n      })\n    }\n  })\n  \n\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLogined: false,\n        tables: null,\n        selectedBranch:null,\n        isBranchCreated: false\n      }\n    case INIT_TABLES:\n      return {\n        ...state,\n        tables: null,\n        remoteUpdateStatus: null\n      }\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_TABLES_FAILURE:\n      return {\n        ...state,\n        tables: null\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case LOGIN_CREATE_BRANCH_SUCCESS:\n      return {\n        ...state,\n        isLogined: true,\n        selectedBranch: payload,\n        isBranchCreated: true,\n      }\n    case LOGIN_CREATE_BRANCH_FAILURE:\n      return {\n        ...state,\n        isLogined: false,\n        selectedBranch: null,\n        isBranchCreated: false\n      }\n    case UPDATE_REMOTE_FILES_REQUEST:\n      return {\n        ...state,\n        remoteUpdateStatus: 'loading'\n      }\n    case UPDATE_REMOTE_FILES_SUCCESS:\n      return {\n        ...state,\n        remoteUpdateStatus: \"updated\",\n      }\n    case UPDATE_REMOTE_FILES_FAILURE:\n      return {\n        ...state,\n        remoteUpdateStatus: \"fail\"\n      }\n    default:\n      return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {pullAll, isEqual} from 'lodash';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const ADD_TABLE_ROW = 'ADD_TABLE_ROW';\nexport const INIT_TABLES = 'INIT_TABLES';\nexport const DELETE_TABLE_ROW = 'DELETE_TABLE_ROW';\n\nexport const initTables = () => ({\n  type: INIT_TABLES,\n})\n\nexport const addTableRow = (payload) => ({\n  type: ADD_TABLE_ROW,\n  payload\n})\n\nexport const deleteTableRow = (payload) => ({\n  type: DELETE_TABLE_ROW,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state) => {\n    return initialState;\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const referenceTables = {}\n    const originalLength = {}\n    Object.keys(payload).forEach((id) => {\n      referenceTables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n      originalLength[id] = referenceTables[id].length\n    })\n    state.referenceTables = referenceTables;\n    state.originalLength = originalLength\n  },\n  DELETE_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    let newTable = state.referenceTables[resourceName].slice();\n    newTable = newTable.filter((row) =>{\n      return !data.some((r) => { return isEqual(row, r) })\n    });\n    state.referenceTables[resourceName] = newTable\n  },\n  ADD_TABLE_ROW: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.referenceTables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data);\n    state.referenceTables[resourceName] = newTable;\n  },\n})","import {\n  START_MODIFICATION,\n} from './modification';\n\nimport {INIT_TABLES} from './referenceTables';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => (dispatch) => {\n  if (payload.id === '0') {\n    dispatch({\n      type: INIT_TABLES\n    })\n  }\n  dispatch({\n    type: SET_STEP,\n    payload\n  });\n}\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.referenceTables.referenceTables;\n\nconst re = /row\\s\\d*/;\nexport const getGroupedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        originalValue: errors[0].value,\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\n/** \n* SELECTORS\n*/\n\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, referenceTables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = referenceTables[tableName]\n    });\n    return relations;\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {NON_CHANGABLE_FIELDS} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors,originalValue, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              {originalValue !== value && <span className=\"has-text-danger\">{originalValue}-></span>}\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\">->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length>0 &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\">->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const uniqValues = uniq(values);\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq, groupBy, orderBy} from 'lodash';\n\nimport Select from 'react-select';\nimport Autosuggest from 'react-autosuggest';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue, fixedValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue) {\n      this.validateField(fieldValue)\n    }\n    if (fixedValue !== prevProps.fixedValue && !fixedValue) {\n      const state = this.getStateFromProps();\n      this.setState({\n        ...state\n      })\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue || '',\n      fieldValid: {\n        valid: false\n      },\n      options,\n      suggestions: []\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = (value, suggestedOptions) => {\n    const getSuggestions = (value, options) => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0 ? [] : options.filter(option =>\n        option.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    };\n    this.setState({\n      suggestions: getSuggestions(value, suggestedOptions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleSuggestionChange =  (event, { newValue }) => {\n    this.validateField(newValue)\n  };\n\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion}\n    </div>\n  );\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable, isValidationField, suggestedOptions} = this.props;\n    const {fieldSchema, fieldValid, value, suggestions} = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: '',\n      value,\n      onChange: this.handleSuggestionChange\n    };\n\n    let isReferenceField = false;\n    \n    const handleSuggestionsFetchRequested = ({value}) => {\n      this.onSuggestionsFetchRequested(value, suggestedOptions)\n    }\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName: foreignKeys[index].reference.resource,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            (!this.state.value || isValidationField)  &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <Select isClearable={true}\n        value= {generateValue(value)}\n        options={this.state.options}\n        onChange={this.handleChange} />\n      )\n    }\n    else if (suggestedOptions) {\n      return <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      getSuggestionValue={(value) => value}\n      renderSuggestion={this.renderSuggestion}\n      inputProps={inputProps} />\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.props.onTouch(true)\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true)\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  handleDiscard = () => {\n    this.props.onTouch(false);\n    const state = this.hydrateState()\n    this.setState({\n      ...state\n    });\n    this.props.onDiscard()\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor, isModificationTouched} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          fixedValue={this.state.fixedValue}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {/*\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          */}\n          {\n            isModificationTouched &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['RICentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'RICentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'RICentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues,capitalize, pick, sortBy, uniq, deburr} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {NON_CHANGABLE_FIELDS, SOURCE_SLUG_FIELDS, SOURCE_SUGGESTION_FIELDS} from '../constants';\n\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n\n      if (field.constraints && field.constraints.required) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      if (prefixedValues && prefixedValues[field.name]) {\n        value = prefixedValues[field.name];\n        valid = true\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const re = /[^a-zA-Z0-9]+/g;\n    const value = SOURCE_SLUG_FIELDS.map( f => {\n      if (preFields[f] && preFields[f].value){\n        return deburr(preFields[f].value).trim().split(' ').map(w => capitalize(w.replace(re, ''))).join('')\n      }\n      else\n        return null;\n      \n    }, '').filter(e => e).join('_');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug'] && SOURCE_SLUG_FIELDS.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'RICentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      prefixedValues: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues, prefixedValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data[0])].concat([values(payload.newResource.data[0])]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        const prefixedValues = {\n          \"modified_currency\": this.state.newResource['modified_currency'].value\n        }\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              prefixedValues,\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            prefixedValues,\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              sortBy(schema.fields, (field) => field.constraints && field.constraints.required)\n              .map((field, index) => {\n                let suggestedOptions;\n                if (resourceDescriptor.name === 'sources' && SOURCE_SUGGESTION_FIELDS.indexOf(field.name)!== -1) {\n                  suggestedOptions = uniq(referenceTables['sources'].map((d) => d[field.name]))\n                }\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={NON_CHANGABLE_FIELDS.indexOf(field.name) !==-1 || (prefixedValues && prefixedValues[field.name])}\n                    isValidationField={this.state.prefixedValues && this.state.prefixedValues[field.name]}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    suggestedOptions={suggestedOptions}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || (prefixedValues && prefixedValues[field.name])}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                prefixedValues={this.state.prefixedValues}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {NON_CHANGABLE_FIELDS, LABEL_FIELDS_FK_SOLVED} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\nimport FieldInput from './FieldInput';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      showNewForm: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      let fixedValue = fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]]:\n                                              newResource.data[0][foreignKeyField.reference.fields]\n      if (Object.keys(LABEL_FIELDS_FK_SOLVED).indexOf(field) !== -1) {\n        // incase the value of mapping is not found\n        if (newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]) {\n          fixedValue = newResource.data[0][LABEL_FIELDS_FK_SOLVED[field]]\n        }\n      }\n      return {\n        ...res,\n        [field]: fixedValue\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(true)\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.props.onTouch(true);\n    const fixedValues = this.initFixedValues();\n\n    this.setState({\n      fixedValues,\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.props.onTouch(false)\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleDiscard = () => {\n    const {modificationItem} = this.props;\n    this.props.onTouch(false);\n    const fixedValues = this.initFixedValues();\n    this.setState({\n      fixedValues,\n      showSolving: modificationItem.fixed ? false : true,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    });\n    this.props.onDiscard()\n  }\n  \n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable, fixedStatus}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(NON_CHANGABLE_FIELDS, field.split('|')).length < NON_CHANGABLE_FIELDS.length\n\n    return (\n      <FieldContainer>\n        <Control>\n\n          <Label className=\"has-text-success\">Fixed with value</Label>\n          <p className=\"has-text-success\">{printValue}</p>\n          <Help isColor=\"success\">\n            {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n            {\n              fixedReferenceTable && fixedReferenceTable.map((table)=> {\n                return (\n                  <li>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n                )\n              })\n            }\n          </Help>\n          {!this.state.showSolving && <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>}\n          {unchangable && fixedStatus === 'fixInOther' &&<Help isColor=\"success\">found same value in other error, please fix it there</Help>}\n          {unchangable && fixedStatus === 'autoFixed' &&<Help isColor=\"success\">this foreign key error is auto fixed by previous format modification</Help>}\n        </Control>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, referenceTables, isCurrencyFixDisabled, schema} = this.props;\n\n    const fieldDescriptor = schema.fields.find((f) => f.name === modificationItem.field)\n    \n    return (\n      <div>\n        {modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldInput \n            isNonchangable={false}\n            foreignKeys={schema.foreignKeys}\n            fieldDescriptor={fieldDescriptor} \n            referenceTables={referenceTables}\n            fixedValue={this.state.fixedValues[modificationItem.field]}\n            fieldValue={this.state.fixedValues[modificationItem.field]}\n            onClickCreate={this.handleClickCreate}\n            onChange={this.handleSelectExist} />\n        }\n        {\n          modificationItem.field !== 'source' &&\n          <FieldContainer>\n            <Control>\n              {isCurrencyFixDisabled && <Help isColor=\"danger\">Please fix year format error first</Help>}\n              <Button isDisabled={isCurrencyFixDisabled} isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n            </Control>\n          </FieldContainer>  \n        }\n      </div>\n      )\n  }\n\n  render() {\n    const {modificationItem, foreignKeyField, descriptor, referenceTables, isModificationTouched} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={referenceTables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {/* {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              } */}\n              {\n                isModificationTouched &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleDiscard}>Discard modification</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  referenceTables,\n  descriptor,\n  schema,\n  isCurrencyFixDisabled,\n  isModificationTouched,\n  modificationItem,\n  modificationIndex,\n  onDiscard,\n  onTouch,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          isModificationTouched={isModificationTouched}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          isCurrencyFixDisabled={isCurrencyFixDisabled}\n          isModificationTouched={isModificationTouched}\n          referenceTables={referenceTables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onDiscard={onDiscard}\n          onTouch={onTouch}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  referenceTables: state.referenceTables.referenceTables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose\n} from 'design-workshop';\n\n\nconst AlertModal = ({\n  isActive,\n  closeModal\n}) => {\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalContent>\n        <Card bodyContent=\"You have made a modification, please confirm your fix first?\" />\n      </ModalContent>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default AlertModal","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq, findIndex} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {addTableRow, deleteTableRow} from '../../redux/modules/referenceTables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\nimport AlertModal from '../../components/AlertModal';\n\nclass DataModification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      isModificationTouched: false\n    }\n  }\n\n  handleTouchModification = (touched) => {\n    this.setState({\n      isModificationTouched: touched\n    })\n  }\n\n  handleShowAlert = () => {\n    this.setState({\n      showAlert: true\n    })\n  }\n\n  handleHideAlert = () => {\n    this.setState({\n      showAlert: false\n    })\n  }\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, referenceTables, steps, selectedStep} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false);\n    const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n    const modificationItem = modificationList[modificationIndex]\n    let isCurrencyFixDisabled = false;\n    if (modificationItem.field === 'currency|year|reporting' && yearFormatValues.indexOf(modificationItem.value.split('|')[1]) !== -1) {\n      isCurrencyFixDisabled = true\n    }\n    \n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () =>  {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n\n    const handlePrevError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleDiscard = () => {\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError();\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    const handleHideModification = () => {\n      if (this.state.isModificationTouched) {\n        this.handleShowAlert();\n        return;\n      }\n      this.props.hideModification();\n    }\n    \n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber);\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = [...flows[e.rowNumber -1]]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: referenceTables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const prevFixedReferenceTable = modificationItem.fixedReferenceTable;\n        if (prevFixedReferenceTable && fixedReferenceTable) {\n          prevFixedReferenceTable.forEach((table) => {\n            this.props.deleteTableRow(table);\n          })\n        }\n        fixedReferenceTable.forEach((table) => {\n          this.props.addTableRow(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      this.setState({\n        isModificationTouched: false\n      });\n\n      if ( modificationIndex < modificationList.length - 1 && nonFixedList.length > 0) {\n        this.props.goNextError()\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              isCurrencyFixDisabled={isCurrencyFixDisabled}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationItem} \n              isModificationTouched={this.state.isModificationTouched}\n              onTouch={this.handleTouchModification}\n              onDiscard={handleDiscard}\n              onSubmitModification={handleSubmitModification} />\n            \n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={handleHideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <span>{(this.state.showAlert).toString()}</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n            <AlertModal isActive={this.state.showAlert} closeModal={this.handleHideAlert} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  referenceTables: state.referenceTables.referenceTables,\n  schema: getResourceSchema(state),\n  modificationList: state.modification.modificationList,\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  addTableRow,\n  deleteTableRow,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n  csvFormat\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFlow (array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv':\n    default: {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx': {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, `${fileName}.${ext}`);\n      break\n    }\n  }\n}\n\nexport function downloadTable (array, fileName, ext) {\n  let file;\n  switch(ext) {\n    case 'csv': \n    default:{\n      const csvString = csvFormat(array)\n      file = new File(\n        [csvString],\n        `${fileName}.${ext}`,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  Field,\n  Label,\n  Input,\n  Control,\n  Help\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalClose,\n  ModalCard,\n  ModalCardHeader,\n  ModalCardTitle,\n  Delete,\n  ModalCardBody,\n  ModalCardFooter\n} from 'bloomer';\n\nimport {values} from 'lodash';\n\nclass GithubAuthModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      token: '',\n      message: ''\n    };\n  }\n\n  handleChangeUser = (event) => {\n    this.setState({username: event.target.value});\n  }\n\n  handleChangeToken = (event) => {\n    this.setState({\n      token: event.target.value\n    });\n  }\n\n  handleChangeMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n\n  handleSubmit = () => {\n    this.props.onSubmitAuth(this.state)\n  }\n\n  render() {\n    const {isActive, isCommit, closeModal} = this.props;\n    let invalidInput = !this.state.username || !this.state.token;\n    \n    if (isCommit) {\n      invalidInput =!this.state.username || !this.state.token || !this.state.message;\n    }\n\n    return (\n      <Modal isActive={isActive}>\n        <ModalBackground onClick={closeModal} />\n        <ModalCard>\n          <ModalCardBody>\n            <Field>\n              <Label>username*:</Label>\n              <Control>\n                <Input value={this.state.username} onChange={this.handleChangeUser} />\n              </Control>\n            </Field>\n            <Field>\n              <Label>personal access token*:</Label>\n              <Control>\n                <Input type=\"password\" value={this.state.token} onChange={this.handleChangeToken} />\n              </Control>\n            </Field>\n            {isCommit && \n              <Field>\n                <Label>commit message*:</Label>\n                <Control>\n                  <Input value={this.state.message} onChange={this.handleChangeMessage} />\n                </Control>\n              </Field>\n            }\n            <Field>\n              {invalidInput &&<Help isColor=\"danger\">requied field is missing</Help>}\n              <Button isDisabled={invalidInput} isColor=\"info\" onClick={this.handleSubmit}>{isCommit ? 'Commit': 'Login'}</Button>\n            </Field>\n          </ModalCardBody>\n        </ModalCard>\n        <ModalClose onClick={closeModal} />\n      </Modal>\n    )\n  }\n}\n\nexport default GithubAuthModal;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {groupBy, pick} from 'lodash';\n\nimport {\n  Button,\n  Control,\n  Field,\n  Columns,\n  Column,\n  Help\n} from 'design-workshop';\n\nimport {\n  csvParse\n} from 'd3-dsv';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {setStep} from '../../redux/modules/ui';\n\nimport {updateRemoteFiles} from '../../redux/modules/repoData';\n\nimport {downloadFlow, downloadTable} from '../../utils/fileExporter';\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPublish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n\n  handleOpenModal = () => {\n    this.setState({isModalShow: true})\n  }\n\n  handleCloseModal = () => {\n    this.setState({isModalShow: false})\n  }\n\n  render () {\n    const {flows, repoData, referenceTables, originalLength} = this.props;\n    const {selectedBranch, remoteUpdateStatus} = repoData;\n    const repoTables = repoData.tables;\n\n    let updatedTables = [];\n\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n\n    const handleExportFlow = () => {\n      const {file, data} = flows;\n      downloadFlow(data, `${file.name}_corrections`, 'csv')\n    }\n    \n    const parsedFlows = csvParse(flows.data.map(d => d.join(',')).join('\\n'));\n    const groupedFlows = groupBy(parsedFlows, (item) => item['source']);\n\n\n    const handleUpdateRemoteFiles= (auth) => {\n      this.handleCloseModal();\n\n      const flowFiles = Object.keys(groupedFlows).map((file) => {\n        return {\n          fileName: `${file}.csv`,\n          data: groupedFlows[file]\n        }\n      });\n      const tableFiles = updatedTables.map((table) => {\n        return {\n          fileName: `${table.name}.csv`,\n          data: referenceTables[table.name],\n          sha: repoTables[table.name].sha\n        }\n      })\n      this.props.updateRemoteFiles({\n        auth,\n        files: flowFiles.concat(tableFiles),\n        branch: selectedBranch.name\n      })\n    }\n    const handleStartOver = () => {\n      this.props.setStep({id: '0'})\n    }\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <strong>fixed flows table by source</strong>\n            {\n              Object.keys(groupedFlows).map((source) => {\n                return (\n                  <p>{source}.csv</p>\n                )\n              })\n            }\n          </Column>\n          <Column>\n            <div>\n              <strong>updated reference tables</strong>\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <Control>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </Control>\n                  )\n                })\n              }\n            </div>\n          </Column>\n        </Columns>\n        <Field isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={handleExportFlow}>Download fixed flows</Button>\n          </Control>\n          <Control>\n            {\n              remoteUpdateStatus === 'updated' ? \n              <Button isColor='success' onClick={handleStartOver}>Start a new import</Button> :\n              <Button isDisabled={remoteUpdateStatus === 'loading'} isColor=\"info\" onClick={this.handleOpenModal}>Publish tables to \"{selectedBranch.name}\" branch</Button>\n            }\n          </Control>\n        </Field>\n        <Field>\n          {remoteUpdateStatus === 'loading' && <Help isColor='success'>updating files on github, please wait...</Help>}\n          {remoteUpdateStatus === 'updated' && <Help isColor='success'>files are updated on github</Help>}\n          {remoteUpdateStatus === 'fail' && <Help isColor='danger'>fail to update files on github</Help>}\n        </Field>\n        <GithubAuthModal \n          isActive={this.state.isModalShow}\n          isCommit={true}\n          closeModal={this.handleCloseModal}\n          onSubmitAuth={handleUpdateRemoteFiles}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  exportFlows,\n  updateRemoteFiles\n})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nimport {loginCreateBranch, logoutUser} from '../../redux/modules/repoData';\n\nimport GithubAuthModal from '../../components/GithubAuthModal';\n\n\nclass DataPrep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalShow: false \n    }\n  }\n  componentDidMount() {\n    this.props.fetchDatapackage()\n  }\n   \n  handleShowLogin =()=> {\n    this.setState({\n      isModalShow: true\n    })\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      isModalShow: false\n    })\n  }\n   \n  handleLogin = (payload) => {\n    this.props.loginCreateBranch(payload);\n    this.handleCloseModal()\n  }\n\n  renderFetchTable() {\n    const {repoData} = this.props;\n    const {selectedBranch, tables, isBranchCreated} = repoData;\n\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch.name});\n    }\n\n    return (\n      <div>\n        {isBranchCreated ? \n          <Help isColor=\"success\">branch \"{selectedBranch.name}\" is created</Help> : \n          <Help isColor=\"danger\">could not get branch from github, try login again</Help>\n        }\n        {\n          selectedBranch && !tables &&\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch table from branch {selectedBranch.name}</Button>\n        }\n        {selectedBranch && (tables ?\n          <Help isColor=\"success\">tables from {selectedBranch.name} branch are loaded</Help>:\n          <Help isColor=\"danger\">tables are not loaded, please reload from {selectedBranch.name} branch</Help>)\n        }\n      </div>\n    )\n  }\n\n  render () {\n    const {repoData} = this.props;\n    const {selectedBranch, isLogined} = repoData;\n  \n    return (\n      <div>\n        {/* <Label>Get tables from {selectedBranch.name} branch</Label>\n          <Select value={selectedBranch} onChange={handleSelectBranch}>\n            {\n              branches.map((item, index) => {\n                return (\n                  <option key={index}>{item.name}</option>\n                )\n              })\n            }\n          </Select>\n          <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button> */}\n          { !isLogined &&\n            <Button isColor=\"info\" onClick={this.handleShowLogin}>\n            <span>Login to get branch</span>\n            </Button>\n          }\n          {\n            isLogined &&\n            <Button isColor=\"info\" onClick={this.props.logoutUser}>\n              <span>Logout</span>\n            </Button>\n          }\n          {selectedBranch && this.renderFetchTable()}\n          <GithubAuthModal \n            isActive={this.state.isModalShow}\n            isCommit={false}\n            closeModal={this.handleCloseModal} \n            onSubmitAuth={this.handleLogin} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  loginCreateBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {findIndex} from 'lodash';\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\n\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  steps,\n  selectedStep,\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name.split('.')[0]\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => {\n    const currentIndex = findIndex(steps, selectedStep);\n    setStep(steps[currentIndex+1])\n  }\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\nimport { file } from '@babel/types';\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let missingRows = [];\n                      if (field.errorType === 'ERROR_FORMAT' && (field.name==='reporting' || field.name === 'partner')) {\n                        missingRows = field.errors.map((error) => error.rowNumber);\n                      }\n                      if(columnIndex === 0) return (<div key={columnIndex} className=\"table-cell\">{field.name}</div>)\n                      else if(columnIndex === 1) return (<div key={columnIndex} className=\"table-cell\">{field.errorType}</div>)\n                      else return (\n                        <div key={columnIndex} className=\"table-cell\">\n                          <span>{distinctErrors} different invalid values, {totalErrors} rows affected in total</span>\n                          {missingRows.map((rowNumber)=> {\n                            return (<li className=\"has-text-danger\">missing value in row {rowNumber}</li>)\n                          })}\n                        </div>\n                      )\n                      \n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\nimport {findIndex} from 'lodash';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getGroupedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList, steps, selectedStep} = this.props;\n    let isRequiredFieldMissing = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isRequiredFieldMissing = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => {\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex-1])\n    }\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const groupedErrors = getGroupedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(groupedErrors)\n      }\n      const currentIndex = findIndex(steps, selectedStep)\n      this.props.setStep(steps[currentIndex+1])\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isRequiredFieldMissing && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isRequiredFieldMissing}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n  Button,\n  Card,\n  Field,\n  Control\n} from 'design-workshop';\n\nimport {\n  Modal,\n  ModalBackground,\n  ModalClose,\n  ModalCard,\n  ModalCardBody,\n} from 'bloomer';\n\nimport {downloadTable} from '../utils/fileExporter';\nconst LeaveModificationModal = ({\n  originalLength,\n  referenceTables,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n  let updatedTables = [];\n  if (referenceTables) {\n    Object.keys(referenceTables).forEach((name) => {\n      if (referenceTables[name].length !== originalLength[name]) {\n        updatedTables.push({\n          name,\n          updatedRows: referenceTables[name].slice(originalLength[name])\n        })\n      }\n    });\n  }\n\n  return (\n    <Modal isActive={isActive}>\n      <ModalBackground onClick={closeModal} />\n      <ModalCard>\n        <ModalCardBody>\n          <div style={{\n          textAlign:'center'\n          }}>\n              <h5 className=\"title is-5\">Leave this step, you might lost your modification?</h5>\n              {updatedTables.length>0 && <p>updated reference tables</p>}\n              {\n                updatedTables.map((table)=>{\n                  const handleExportTable = () => {\n                    downloadTable(referenceTables[table.name], table.name, 'csv')\n                  }\n                  return (\n                    <div>\n                      <a href=\"#\" onClick={handleExportTable}>{table.name} table: {table.updatedRows.length} rows added</a>\n                    </div>\n                  )\n                })\n              }\n              <Field isGrouped>\n                <Control>\n                  <Button onClick={onSelectDownload} isColor=\"success\">Download fixed flows</Button>\n                </Control>\n                <Control>\n                  <Button onClick={onSelectDiscard} isColor=\"danger\">Discard</Button>\n                </Control>\n                <Control>\n                  <Button onClick={closeModal} isColor=\"info\">Cancel</Button>\n                </Control>\n            </Field>\n            </div>\n        </ModalCardBody>\n      </ModalCard>\n      <ModalClose onClick={closeModal} />\n    </Modal>\n  )\n}\n\nexport default LeaveModificationModal","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFlow} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport LeaveModificationModal from './components/LeaveModificationModal';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  referenceTables,\n  originalLength,\n  modificationList,\n  //actions\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFlow(data, `${file.name}_ongoing_corrections`, 'csv')\n  }\n\n  const handleSetStep = (step) => {\n    const {remoteUpdateStatus} = repoData;\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0' && remoteUpdateStatus !== 'updated') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <LeaveModificationModal\n        referenceTables={referenceTables}\n        originalLength={originalLength}\n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  referenceTables: state.referenceTables.referenceTables,\n  originalLength: state.referenceTables.originalLength,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport referenceTables from './modules/referenceTables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  referenceTables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./geojson.json\": 354,\n\t\"./table-schema.json\": 867,\n\t\"./topojson.json\": 355\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 866;","var map = {\n\t\"./data-package.json\": 928,\n\t\"./data-resource.json\": 929,\n\t\"./fiscal-data-package.json\": 930,\n\t\"./registry.json\": 931,\n\t\"./tabular-data-package.json\": 932,\n\t\"./tabular-data-resource.json\": 933\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 927;","var map = {\n\t\"./geojson.json\": 390,\n\t\"./table-schema.json\": 999,\n\t\"./topojson.json\": 391\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 998;"],"sourceRoot":""}