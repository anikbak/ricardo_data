{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/repoData.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","constants.js","redux/modules/ui.js","components/SummaryTable.js","components/ContextTable.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","redux/modules/flows.js","redux/modules/schemaValidation.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","tablesList","name","path","initialState","DataPrep","this","props","fetchDatapackage","fetchAllTables","branch","repoData","react_default","a","createElement","tables","datapackage","React","Component","connect","state","payload","dispatch","type","Promise","all","table","get","concat","apiUri","then","res","forEach","item","data","split","catch","error","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","reporting","partner","export_import|special_general","currency|year|reporting","SET_STEP","SHOW_MODIFICATION","HIDE_MODIFICATION","GO_NEXT_ERROR","GO_PREV_ERROR","setStep","steps","title","selectedStep","isModification","modificationIndex","OverviewTable","_ref","className","groupedErrors","columnNames","style","position","width","height","columnName","index","key","errorIndex","field","errors","columnIndex","value","components","message","length","ContextTable","flows","modificationItem","errorColumn","indexOf","rowIndex","wordBreak","rowNumber","DataModification","orderedErrors","_this","_this$props","schemaFeedback","collectedErrors","errorsList","values","reduce","groupedErrorsList","groupBy","v","sortBy","SummaryTable","isColor","onClick","showModification","hideModification","components_ContextTable","goPrevError","goNextError","schemaValidation","ui","UPDATE_FLOW","IMPORT_FLOWS","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","schema","foreignKeys","allFields","foreignKeysList","getForeignKeyFields","d","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","objectSpread","defineProperty","errorType","foreignKeyErrors","joinedFields","row","selectedErrors","find","err","columnNumber","push","joinedColumn","tableValidated","headerFeedback","getSchema","descriptor","resources","resource","getRelations","getForeignKeys","relations","tableName","reference","HeaderValidation","diff","headerNames","fieldNames","diffLength","difference","validationMap","valid","Math","abs","display","justifyContent","FileUpload","importFlows","validateHeader","status","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","Table","load","slice","sent","read","limit","headers","t0","console","stop","maxSize","onDrop","_ref2","file","slicedToArray","reject","reader","FileReader","onload","event","bstr","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","blankrows","undefined","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","isSize","textAlign","components_HeaderValidation","totalErrors","distinctErrors","cellValue","SchemaValidation","validateTable","loader","components_OverviewTable","_callee4","_context5","delegateYield","_callee3","tableLength","chunk","i","_loop","_context4","offset","chunkTable","rows","chunkErrors","_context3","forceCast","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isDisabled","isWorkspace","isSecondary","isPrimary","containers_DataPrep","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","renderChildren","Boolean","window","location","hostname","match","combineReducers","arguments","action","csvParse","Base64","decode","content","year","JSON","parse","persistConfig","storage","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c749696a.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 314,\n\t\"./table-schema.json\": 788,\n\t\"./topojson.json\": 315\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 787;","var map = {\n\t\"./data-package.json\": 851,\n\t\"./data-resource.json\": 852,\n\t\"./fiscal-data-package.json\": 853,\n\t\"./registry.json\": 854,\n\t\"./tabular-data-package.json\": 855,\n\t\"./tabular-data-resource.json\": 856\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 850;","var map = {\n\t\"./geojson.json\": 348,\n\t\"./table-schema.json\": 922,\n\t\"./topojson.json\": 349\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 921;","import {get} from 'axios';\nimport {apiUri, repoUrl} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\n\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n export const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      // newDescriptor = {...state.descriptor};\n      // newDescriptor.resources.forEach((resource)=> {\n      //   if (payload[resource.name]) {\n      //     delete resource.path;\n      //     resource.data = csvParseRows(atob(payload[resource.name].content))\n      //   }\n      // });\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    this.props.fetchDatapackage()\n    this.props.fetchAllTables({branch:'master'})\n  }\n\n  render () {\n    const {repoData} = this.props\n    return (\n      <div>\n        {!repoData.tables && <span>loading tables</span>}\n        {!repoData.datapackage && <span>loading datapackage</span>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"species_bullions\": 3,\n  \"transport_type\": 4,\n  \"statistical_period\": 5,\n  \"partner_sum\": 6,\n  \"world_trade_type\": 7,\n  \"notes\": 8,\n  \"source\": 9,\n  \"reporting\": 10,\n  \"partner\": 11,\n  \"export_import|special_general\": 12,\n  \"currency|year|reporting\": 13\n}","export const SET_STEP = 'SET_STEP';\nexport const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\n\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModification = () => ({\n  type: SHOW_MODIFICATION,\n});\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  // {\n  //   id: '3',\n  //   name: 'Export/Publish Data',\n  //   title: 'Export or Publish your data to Github'\n  // }\n];\n\nconst initialState = {\n  steps, \n  selectedStep: steps[0],\n  isModification: false,\n  modificationIndex: 0\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...state,\n        selectedStep: steps.find((step) => payload.id === step.id)\n      }\n    case SHOW_MODIFICATION:\n      return {\n        ...state,\n        isModification: true\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false\n      }\n    case GO_NEXT_ERROR:\n      return {\n        ...state,\n        modificationIndex: state.modificationIndex + 1\n      }\n    case GO_PREV_ERROR:\n      if (state.modificationIndex === 0) return;\n      return {\n        ...state,\n        modificationIndex: state.modificationIndex - 1\n      }\n    default:\n     return state\n  }\n}","import React from 'react';\n\nimport {\n  HelpPin,\n} from 'design-workshop';\n\nconst OverviewTable = ({\n  className,\n  groupedErrors,\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows']\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            groupedErrors.map((item, errorIndex) => {\n              const {field, errors} = item;\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{errors[0].value || 'null'}</span>\n                              <HelpPin>{errors[0].message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (<div key={columnIndex} className=\"table-cell\">{errors.length}</div>);\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors} = modificationItem;\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = errors[0].columnName.indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                      const errorColumn = error.columnName.indexOf(columnName) !== -1 ? true : false\n\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {groupBy, sortBy, values} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {RANKED_FIELDS} from '../../constants';\nimport {\n  showModification, \n  hideModification,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\nimport SummaryTable from '../../components/SummaryTable';\nimport ContextTable from '../../components/ContextTable';\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schemaFeedback, isModification, modificationIndex} = this.props;\n    let orderedErrors;\n    if (schemaFeedback.collectedErrors) {\n      const errorsList = values(schemaFeedback.collectedErrors).reduce((res, item) => {\n        return res.concat(item.errors)\n      },[])\n      const groupedErrorsList = values(groupBy(errorsList, (v) => v.field + v.value))\n                                .map((errors)=> {\n                                  return {\n                                    field: errors[0].field,\n                                    value: errors[0].value,\n                                    errors\n                                  }\n                                })\n      orderedErrors = sortBy(groupedErrorsList, (field) => {\n        return RANKED_FIELDS[field.name]\n      });\n    }\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < orderedErrors.length - 1) this.props.goNextError();\n    }\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                orderedErrors.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{orderedErrors.length} different errors need to modify</div>\n              }\n              {\n                orderedErrors && \n                <SummaryTable groupedErrors={orderedErrors} />\n              }\n              <Button isColor=\"info\" onClick={this.props.showModification}>\n                Start fix error\n              </Button>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <Button isColor=\"info\" onClick={this.props.hideModification}>\n              Back to summary\n            </Button>\n            <div className=\"has-text-danger has-text-weight-bold\">({modificationIndex + 1}) {orderedErrors[modificationIndex].errors[0].message}</div>\n            <ContextTable flows={flows} modificationItem={orderedErrors[modificationIndex]} />\n            {\n              modificationIndex !==0 &&\n                <Button isColor=\"info\" onClick={handlePrevError}>\n                  Prev Error\n                </Button>\n            }\n            {\n              modificationIndex !== (orderedErrors.length-1) &&\n              <Button isColor=\"info\" onClick={handleNextError}>\n                Next Error\n              </Button>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  isModification: state.ui.isModification,\n  modificationIndex: state.ui.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  showModification,\n  hideModification,\n  goNextError,\n  goPrevError\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","export const UPDATE_FLOW = 'UPDATE_FLOW';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\n\nexport const updateFlow = (payload) => ({\n  type: UPDATE_FLOW,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case IMPORT_FLOWS: \n      return payload;\n    case UPDATE_FLOW:\n      return {\n        ...state,\n        data: payload.data\n      };\n    default:\n     return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {Package} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor, relations} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      const dataPackage = await Package.load(descriptor, {basePath: repoUrl});\n      resource = dataPackage.getResource('flows');\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const rowNumber = error.rowNumber;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex] || 'null',\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  \n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => error.rowNumber = error.rowNumber + chunk * offset -offset)\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  tableValidated: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  tables: null\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state\n    case FETCH_TABLES_SUCCESS:\n      const tables = {}\n      Object.keys(payload).forEach((id) => {\n        tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n          if (d.year) {\n            return {\n              ...d,\n              year: +d.year\n            }\n          }\n          return d\n        })\n      })\n      return {\n        ...state,\n        tables\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    // case IMPORT_FLOWS:\n    //   newDescriptor = {...state.descriptor};\n    //   // newDescriptor.resources.forEach((resource)=> {\n    //   //   resource.path = `${repoUrl}/${resource.path}`\n    //   // });\n    //   delete newDescriptor.resources[0].path\n    //   // newDescriptor.resources[0].dialect = {\n    //   //   delimiter: ';',\n    //   //   header: true\n    //   // }\n    //   newDescriptor.resources[0].data = payload.data\n    //   return {\n    //     ...state,\n    //     descriptor: newDescriptor\n    //   }\n    // case VALIDATE_RESOURCE_SUCCESS:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: true\n    //     }\n    //   }\n    // case VALIDATE_RESOURCE_FAILURE:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: false,\n    //       ...payload\n    //     }\n    //   }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nexport const getSchema = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  return resource.schema\n}\n\nexport const getRelations = (state) => {\n  const foreignKeys = getForeignKeys(state)\n  const relations = {};\n  foreignKeys.forEach((key) => {\n    const tableName = key.reference.resource;\n    relations[tableName] = state.schemaValidation.tables[tableName]\n  });\n  return relations;\n}\n\nexport const getForeignKeys = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  const {foreignKeys} = resource.schema;\n  return foreignKeys\n}","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getSchema\n} from '../../redux/modules/schemaValidation';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DropZone\n        maxSize={MAXIMUM_FILE_SIZE}\n        onDrop={handleDrop}\n        onDropRejected={handleDropRejected}\n        isSize=\"small\">\n        <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n      </DropZone>\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  flows: state.flows,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {type: 'binary'});\n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `total ${totalErrors} rows, ${distinctErrors} different invalid values`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\n// import FeedbackTable from '../../components/FeedbackTable';\n// import AggregatedTable from '../../components/AggregatedTable';\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getForeignKeys, getSchema} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations} = this.props;\n    this.props.validateTable({source:flows, schema, relations});\n  }\n  render() {\n    const { schemaFeedback} = this.props;\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => this.props.setStep({id: '2'})\n\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              {/* Found format errors in {Object.keys(schemaFeedback.collectedErrors.formatErrors).length} columns, ForeignKey errors in {Object.keys(schemaFeedback.collectedErrors.foreignKeyErrors).length} columns, {schemaFeedback.errors.length} rows */}\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <Button \n              isColor=\"info\" \n              onClick={handlePrevStep}>\n                Previous Step\n            </Button>\n            <Button \n              isColor=\"info\"\n              onClick={handleNextStep}>\n                Review Errors\n            </Button>\n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  relations: state.schemaValidation.descriptor && getRelations(state),\n  foreignKeys: state.schemaValidation.descriptor && getForeignKeys(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataPrep from './containers/DataPrep';\nimport DataModification from './containers/DataModification';\nimport FileUpload from './containers/FileUpload';\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\nimport styles from 'design-workshop/themes/default/style.css';\n\nimport { \n  setStep\n} from './redux/modules/ui';\n\nconst App = ({\n  steps,\n  selectedStep,\n  repoData,\n  //actions\n  setStep\n}) => {\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <DataPrep />\n      { repoData.descriptor &&\n        <Layout \n          steps={steps}\n          selectedStep={selectedStep}\n          onSetStep={setStep}>\n          {renderChildren()}\n        </Layout>\n      }\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\n\nexport default combineReducers({\n  ui,\n  flows,\n  schemaValidation,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    rootReducer,\n    // persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}