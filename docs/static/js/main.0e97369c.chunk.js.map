{"version":3,"sources":["../node_modules/datapackage/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","redux/modules/modification.js","redux/modules/ui.js","redux/modules/flows.js","constants.js","redux/modules/repoData.js","redux/modules/schemaValidation.js","redux/modules/tables.js","components/SummaryTable.js","components/ContextTable.js","utils/formUtils.js","components/FieldInput.js","components/FormatCorrection.js","components/NewResourceForm.js","components/NewResourceRow.js","components/NewRICentityForm.js","components/ReferenceResourceForm.js","components/ForeignkeyCorrection.js","containers/DataModification/ModificationComponent.js","containers/DataModification/DataModification.js","containers/DataModification/index.js","utils/fileExporter.js","containers/DataPublish/DataPublish.js","containers/DataPublish/index.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","components/HeaderValidation.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/ConfirmationModal.js","components/OverviewTable.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","START_MODIFICATION","initialState","foreignKeyField","modificationIndex","modificationList","createReducer","SET_STEP","state","action","payload","REVALIDATE_ROWS_SUCCESS","originalValue","fixedValues","forEach","item","index","field","value","split","objectSpread","fixed","unchangable","currency","year","reporting","REVALIDATE_ROWS_FAILURE","fixedValue","find","HIDE_MODIFICATION","SELECT_ERROR","GO_NEXT_ERROR","GO_PREV_ERROR","SUBMIT_MODIFICATION","SHOW_CONFIRMATION_MODAL","HIDE_CONFIRMATION_MODAL","setStep","type","steps","name","title","isModalDisplay","selectedStep","isModification","fixedIndex","IMPORT_FLOWS","UPDATE_FLOWS","errors","fieldList","error","columnNumber","data","indexOf","rowNumber","nonChangableFields","RANKED_FIELDS","flow","unit","species_bullions","transport_type","statistical_period","partner_sum","world_trade_type","notes","source","partner","export_import|special_general","currency|year|reporting","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","FETCH_BRANCHES_SUCCESS","SELECT_BRANCH","tablesList","path","selectedBranch","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","VALIDATE_HEADER_REQUEST","VALIDATE_HEADER_SUCCESS","VALIDATE_HEADER_FAILURE","joinForeignKeyFields","fields","join","getCollectedErrors","flows","schema","foreignKeys","allFields","foreignKeysList","formatFields","filter","foreignKeysFields","foreignKey","errorTypes","formatErrors","reduce","res","defineProperty","errorType","foreignKeyErrors","joinedFields","row","originalRowNumber","selectedErrors","err","columnIndex","message","push","joinedColumn","columnName","values","length","resourceName","schemaFeedback","headerFeedback","descriptor","getResourceName","schemaValidation","getResources","resources","re","getResourceSchema","createSelector","resource","getRelations","tables","selectedResource","relations","key","tableName","reference","INIT_TABLES","_ref","csvParse","Base64","decode","content","d","_ref2","UPDATE_TABLE","_ref3","newTable","slice","splice","apply","concat","toConsumableArray","SummaryTable","className","onSelectError","columnNames","yearFormatValues","react_default","a","createElement","style","position","width","height","errorIndex","isNonchangableField","difference","handleSelectError","isCurrencyFixDisabled","isNull","components","fixedReferenceTable","table","isDisabled","isOutlined","isColor","onClick","ContextTable","modificationItem","errorColumn","rowIndex","errorColumnIndex","wordBreak","getEnumOptions","enumList","required","arguments","undefined","options","label","unshift","getOptions","referenceField","uniq","FieldInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStateFromProps","_this$props","fieldDescriptor","fieldValue","fieldSchema","Field","constraints","enum","fieldValid","valid","validateField","castValue","setState","onChange","fieldName","handleChange","event","target","handleClickCreate","f","onClickCreate","referenceMap","prevProps","_this$props2","_this$props3","referenceTables","showNewReference","newReference","isNonchangable","_this$state","isReferenceField","findIndex","react_select_browser_esm","isSearchable","isClearable","generateValue","_this$state2","_this$props4","renderField","React","Component","FormatCorrection","hydrateState","showSolving","handleFieldChange","handleSubmitForm","onSubmitForm","handleShowSolving","handleHideSolving","printValue","isSubmitDisabled","components_FieldInput","isGrouped","isSize","renderOriginal","renderFixed","renderInput","slugFields","NewResourceRow","overflow","RICname","continent","COW_code","NewRICentityForm","resourceDescriptor","handleChangeMulti","list","orderBy","toLowerCase","multiParts","continentValue","continents","getContinent","_this2","fieldsInvalid","sortedFields","sortBy","_this2$state$fields$f","isMulti","onCancel","newResource","mapValues","part","RICname_group","RICname_part","onAddNew","ReferenceResourceForm","originalValues","getSlug","preFields","capitalize","slug","onSelectGroup","handleShowNew","handleHideNew","isRICentityGroup","handleCreateNewReference","resourceValid","handleAddNewReference","_this$state$reference","newRefReference","handleResetNewReference","handleSelectGroup","getReferenceDescriptor","handleAddNew","asyncToGenerator","regenerator_default","mark","_callee","rows","wrap","_context","prev","next","exchange_rates","Table","load","sent","read","forceCast","t0","console","stop","components_NewRICentityForm","components_NewResourceRow","ForeignKeyCorrection","initFixedValues","showNewForm","handleResetCreate","handleAddNewResource","handleCancel","handleSelectExist","fixedValueSelected","referenceFieldResource","mapFieldValue","layoutColumn","getLayoutColumns","renderSolving","flex","components_ReferenceResourceForm","connect","validateResource","dispatch","Resource","multiple","messages","onSubmitModification","handleSubmitModification","components_FormatCorrection","getFieldDescriptor","ForeignkeyCorrection","isEqual","getForeignKeyField","components_ContextTable","DataModification","nonFixedList","selectError","components_SummaryTable","display","justifyContent","DataModification_ModificationComponent","updateFlows","rowNumbers","currencies","revalidateRows","updateTable","submitModification","hideModification","marginLeft","goPrevError","goNextError","modification","ui","status","_callee3","_context3","downloadFile","array","fileName","ext","file","header","csvString","csvFormatRows","File","FileSaver","saveAs","sheet","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","DataPublish","_this$props$flows","exportFlows","DataPrep","fetchDatapackage","fetchBranches","repoData","branches","selectBranch","branch","fetchAllTables","get","branchUri","then","catch","Promise","all","apiUri","HeaderValidation","diff","headerNames","fieldNames","diffLength","validationMap","Math","abs","FileUpload","importFlows","validateHeader","_callee2","_context2","limit","headers","containers_DataPrep","maxSize","onDrop","slicedToArray","reject","reader","FileReader","onload","bstr","result","wsname","SheetNames","ws","Sheets","sheet_to_json","defval","blankrows","onerror","readAsBinaryString","parseSheet","csvParseRows","tsvParse","readAsText","parseTable","onDropRejected","log","textAlign","components_HeaderValidation","ConfirmationModal","onSelectDiscard","onSelectDownload","isActive","closeModal","bodyContent","onAction","footerActions","OverviewTable","collectedErrors","orderedErrors","totalErrors","groupedErrors","groupBy","v","distinctErrors","cellValue","SchemaValidation","validateTable","isNextStepDisabled","loader","components_OverviewTable","errorsList","groupedErrorsList","replace","getOrderedErrors","startModification","_callee5","_context6","delegateYield","_callee4","tableLength","chunk","i","_loop","_context5","offset","chunkTable","chunkErrors","_context4","t1","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isWorkspace","isSecondary","isPrimary","initTables","showModal","hideModal","containers_Layout","containers_FileUpload","containers_SchemaValidation","containers_DataModification","containers_DataPublish","renderChildren","components_ConfirmationModal","Boolean","window","location","hostname","match","combineReducers","JSON","parse","datapackage","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","persistor","persistStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e97369c.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 319,\n\t\"./table-schema.json\": 782,\n\t\"./topojson.json\": 320\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 781;","var map = {\n\t\"./data-package.json\": 845,\n\t\"./data-resource.json\": 846,\n\t\"./fiscal-data-package.json\": 847,\n\t\"./registry.json\": 848,\n\t\"./tabular-data-package.json\": 849,\n\t\"./tabular-data-resource.json\": 850\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 844;","var map = {\n\t\"./geojson.json\": 353,\n\t\"./table-schema.json\": 916,\n\t\"./topojson.json\": 354\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 915;","import { createReducer } from 'redux-starter-kit';\nimport {values} from 'lodash'\nimport {SET_STEP} from './ui';\n\nexport const SUBMIT_MODIFICATION = 'SUBMIT_MODIFICATION';\nexport const START_MODIFICATION = 'START_MODIFICATION';\n\nexport const startModification = (payload) => ({\n  type: START_MODIFICATION,\n  payload\n});\n\nexport const submitModification = (payload) => ({\n  type: SUBMIT_MODIFICATION,\n  payload\n});\n\n\nconst initialState = {\n  foreignKeyField: null,\n  modificationIndex: 0,\n  modificationList: null\n}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  START_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList = payload\n    state.modificationIndex = 0\n  },\n  REVALIDATE_ROWS_SUCCESS: (state, action) => {\n    // case 1: only year format error, no foreignkey error\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === ''+originalValue) {\n        state.modificationList[index] = {\n          ...state.modificationList[index],\n          fixed: true,\n          unchangable: true,\n          fixedValues: {\n            'currency': item.value.split('|')[0],\n            'year': fixedValues['year'],\n            'reporting': item.value.split('|')[2]\n          }\n        }\n      }\n    })\n  },\n  REVALIDATE_ROWS_FAILURE: (state, action) => {\n    // case 2,3: voilation relations\n    const {payload} = action;\n    const {originalValue, fixedValues} = payload;\n    state.modificationList\n    .forEach((item, index) => {\n      if (item.field === 'currency|year|reporting' && item.value.split(\"|\")[1] === '' +originalValue) {\n        const fixedValue = item.value.split(\"|\")[0] + '|' + fixedValues['year'] + '|' + item.value.split(\"|\")[2];\n        if (state.modificationList.find((item) => item.value === fixedValue)) {\n          // case 2: fixed formatted year rows values of (currency|year|reporting) are same with other rows\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: true,\n            unchangable: true,\n            fixedValues: {\n              'currency': item.value.split('|')[0],\n              'year': fixedValues['year'],\n              'reporting': item.value.split('|')[2]\n            }\n          }\n        } else {\n          // case 3: fixed formatted year rows are new combo of (currency|year|reporting)\n          state.modificationList[index] = {\n            ...state.modificationList[index],\n            fixed: false,\n            unchangable: false,\n            // fixedValues: {\n            //   'currency': item.value.split('|')[0],\n            //   'year': fixedValues['year'],\n            //   'reporting': item.value.split('|')[2]\n            // }\n          }\n        } \n      }\n    })\n  },\n  HIDE_MODIFICATION: (state, action) => {\n    state.modificationIndex = 0\n  },\n  SELECT_ERROR: (state, action) => {\n    const {payload} = action;\n    state.modificationIndex = payload.index;\n  },\n  GO_NEXT_ERROR: (state, action) => {\n    state.modificationIndex = state.modificationIndex + 1\n  },\n  GO_PREV_ERROR: (state, action) => {\n    if (state.modificationIndex > 0) {\n      state.modificationIndex = state.modificationIndex - 1\n    }\n  },\n  SUBMIT_MODIFICATION: (state, action) => {\n    const {payload} = action;\n    state.modificationList[payload.index] = {\n      ...state.modificationList[payload.index],\n      ...payload,\n      fixed: true\n    }\n  }\n})\n\n","import {\n  START_MODIFICATION,\n} from './modification';\n\nexport const SET_STEP = 'SET_STEP';\n\n// export const SHOW_MODIFICATION = 'SHOW_MODIFICATION';\nexport const HIDE_MODIFICATION = 'HIDE_MODIFICATION';\n\nexport const GO_NEXT_ERROR = 'GO_NEXT_ERROR';\nexport const GO_PREV_ERROR = 'GO_PREV_ERROR';\nexport const SELECT_ERROR = 'SELECT_ERROR';\n\nexport const SHOW_CONFIRMATION_MODAL = 'SHOW_CONFIRMATION_MODAL';\nexport const HIDE_CONFIRMATION_MODAL = 'HIDE_CONFIRMATION_MODAL';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nexport const showModal = () => ({\n  type: SHOW_CONFIRMATION_MODAL\n})\n\nexport const hideModal = () => ({\n  type: HIDE_CONFIRMATION_MODAL\n})\n\nexport const hideModification = () => ({\n  type: HIDE_MODIFICATION,\n});\n\nexport const selectError = (payload) => ({\n  type: SELECT_ERROR,\n  payload\n});\n\nexport const goPrevError = () => ({\n  type: GO_PREV_ERROR,\n});\n\nexport const goNextError = () => ({\n  type: GO_NEXT_ERROR,\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  {\n    id: '2',\n    name: 'Error Fixing',\n    title: 'Fix errors by fields'\n  },\n  {\n    id: '3',\n    name: 'Export/Publish Data',\n    title: 'Export or Publish your data to Github'\n  }\n];\n\nconst initialState = {\n  steps, \n  isModalDisplay: false,\n  selectedStep: steps[0],\n  isModification: false,\n  // modificationIndex: 0,\n  fixedIndex: []\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...initialState,\n        selectedStep: steps.find((step) => payload.id === step.id),\n      }\n    case SHOW_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: true\n      }\n    case HIDE_CONFIRMATION_MODAL:\n      return {\n        ...state,\n        isModalDisplay: false\n      }\n    case START_MODIFICATION:\n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: 0\n      }\n    case HIDE_MODIFICATION:\n      return {\n        ...state,\n        isModification: false,\n        // modificationIndex: 0\n      }\n    case SELECT_ERROR: \n      return {\n        ...state,\n        isModification: true,\n        // modificationIndex: payload.index\n      }\n    // case GO_NEXT_ERROR:\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex + 1\n    //   }\n    // case GO_PREV_ERROR:\n    //   if (state.modificationIndex === 0) return;\n    //   return {\n    //     ...state,\n    //     modificationIndex: state.modificationIndex - 1\n    //   }\n    default:\n     return state\n  }\n}","import { createReducer } from 'redux-starter-kit';\n\nimport {SET_STEP} from './ui';\n\nexport const UPDATE_FLOWS = 'UPDATE_FLOWS';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\nexport const EXPORT_FLOWS = 'EXPORT_FLOWS';\n\nexport const updateFlows = (payload) => ({\n  type: UPDATE_FLOWS,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\nexport const exportFlows = (payload) => ({\n  type: EXPORT_FLOWS\n});\n\n\nconst initialState = {}\n\nexport default createReducer(initialState, {\n  SET_STEP: (state, action) => {\n    const {payload} = action;\n    if (payload.id === '0') {\n      return initialState\n    }\n  },\n  IMPORT_FLOWS: (state, action) => {\n    const {payload} = action;\n    return payload\n  },\n  UPDATE_FLOWS: (state, action) => {\n    const {payload} = action;\n    const {errors, fixedValues} = payload;\n    const fieldList = Object.keys(fixedValues)\n    errors.forEach((error) => {\n      fieldList.forEach((field) => {\n        const columnNumber = state.data[0].indexOf(field);\n        state.data[error.rowNumber -1][columnNumber] = fixedValues[field];\n      })\n    })\n  }\n})\n","export const MAXIMUM_FILE_SIZE = 10000000;\nexport const DEFAULT_CHUNK_SIZE = 100;\n\nexport const nonChangableFields = ['slug', 'export_import', 'special_general', 'reporting', 'partner', 'original_name', 'currency', 'year']\n\nexport const RANKED_FIELDS = {\n  \"id\": 0,\n  'flow': 1,\n  \"unit\": 2,\n  \"year\": 3,\n  \"species_bullions\": 4,\n  \"transport_type\": 5,\n  \"statistical_period\": 6,\n  \"partner_sum\": 7,\n  \"world_trade_type\": 8,\n  \"notes\": 9,\n  \"source\": 10,\n  \"reporting\": 11,\n  \"partner\": 12,\n  \"export_import|special_general\": 13,\n  \"currency|year|reporting\": 14\n}","import {get} from 'axios';\nimport {apiUri, branchUri} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\nexport const FETCH_BRANCHES_REQUEST = 'FETCH_BRANCHES_REQUEST';\nexport const FETCH_BRANCHES_SUCCESS = 'FETCH_BRANCHES_SUCCESS';\nexport const FETCH_BRANCHES_FAILURE = 'FETCH_BRANCHES_FAILURE';\n\nexport const SELECT_BRANCH = 'SELECT_BRANCH';\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  {\n    name: 'RICentities',\n    path: 'data/RICentities.csv'\n  },\n  {\n    name: 'RICentities_groups',\n    path: 'data/RICentities_groups.csv'\n  },\n  {\n    name: 'currencies',\n    path: 'data/currencies.csv'\n  },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  {\n    name: 'exchange_rates',\n    path: 'data/exchange_rates.csv'\n  },\n  {\n    name: 'expimp_spegen',\n    path: 'data/expimp_spegen.csv'\n  }\n];\n\n/**\n * ACTIONS\n */\n\nexport const selectBranch = (payload) => ({\n  type: SELECT_BRANCH,\n  payload\n})\n\nexport const fetchBranches = (payload) => (dispatch) => {\n  dispatch({\n    type: FETCH_BRANCHES_REQUEST,\n    payload\n  });\n  return get(branchUri)\n  .then((res) => {\n    return dispatch({\n      type: FETCH_BRANCHES_SUCCESS,\n      payload: {\n        ...payload,\n        branches: res.data\n      }\n    })\n  }).catch((error) => dispatch({\n    type: FETCH_BRANCHES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  selectedBranch: 'master'\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case FETCH_BRANCHES_SUCCESS:\n      return {\n        ...state,\n        branches: payload.branches\n      }\n    case SELECT_BRANCH:\n      return {\n        ...state,\n        selectedBranch: payload.branch,\n        tables: null\n      }\n    default:\n      return state\n  }\n}","import { createSelector } from 'reselect'\n\nimport {groupBy, sortBy, values, max, min,difference, keys, uniq} from 'lodash';\nimport {Package, Resource} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {DEFAULT_CHUNK_SIZE, RANKED_FIELDS} from '../../constants';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\nexport const VALIDATE_HEADER_REQUEST = 'VALIDATE_HEADER_REQUEST';\nexport const VALIDATE_HEADER_SUCCESS = 'VALIDATE_HEADER_SUCCESS';\nexport const VALIDATE_HEADER_FAILURE = 'VALIDATE_HEADER_FAILURE';\n\nexport const REVALIDATE_ROWS_REQUEST = 'REVALIDATE_ROWS_REQUEST';\nexport const REVALIDATE_ROWS_SUCCESS = 'REVALIDATE_ROWS_SUCCESS';\nexport const REVALIDATE_ROWS_FAILURE = 'REVALIDATE_ROWS_FAILURE';\n\n\nconst joinForeignKeyFields = (fields) => {\n  if (typeof(fields) === 'string') return fields;\n  else return fields.join('|');\n};\n\nconst getForeignKeyFields = (fields) => {\n  return fields.reduce((res, field) => {\n    if (typeof(field) === 'string') return res.concat([field]);\n    else return res.concat(field)\n  }, []);\n} \n\nconst getCollectedErrors = (flows, schema, errors) => {\n  const {fields, foreignKeys} = schema;\n\n  const allFields = fields.map((field)=> field.name);\n  // const foreignKeysList = getForeignKeyFields(foreignKeys.map((d) => d.fields));\n  // TODO: hardcoded\n  const foreignKeysList = [\"source\", \"export_import\", \"special_general\", \"currency\"];\n\n  const formatFields = fields.filter((field) => foreignKeysList.indexOf(field.name) === -1)\n  const foreignKeysFields = foreignKeys.map((foreignKey) => joinForeignKeyFields(foreignKey.fields));\n\n  const errorTypes = ['ERROR_FORMAT', 'ERROR_FOREIGN_KEY'];\n\n  const formatErrors = formatFields.reduce((res, field) => {\n    return {\n      ...res,\n      [field.name]: {\n        name: field.name,\n        schema: field,\n        errorType: 'ERROR_FORMAT',\n        errors: []\n      }\n    }\n  }, {});\n\n  const foreignKeyErrors = foreignKeys.reduce((res, foreignKey) => {\n    const joinedFields = joinForeignKeyFields(foreignKey.fields);\n    // const foreignKeySchema = fields.find((field) => field.name === foreignKey.fields)\n    return {\n      ...res,\n      [joinedFields]: {\n        name: joinedFields,\n        ...foreignKey,\n        errorType: 'ERROR_FOREIGN_KEY',\n        errors: []\n      }\n    }\n  }, {});\n\n  errors.forEach((error)=>{\n    const row = flows[error.rowNumber -1];\n    const {rowNumber, originalRowNumber} = error;\n    errorTypes.forEach((errorType) => {\n      const selectedErrors = error.errors.find((err) => err.type === errorType)\n      if(!selectedErrors) return;\n      if(errorType === 'ERROR_FORMAT') {\n        allFields.forEach((field, columnIndex) => {\n          selectedErrors.errors.forEach((err) => {\n            if (err.columnNumber === columnIndex + 1 && foreignKeysList.indexOf(field) === -1) {\n              const item = {\n                rowNumber,\n                errorType,\n                columnNumber: err.columnNumber,\n                field,\n                value: row[columnIndex],\n                message: err.message\n              }\n              formatErrors[field].errors.push(item)\n            }\n          })\n        })\n      }\n\n      else if (errorType === 'ERROR_FOREIGN_KEY') {\n        foreignKeysFields.forEach((fields) => {\n          selectedErrors.errors.forEach((err) => {\n            // const fieldsList = fields.split('|');\n            const joinedColumn = joinForeignKeyFields(err.columnName);\n            if (joinedColumn === fields) {\n              const values = err.columnName.map((field) => {\n                const columnIndex = allFields.indexOf(field);\n                return row[columnIndex]\n              })\n              const item = {\n                rowNumber,\n                originalRowNumber,\n                errorType,\n                columnName: err.columnName,\n                field: joinedColumn,\n                value: values.join('|'),\n                message: err.message\n              }\n              foreignKeyErrors[fields].errors.push(item)\n            }\n          })\n        })\n      }\n    })\n  });\n\n  Object.keys(formatErrors).forEach((columnName) => {\n    if(!formatErrors[columnName].errors.length) {\n      delete formatErrors[columnName]\n    }\n  });\n\n  Object.keys(foreignKeyErrors).forEach((columnName) => {\n    if(!foreignKeyErrors[columnName].errors.length) {\n      delete foreignKeyErrors[columnName]\n    }\n  });\n  if (formatErrors['reporting'] || formatErrors['partner']) {\n    return formatErrors\n  }\n  return {\n    ...formatErrors,\n    ...foreignKeyErrors\n  }\n}\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      // const dataPackage = await Package.load(descriptor);\n      // resource = dataPackage.getResource(resourceName);\n      resource = Resource.load(descriptor);\n      await resource.read()\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateHeader = (payload) => (dispatch) => {\n  const {source, schema} = payload;\n  dispatch({\n    type: VALIDATE_HEADER_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source.slice(0,2), {schema});\n      await table.read({limit: 1});\n      dispatch({\n        type: VALIDATE_HEADER_SUCCESS,\n        payload: {\n          status: 'done',\n          valid: true,\n          headers: table.headers\n        }\n      })\n    } catch (error) {\n      console.error(error)\n      if (error.type !== 'ERROR_HEADER') {\n        dispatch({\n          type: VALIDATE_HEADER_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            headers: table.headers\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_HEADER_FAILURE,\n          valid: false,\n          status: 'done',\n          payload: error\n        })\n      }\n    }\n  })\n}\n\nexport const revalidateRows = (payload) => (dispatch) => {\n  const {rowNumbers, originalValue, fixedValues, source, schema, relations} = payload;\n\n  dispatch({\n    type: REVALIDATE_ROWS_REQUEST,\n    payload: {\n      ...payload,\n      status: 'loading'\n    }\n  })\n  dispatch(async() => {\n    let table;\n    try {\n      table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations});\n      const errors = rows.filter((row) => row.errors);\n\n      if (errors.length) {\n        dispatch({\n          type: REVALIDATE_ROWS_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      } else {\n        dispatch({\n          type: REVALIDATE_ROWS_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true,\n            rowNumbers,\n            originalValue,\n            fixedValues\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: REVALIDATE_ROWS_FAILURE,\n        payload: {\n          status: 'done',\n          valid: false,\n          error\n        }\n      })\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  const {source, schema, relations} = payload;\n  dispatch(async() => {\n    try {\n      const tableLength = source.length;\n      const chunk = DEFAULT_CHUNK_SIZE;\n      let i = 0\n      let errors = []\n      for(i; i < tableLength; i += chunk) {\n        dispatch({\n          type: VALIDATE_TABLE_REQUEST,\n          payload: {  \n            status: 'loading',\n            loader: `validating ${i} rows`\n          }\n        })\n        const offset = i / chunk\n        const chunkTable = [source[0]].concat(source.slice(i+1-offset, i+chunk-offset))\n        const table = await Table.load(chunkTable, {schema});\n        const rows = await table.read({forceCast: true, relations});\n        const chunkErrors = rows.filter((row) => row.errors)\n        if (chunkErrors.length) {\n          chunkErrors.forEach((error) => {\n            error.rowNumber = error.rowNumber + chunk * offset - offset\n          });\n          errors = errors.concat(chunkErrors)\n        }\n      }\n      // const table = await Table.load(source, {schema});\n      // const rows = await table.read({forceCast: true});\n      // const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors,\n            collectedErrors: getCollectedErrors(source, schema, errors)\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  resourceName: 'flows',\n  schemaFeedback: null,\n  headerFeedback: null,\n  descriptor: null,\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  let newErrors;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null,\n          headerFeedback: null,\n        }\n      }\n      return state;\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    case VALIDATE_HEADER_REQUEST: \n    case VALIDATE_HEADER_FAILURE:\n    case VALIDATE_HEADER_SUCCESS:\n      return {\n        ...state,\n        headerFeedback: payload\n      }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nconst getResourceName = state => state.schemaValidation.resourceName;\nconst getResources = state => state.schemaValidation.descriptor.resources;\nconst getTables = state => state.tables.tables;\n\nconst re = /row\\s\\d*/;\nexport const getOrderedErrors = (collectedErrors) => {\n  const errorsList = values(collectedErrors).reduce((res, item) => {\n    return res.concat(item.errors)\n  },[]);\n\n  const groupedErrorsList = \n    values(groupBy(errorsList,(v) => v.field + v.value))\n    .map((errors, index)=> {\n      // const fieldName = errors[0].field;\n      // let yearRange;\n      // if (fieldName === 'currency|year|reporting') {\n      //   const years = uniq(errors.map((error) => error.value.split('|')[1]));\n      //   yearRange = years.length > 1 ? `${min(years)}-${max(years)}` : years[0]\n      // }\n      // const value = fieldName !== 'currency|year|reporting' ? errors[0].value : `${errors[0].value.split('|')[0]}|${yearRange}|${errors[0].value.split('|')[2]}`\n      return {\n        index,\n        field: errors[0].field,\n        errorType: errors[0].errorType,\n        fixed: false,\n        message: errors[0].message.replace(re, `${errors.length} rows`),\n        value: errors[0].value, \n        errors\n      }\n    });\n  return sortBy(groupedErrorsList, (field) => {\n    return RANKED_FIELDS[field.name]\n  });\n}\n\nexport const getResourceSchema = createSelector(\n  getResourceName,\n  getResources,\n  (resourceName, resources) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    return selectedResource.schema\n})\n\nexport const getRelations = createSelector(\n  getResourceName,\n  getResources,\n  getTables,\n  (resourceName, resources, tables) => {\n    const selectedResource = resources.find((resource) => resource.name === resourceName);\n    const relations = {};\n    selectedResource.schema.foreignKeys.forEach((key) => {\n      const tableName = key.reference.resource;\n      relations[tableName] = tables[tableName]\n    });\n    return relations;\n})","import { createReducer } from 'redux-starter-kit';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\nimport {Base64} from 'js-base64';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n\n} from './repoData';\n\nexport const UPDATE_TABLE = 'UPDATE_TABLE';\nexport const INIT_TABLES = 'INIT_TABLES';\n\nexport const initTables = (payload) => ({\n  type: INIT_TABLES,\n  payload\n})\n\nexport const updateTable = (payload) => ({\n  type: UPDATE_TABLE,\n  payload\n})\n\nconst initialState = {};\n\n\nexport default createReducer(initialState, {\n  INIT_TABLES: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  FETCH_TABLES_SUCCESS: (state, {payload}) => {\n    const tables = {}\n    Object.keys(payload).forEach((id) => {\n      tables[id] = csvParse(Base64.decode(payload[id].content), (d) => {\n        if (d.year) {\n          return {\n            ...d,\n            year: +d.year\n          }\n        }\n        return d\n      })\n    })\n    state.tables = tables\n  },\n  UPDATE_TABLE: (state, {payload}) => {\n    const {data, resourceName} = payload;\n    const newTable = state.tables[resourceName].slice();\n    newTable.splice(newTable.length, 0, ...data)\n    state.tables[resourceName] = newTable\n  },\n})","import React from 'react';\nimport {isNull, values, difference} from 'lodash';\nimport {\n  HelpPin,\n  Button,\n} from 'design-workshop';\nimport {nonChangableFields} from '../constants'\n\n\nconst SummaryTable = ({\n  className,\n  modificationList,\n  onSelectError\n}) => {\n  const columnNames = ['', 'Field', 'Value', 'Rows', ''];\n  const yearFormatValues = modificationList\n                            .filter((item)=> item.field === 'year' && !item.fixed)\n                            .map((item) => ''+item.value);\n\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={columnName === 'Value' ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            modificationList.map((item, errorIndex) => {\n              const {field, errors, value, message, fixed, fixedValues} = item;\n              const fixedValue = values(fixedValues).join('|');\n\n              const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n              const handleSelectError = () => {\n                onSelectError(errorIndex)\n              }\n              let isCurrencyFixDisabled = false;\n              if (item.field === 'currency|year|reporting' && yearFormatValues.indexOf(item.value.split('|')[1]) !== -1) {\n                isCurrencyFixDisabled = true\n              }\n\n              return (\n                <div key={errorIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n\n                      switch (columnIndex) {\n                        case 0:\n                        default:\n                          return (<div key={columnIndex} className=\"table-cell\">{errorIndex + 1}</div>)\n                        case 1:\n                          return (<div key={columnIndex} className=\"table-cell\">{field}</div>);\n                        case 2:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <span className=\"has-text-danger\">{isNull(value)? 'none' : value }</span>\n                              {fixed && <span className=\"has-text-success\"> ->{fixedValue === ''?'none': fixedValue}</span>}\n                              <HelpPin>{message}</HelpPin>\n                            </div>);\n                        case 3:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <p className={item.fixed ? 'has-text-success': 'has-text-black'}>{errors.length} {item.fixed && !isNonchangableField ? 'rows updated' : ''}</p>\n                              {\n                                item.fixedReferenceTable && item.fixedReferenceTable.length &&\n                                  (\n                                    item.fixedReferenceTable.map((table, index)=> {\n                                      return (\n                                        <p key={index} className=\"has-text-success\">{table.data.length} row(s) added to \"{table.resourceName}\" table</p>\n                                      )\n                                    })\n                                  )\n                              }\n                            </div>);\n                        case 4:\n                          return (\n                            <div key={columnIndex} className=\"table-cell\">\n                              <Button isDisabled={isCurrencyFixDisabled} isOutlined isColor={item.fixed? 'success': 'info'} onClick={handleSelectError}>{item.fixed ? 'fixed': 'fix error'}</Button>\n                            </div>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n        {/* <div className={'action-table-footer'}></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryTable","import React from 'react';\n\nconst ContextTable = ({\n  className,\n  flows,\n  modificationItem\n}) => {\n  const columnNames = flows[0];\n  const {errors, field, value, fixedValues} = modificationItem;\n  return (\n    <div style={{position: 'relative', width: '100%', height: '20vh'}}>\n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n              return (\n                <div key={index} className=\"table-cell\">\n                  <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>{columnName}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'} style={{height: '100%'}}>\n            {\n              errors.map((error, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, columnIndex) => {\n                        const errorColumn = field.split('|').indexOf(columnName) !== -1 ? true : false\n                        let fixedValue;\n                        const errorColumnIndex = field.split('|').indexOf(columnName);\n                        let originalValue = (''+value).split('|')[errorColumnIndex];\n                        if (columnName === 'year' && errorColumnIndex===1) {\n                          originalValue = flows[error.rowNumber - 1][columnIndex]\n                        }\n                        if (fixedValues && errorColumn) {\n                          fixedValue = fixedValues[columnName].length === 0 ? 'none' : fixedValues[columnName];\n                        }\n                      return (\n                        <div key={columnIndex} className=\"table-cell\" style={{ wordBreak: 'break-all' }}>\n                          <span className={errorColumn ? 'has-text-danger': 'has-text-black'}>\n                            {errorColumn ? originalValue: flows[error.rowNumber - 1][columnIndex]}\n                          </span>\n                          {\n                            fixedValue && \n                              <span  className=\"has-text-success\"> ->{fixedValue}</span>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContextTable;","import {uniq} from 'lodash';\n\nexport const getEnumOptions = (enumList, required=false) => {\n  const options = enumList.map((e) => {\n    return {\n      label: e,\n      value: e\n    }\n  })\n  if (!required) {\n    options.unshift({\n      value: '',\n      label: 'none'\n    })\n  }\n  return options\n}\n\nexport const getOptions = ({tables, resourceName, referenceField, filter}) => {\n  let values;\n  if (filter) {\n    values = tables[resourceName]\n            .filter((item) => item[filter.field] !== filter.value)\n            .map((item) => item[referenceField])\n  }\n  else {\n    values = tables[resourceName].map((item) => item[referenceField])\n  }\n  const uniqValues = uniq(values);\n  return uniqValues.map((item) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}","\nimport React from 'react';\n\nimport {Field} from 'tableschema';\nimport {values, findIndex, uniq, groupBy, orderBy} from 'lodash';\n\nimport Select from 'react-select';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Input,\n  Help,\n  Select as SimpleSelect\n} from 'design-workshop'\n\n\nimport {getEnumOptions, getOptions} from '../utils/formUtils';\n\nclass FieldInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps();\n  }\n\n  componentDidUpdate (prevProps) {\n    const {fieldDescriptor, fieldValue} = this.props;\n    if (fieldDescriptor.name === 'slug' && fieldValue !== prevProps.fieldValue ) {\n      this.validateField(fieldValue)\n    }\n  }\n\n  getStateFromProps = () => {\n    const {fieldDescriptor, fieldValue} = this.props;\n    const fieldSchema = new Field(fieldDescriptor);\n    \n    let options;\n    if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      options = getEnumOptions(fieldSchema.constraints.enum, fieldSchema.constraints.required)\n    }\n    return {\n      fieldSchema,\n      value: fieldValue,\n      fieldValid: {\n        valid: false\n      },\n      options\n    }\n  }\n\n  validateField = (value) => {\n    const {fieldSchema} = this.state;\n    let payload\n    try {\n      fieldSchema.castValue(value);\n      payload  = {\n        value,\n        fieldValid: {\n          valid: true\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      })\n    } catch(error) {\n      payload = {\n        value,\n        fieldValid: {\n          valid: false,\n          error\n        }\n      }\n      this.setState(payload)\n      this.props.onChange({\n        fieldName: this.state.fieldSchema.name,\n        ...payload\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let value;\n    if(!event) {\n      value = '';\n      this.validateField(value);\n    }\n    else if(event && event.value) {\n      this.validateField(event.value);\n    }\n    else if (event && event.target) {\n      this.validateField(event.target.value);\n    }\n    else {\n      this.validateField('')\n    }\n  }\n\n  handleClickCreate = () => {\n    const field = this.props.foreignKeys.find((f) => f.fields === this.state.fieldSchema.name);\n    this.handleChange('');\n    this.props.onClickCreate({\n      referenceMap: {\n        field: this.state.fieldSchema.name,\n        referenceField: field ? field.reference.fields : this.state.fieldSchema.name\n      }\n    })\n  }\n\n\n  renderField() {\n    const {fieldValue, foreignKeys, referenceTables, showNewReference, newReference, isNonchangable} = this.props;\n    const {fieldSchema, fieldValid, value} = this.state;\n\n    let isReferenceField = false;\n    let options;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n\n    \n    if (findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1) !== -1) {\n      const index = findIndex(foreignKeys, (item)=>item.fields === fieldSchema.name || item.fields.indexOf(fieldSchema.name) !== -1)\n      const resourceName = foreignKeys[index].reference.resource;\n      const referenceField = foreignKeys[index].reference.fields;\n      isReferenceField = true;\n      \n      options = getOptions({\n        tables: referenceTables,\n        resourceName,\n        referenceField: typeof(referenceField) === 'object' ? referenceField[0]: referenceField\n      });\n    }\n\n    if (isNonchangable) {\n      return (<span>{fieldValue}</span>)\n    }\n    else if (isReferenceField) {\n      return (\n        <div>\n          {\n            !showNewReference && !newReference &&\n            <Select isSearchable={true}\n              isClearable={true}\n              value={generateValue(value)}\n              options={options}\n              onChange={this.handleChange} />\n          }\n          {\n            newReference &&\n            <div>{fieldValue}</div>\n          }\n          {\n            !this.state.value &&\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          } \n        </div>\n      )\n    }\n    else if (fieldSchema.constraints && fieldSchema.constraints.enum) {\n      return (\n        <SimpleSelect value={value} onChange={this.handleChange}>\n          {\n            this.state.options.map((item, index) => {\n              return (\n                <option key={index} value={item.value}>{item.label}</option>\n              )\n            })\n          }\n        </SimpleSelect>\n      )\n    }\n    else {\n      return (\n        <Input\n        value={value}\n        onChange={this.handleChange} />\n      )\n    }\n  }\n\n  render() {\n    const {fieldSchema, fieldValid, value} = this.state;\n    const {showNewReference, newReference} = this.props;\n    return (\n      <FieldContainer>\n        <Label>\n          {fieldSchema.name}\n          {\n            fieldSchema.constraints && fieldSchema.constraints.required &&\n            <span>*</span>\n          }\n        </Label>\n        <Control>\n          {this.renderField()}\n        </Control>\n        {\n          fieldValid && fieldValid.error && !showNewReference && !newReference &&\n            <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n        }\n      </FieldContainer> \n    )\n  }\n}\n\nexport default FieldInput;","import React from 'react';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop'  \n\nimport FieldInput from './FieldInput';\n\nclass FormatCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState();\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState()\n      this.setState({\n        ...state\n      });\n   }\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    return {\n      fixedValue: null,\n      showSolving: !modificationItem.fixed,\n      fieldValid: null\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {value, fieldValid} = payload;\n    this.setState({\n      fixedValue: value,\n      fieldValid\n    })\n  }\n\n\n  handleSubmitForm = () => {\n    const {modificationItem} = this.props;\n    const {fixedValue, fieldValid} = this.state;\n    if(!fieldValid || !fieldValid.valid) return;\n    const fixedValues = {\n      [modificationItem.field]: fixedValue\n    }\n    this.props.onSubmitForm({fixedValues});\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false\n    })\n  }\n\n  renderOriginal() {\n    const {modificationItem} = this.props;\n    const {value, message, field}= modificationItem;\n\n    return (\n      <FieldContainer>\n        <Label>Original value of \"{field}\":</Label>\n        <strong>{value.length === 0 ? 'none': value}</strong>\n        <Help isColor=\"danger\">{message}</Help>\n      </FieldContainer>\n    )\n  }\n\n  renderFixed() {\n    const {modificationItem} = this.props;\n    const {fixedValues, field, errors}= modificationItem;\n    const printValue = fixedValues[field].length === 0 ? 'none' : fixedValues[field];\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">Fixed with value</Label>\n        <strong className=\"has-text-success\">{printValue}</strong>\n        <Help isColor=\"success\">total {errors.length} rows affected</Help>\n        <Button isColor=\"info\" onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderInput() {\n    const {modificationItem, fieldDescriptor} = this.props;\n    const {fieldValid} = this.state;\n    const isSubmitDisabled = !fieldValid || !fieldValid.valid\n\n    return (\n      <div>\n        <Label>Fix with a new input</Label>\n        <FieldInput \n          isNonchangable={false}\n          fieldDescriptor={fieldDescriptor} \n          fieldValue={modificationItem.value}\n          onChange={this.handleFieldChange} />\n          \n        <FieldContainer isGrouped>  \n          {\n             modificationItem.fixed &&\n            <Control>\n              <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n            </Control>\n          }\n          <Control>\n            <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const {modificationItem} = this.props;\n    const {fixed}= modificationItem;\n    \n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize=\"1/2\">\n              {this.renderOriginal()}\n              {\n                fixed && !this.state.showSolving && this.renderFixed()\n              }\n              {\n                this.state.showSolving && this.renderInput()\n              }\n\n            </Column>\n          </Columns>\n  \n        </form>    \n      </div>\n    )\n  }\n}\n\nexport default FormatCorrection;","import React from 'react';\n\nimport {values, mapValues, capitalize} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\n\nimport {nonChangableFields} from '../constants'\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\n\nclass NewResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if(nonChangableFields.indexOf(field.name) !== -1) {\n          value = originalValues[field.name];\n          valid = true;\n        }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.fields,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    if (this.state.fields['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  render() {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: mapValues(this.state.fields, (item) => item.value || '')\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            schema.fields.map((field, index) => {\n              return (\n                <FieldInput \n                  key={index}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n          })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewResourceForm;","import React from 'react';\nimport {\n  Label,\n} from 'design-workshop'\nconst NewResourceRow = ({resource}) => { \n  const {data, resourceName} = resource;\n  return (\n    <div style={{height: '40vh', overflow:'auto'}}>\n      <h3>{data.length} row(s) add to \"{resourceName}\" table</h3>\n      {\n        data.map((row)=> {\n          return (\n            Object.keys(row).map((key) => {\n              return (\n                <div>\n                  <Label>{key}:</Label>\n                  <p>{row[key]}</p>\n                </div>\n              )\n            })\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default NewResourceRow;","import React from 'react';\n\nimport {values, mapValues, sortBy, orderBy} from 'lodash';\nimport {\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help\n} from 'design-workshop';\nimport Select from 'react-select';\n\nimport {getOptions} from '../utils/formUtils';\n\nimport FieldInput from './FieldInput';\n\nconst RANKED_FIELDS = {\n  \"type\": 0,\n  'RICname': 1,\n  \"continent\": 2,\n  \"COW_code\": 3\n}\n\nclass NewRICentityForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor} = this.props;\n    const {schema} = resourceDescriptor;\n    const fields = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      // TODO: hardcoded\n      if (field.name === 'type') {\n        value = 'group';\n      }\n      if (field.name === 'continent') {\n        value = ''\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      fields\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleChangeMulti = (event) => {\n    const {referenceTables} = this.props;\n    const table = referenceTables['RICentities'];\n\n    const getRICname = (list) => {\n      const orderedList = orderBy(list, [item => item.value.toLowerCase()], ['asc'])\n      return orderedList.map((item) => item.value).join(' & ');\n    }\n\n    const getContinent = (list, table) => {\n      const continents = list.map((item) => {\n        const findRow = table.find((row) => row['RICname'] === item.value);\n        return findRow.continent\n      });\n      if (continents.length > 1) return 'World';\n      else if (continents.length === 1) return continents[0];\n      return null;\n    }\n\n    const value = event ? getRICname(event) : '';\n    const multiParts = event ? event : [];\n    const continentValue = event ? getContinent(multiParts, table) : null;\n\n    // mockup validation\n    this.setState({\n      multiParts,\n      fields: {\n        ...this.state.fields,\n        RICname: {\n          fieldName: 'RICname',\n          value,\n          fieldValid:{\n            valid: value ==='' ? false: true,\n            error: value === ''? {message: 'field is required'} : null\n          }\n        },\n        continent: {\n          fieldName: 'continent',\n          value: continentValue,\n          fieldValid:{\n            valid: continentValue ==='' ? false: true,\n            error: continentValue === ''? {message: 'field is required'} : null\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const {resourceDescriptor, referenceTables} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.fields).filter((field) => field.fieldValid && !field.fieldValid.valid);\n\n    const handleAddNew = () => {\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.fields, (item) => item.value || '')]\n        },\n        newReference: {\n          resourceName: 'RICentities_groups',\n          data: this.state.multiParts.map((part) => {\n            return {\n              'RICname_group': this.state.fields['RICname'].value,\n              'RICname_part': part.value\n            }\n          })\n        }\n      }\n      this.props.onAddNew(payload)\n    }\n\n    const sortedFields = sortBy(schema.fields, (field) => {\n      return RANKED_FIELDS[field.name]\n    })\n\n    const options = getOptions({\n      tables: referenceTables,\n      resourceName: 'RICentities',\n      referenceField: 'RICname',\n      filter: {\n        field: 'type',\n        value: 'group'\n      }\n    });\n    return (\n      <div>\n        <div style={{height: '40vh', overflow:'auto'}}>\n          <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n          {\n            sortedFields.map((field, index) => {\n              if (field.name === 'RICname') {\n                const {value, fieldValid} = this.state.fields[field.name];\n                return (\n                  <FieldContainer>\n                    <Label>\n                      {field.name}\n                      {\n                        field.constraints && field.constraints.required &&\n                        <span>*</span>\n                      }\n                    </Label>\n                    <Control>\n                      <Select isSearchable={true}\n                          isClearable={true}\n                          isMulti\n                          value={this.state.multiParts}\n                          options={options}\n                          onChange={this.handleChangeMulti} />\n                        <div>{value}</div> \n                    </Control>\n                    {\n                      fieldValid && fieldValid.error && <Help isColor=\"danger\">{fieldValid.error.message}</Help>\n                    }\n                  </FieldContainer> \n                )\n              } \n              return (\n                <FieldInput \n                  key={index}\n                  isNonchangable={field.name !== 'RICname'}\n                  referenceTables={referenceTables}\n                  fieldDescriptor={field} \n                  fieldValue={this.state.fields[field.name].value}\n                  onChange={this.handleFieldChange} />\n              )\n            })\n          }\n        </div>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length > 0}  onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default NewRICentityForm;","import React from 'react';\nimport {Table} from 'tableschema';\n\nimport {keys, values, mapValues, capitalize, pick} from 'lodash';\n\nimport {\n  Button,\n  Field as FieldContainer,\n  Control,\n  Help,\n  Columns,\n  Column\n} from 'design-workshop';\n\nimport FieldInput from './FieldInput';\nimport NewResourceRow from './NewResourceRow';\nimport NewRICentityForm from './NewRICentityForm';\nimport {nonChangableFields} from '../constants';\n\nconst slugFields = ['author','name', 'country', 'volume_date', 'volume_number', 'pages'];\nclass ReferenceResourceForm extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps()\n  }\n\n  getStateFromProps = () => {\n    const {resourceDescriptor, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const newResource = schema.fields.reduce((res, field) => {\n      let value = '';\n      let valid = true;\n      if (field.constraints && field.constraints.enum) {\n        const enumList = field.constraints.enum\n        value = enumList[0]\n      }\n      if (field.constraints && field.constraints.required && !field.constraints.enum ) {\n        valid = false\n      }\n      if(originalValues && originalValues.find((item) => item.referenceField=== field.name) && field.name !== 'slug') {\n        value = originalValues.find((item) => item.referenceField=== field.name).value;\n        valid = true;\n      }\n      return {\n        ...res,\n        [field.name]: {\n          value,\n          fieldValid: {\n            valid\n          }\n        }\n      }\n    }, {});\n    return {\n      newResource,\n      showNewReference:false\n    }\n  }\n\n  getSlug = (payload) => {\n    const preFields = {\n      ...this.state.newResource,\n      [payload.fieldName]: payload\n    };\n    const value = slugFields.reduce((res, f)=> {\n      const printValue = preFields[f].value || ''\n      return res + capitalize(printValue)\n    }, '');\n    return {\n      fieldName: 'slug',\n      value\n    }\n  }\n\n  handleFieldChange = (payload) => {\n    const {resourceDescriptor} = this.props;\n\n    if (this.state.newResource['slug'] && slugFields.indexOf(payload.fieldName) !== -1) {\n      const slug = this.getSlug(payload);\n      this.setState({\n        newResource: {\n          ...this.state.newResource,\n          slug,\n          [payload.fieldName]: payload\n        }\n      });\n      return;\n    }\n    \n    if (resourceDescriptor.name === 'RICentities' && payload.fieldName === 'type' && payload.value === 'group') {\n      this.props.onSelectGroup()\n    }\n\n    this.setState({\n      newResource: {\n        ...this.state.newResource,\n        [payload.fieldName]: payload\n      }\n    })\n  }\n\n  handleShowNew = (payload) => {\n    this.setState({\n      showNewReference: true\n    })\n  }\n\n  handleHideNew = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      showNewReference: false,\n      newReference: null,\n      referenceMap: null,\n      isRICentityGroup: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleCreateNewReference = (payload) => {\n    const {referenceMap} = payload\n    const {field, referenceField} = referenceMap;\n    this.setState({\n      showNewReference: true,\n      resourceValid: {\n        valid: true\n      },\n      referenceMap,\n      newReference: null,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleAddNewReference = (payload) => {\n    const {newResource, newReference} = payload;\n    const {field, referenceField} = this.state.referenceMap;\n    this.setState({\n      newReference: newResource,\n      newRefReference: newReference,\n      showNewReference: false,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: true},\n          value: newResource.data[0][referenceField]\n        }\n      }\n    })\n  }\n\n  handleResetNewReference = () => {\n    const {referenceMap} = this.state;\n    const {field} = referenceMap;\n    this.setState({\n      newReference: null,\n      newRefReference: null,\n      showNewReference: true,\n      newResource: {\n        ...this.state.newResource,\n        [field]: {\n          fieldValid: {valid: false},\n          value: ''\n        }\n      }\n    })\n  }\n\n  handleSelectGroup = () => {\n    this.setState({\n      isRICentityGroup: true\n    })\n  }\n\n  render() {\n    const {descriptor, resourceDescriptor, referenceTables, originalValues} = this.props;\n    const {schema} = resourceDescriptor;\n    const fieldsInvalid = values(this.state.newResource).filter((field) => field.fieldValid && !field.fieldValid.valid);\n    const getReferenceDescriptor = () => {\n      if (schema.foreignKeys) {\n        const {reference} = schema.foreignKeys[0];\n        return descriptor.resources.find((resource) => resource.name === reference.resource);\n      }\n      return;\n    }\n    \n    const handleAddNew = async () =>{\n      const payload = {\n        newResource: {\n          resourceName: resourceDescriptor.name,\n          data: [mapValues(this.state.newResource, (item) => item.value || '')]\n        },\n        newReference: this.state.newReference,\n        newRefReference: this.state.newRefReference\n      }\n\n      // TODO: hardcoded\n      if (resourceDescriptor.name === 'currencies' && !this.state.newReference) {\n        const source = [keys(payload.newResource.data)].concat([values(payload.newResource.data)]);\n        const relations = {\n          exchange_rates: referenceTables['exchange_rates']\n        };\n        let table;\n        try {\n          table = await Table.load(source, {schema});\n          const rows = await table.read({forceCast: true, relations});\n          const errors = rows.filter((row) => row.errors);\n          if (errors.length) {\n            this.setState({\n              resourceValid: {\n                valid: false,\n                message: errors[0].errors[0].errors[0].message\n              }\n            });\n          } else {\n            this.setState({\n              resourceValid: {valid: true}\n            })\n            this.props.onAddNew(payload)\n          }\n        } catch (error) {\n          this.setState({\n            resourceValid: {\n              valid: false,\n              message: error.message || 'validation fail'\n            }\n          });\n          console.error(error)\n        }\n      }\n      else this.props.onAddNew(payload)\n    }\n    return (\n      <div>\n        <Columns>\n          <Column style={{height: '50vh', overflow:'auto'}}>\n            <h3>New row to \"{resourceDescriptor.name}\" table</h3>\n            {\n              schema.fields.map((field, index) => {\n                return (\n                  <FieldInput \n                    key={index}\n                    isNonchangable={nonChangableFields.indexOf(field.name) !==-1}\n                    fieldDescriptor={field}\n                    foreignKeys={schema.foreignKeys}\n                    referenceTables={referenceTables}\n                    fieldValue={(this.state.newResource[field.name] && this.state.newResource[field.name].value) || ''}\n                    showNewReference={this.state.showNewReference}\n                    newReference={this.state.newReference}\n                    onClickCreate={this.handleCreateNewReference}\n                    onChange={this.handleFieldChange} />\n                )\n              })\n            }\n            {\n              this.state.resourceValid && this.state.resourceValid.message &&\n              <FieldContainer>\n                <Help isColor=\"danger\">{this.state.resourceValid.message}</Help>\n              </FieldContainer>\n            }\n          </Column>\n          {schema.foreignKeys && \n          <Column>\n            {this.state.showNewReference && \n            (this.state.isRICentityGroup ?\n              <NewRICentityForm\n                descriptor={descriptor}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} /> :\n              <ReferenceResourceForm\n                descriptor={descriptor}\n                originalValues={originalValues.filter((item)=> item.field === 'year')}\n                resourceDescriptor={getReferenceDescriptor()} \n                referenceTables={referenceTables}\n                onSelectGroup={this.handleSelectGroup}\n                onCancel={this.handleHideNew}\n                onAddNew={this.handleAddNewReference} />\n            )\n            }\n            {this.state.newReference && \n              <div>\n                <NewResourceRow resource={this.state.newReference} />\n                <Button onClick={this.handleResetNewReference}>Reset</Button>\n              </div>\n            }\n          </Column>}\n          {schema.foreignKeys && this.state.newRefReference && \n            <Column>\n              <NewResourceRow resource={this.state.newRefReference} />\n            </Column>\n          }\n        </Columns>\n        <FieldContainer isGrouped>\n          <Control>\n            <Button isColor=\"info\" onClick={this.props.onCancel}>Cancel</Button>\n          </Control>\n          <Control>\n            {/* TODO: add resource validation for all field */}\n            <Button isColor=\"info\" isDisabled={fieldsInvalid.length>0} onClick={handleAddNew}>Add new</Button>\n          </Control>\n        </FieldContainer>\n      </div>\n    )\n  }\n}\nexport default ReferenceResourceForm;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {values, pick, isNil, difference} from 'lodash'\n\nimport Select from 'react-select';\n\nimport {\n  Columns,\n  Column,\n  Button,\n  Field as FieldContainer,\n  Label,\n  Control,\n  Help,\n} from 'design-workshop';\n\nimport {nonChangableFields} from '../constants'\n\nimport {validateResource} from '../redux/modules/schemaValidation';\n\nimport NewResourceForm from './NewResourceForm';\nimport NewResourceRow from './NewResourceRow';\nimport ReferenceResourceForm from './ReferenceResourceForm';\n\nclass ForeignKeyCorrection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.hydrateState()\n  }\n\n  componentDidUpdate (prevProps) {\n   if (this.props.modificationIndex !== prevProps.modificationIndex) {\n      const state = this.hydrateState();\n      this.setState({\n        ...state\n      })\n   }\n  }\n\n  initFixedValues = () => {\n    const {modificationItem} = this.props;\n    const fieldList = modificationItem.field.split('|');\n    return fieldList.reduce((res, field) => {\n      return {\n        ...res,\n        [field]: ''\n      }\n    }, {});\n  }\n\n  hydrateState = () => {\n    const {modificationItem} = this.props;\n\n    let fixedValues = this.initFixedValues()\n    if (modificationItem.fixedValues) fixedValues = modificationItem.fixedValues\n\n    return {\n      fixedValues,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null,\n      showSolving: !modificationItem.fixed,\n    }\n  }\n\n  handleSubmitForm = () => {\n    const {fixedValues, newResource, newReference, newRefReference} = this.state;\n    // if(!fixedValue || fixedValue.length === 0) return;\n    let fixedReferenceTable = []\n    if (newResource) {\n      fixedReferenceTable.push(newResource);\n    }\n    if (newReference) {\n      fixedReferenceTable.push(newReference);\n    }\n    if (newRefReference) {\n      fixedReferenceTable.push(newRefReference);\n    }\n\n    this.props.onSubmitForm({\n      fixedValues,\n      fixedReferenceTable\n    });\n  }\n\n  handleClickCreate = () => {\n    const fixedValues = this.initFixedValues()\n    this.setState({\n      fixedValues,\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleResetCreate = () => {\n    this.setState({\n      showNewForm: true,\n      newResource: null,\n      newReference: null\n    })\n  }\n\n  handleAddNewResource = (payload) => {\n    // delete referenceFieldResource.path\n    // referenceFieldResource.data = tables[resourceName].push(values);\n    // this.props.validateResource(referenceFieldResource)\n    const {newResource, newReference, newRefReference} = payload;\n    const {modificationItem, foreignKeyField} = this.props;\n\n    const fieldList = modificationItem.field.split('|');\n    const fixedValues = fieldList.reduce((res, field, index) => {\n      return {\n        ...res,\n        [field]: fieldList.length > 1 ? newResource.data[0][foreignKeyField.reference.fields[index]] : newResource.data[0][foreignKeyField.reference.fields]\n      }\n    }, {})\n    this.setState({\n      newResource,\n      newReference,\n      newRefReference,\n      fixedValues,\n      showNewForm: false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleSelectExist = (item) => {\n    const {modificationItem} = this.props;\n    if (!item) {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: ''\n        }\n      })\n    }\n    else {\n      this.setState({\n        fixedValues: {\n          [modificationItem.field]: item.value\n        },\n        newResource: null\n      })\n    }\n  }\n\n  handleShowSolving = () => {\n    this.setState({\n      showSolving: true,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  handleHideSolving = () => {\n    this.setState({\n      showSolving: false,\n      showNewForm: false,\n      newResource: null,\n      newReference: null,\n      newRefReference: null\n    })\n  }\n\n  renderFixed() {\n    const {modificationItem, foreignKeyField} = this.props;\n    const {field, fixedValues, fixedReferenceTable, unchangable}= modificationItem;\n    const fixedValue = values(fixedValues).join('|');\n    const printValue = fixedValue.length ? fixedValue: 'none';\n    const isNonchangableField = difference(nonChangableFields, field.split('|')).length < nonChangableFields.length\n\n    return (\n      <FieldContainer>\n        <Label className=\"has-text-success\">{!isNonchangableField ? \"Fixed with value\": \"Keep original value\"}</Label>\n        <p className=\"has-text-success\">{printValue}</p>\n        <Help isColor=\"success\">\n          {!isNonchangableField && <li>total {modificationItem.errors.length} rows updated</li>}\n          {\n            fixedReferenceTable && fixedReferenceTable.map((table)=> {\n              return (\n                <li>{table.data.length} row(s) added to \"{table.resourceName}\" table</li>\n              )\n            })\n          }\n        </Help>\n        <br/>\n        <Button isColor=\"info\" isDisabled={unchangable} onClick={this.handleShowSolving}>Change this fix</Button>\n      </FieldContainer>\n    )\n  }\n\n  renderSolving() {\n    const {modificationItem, foreignKeyField, tables} = this.props;\n    const {field, fixedReferenceTable}= modificationItem;\n\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceField = foreignKeyField.reference.fields;\n\n    const generateValue = (value) => {\n      return {\n        value,\n        label: value\n      }\n    }\n    \n    const fixedValueSelected = generateValue(this.state.fixedValues[field])\n\n    const getOptions = () => {\n      const table = tables[resourceName];\n      return table.map((item) => {\n        return {\n          value: item[referenceField],\n          label: item[referenceField]\n        }\n      })\n    }\n    return (\n      <div>\n        {\n          modificationItem.field === 'source' && !this.state.showNewForm && !this.state.newResource &&\n          <FieldContainer>\n            <Label>Select from exist sources</Label>\n            <Select \n              isSearchable={true}\n              isClearable={true}\n              value={fixedValueSelected}\n              onChange={this.handleSelectExist}\n              options={getOptions()} />\n            {\n              this.state.fixedValues[field] &&\n                <Help isColor=\"success\">\n                  <li>change \"{modificationItem.value}\" to \"{values(this.state.fixedValues).join(\"|\")}\"</li>\n                  <li>total {modificationItem.errors.length} rows affected</li>\n                </Help>\n            }\n          </FieldContainer>\n        }  \n        <FieldContainer>\n          <Control>\n            <Button isColor='info' onClick={this.handleClickCreate}>Create new item</Button>\n          </Control>\n        </FieldContainer>  \n      </div>\n    )\n    \n  }\n\n  render() {\n    const {newResource, fixedValues} = this.state;\n    const {modificationItem, foreignKeyField, descriptor, tables} = this.props;\n    const {value, message, field}= modificationItem;\n    const resourceName = foreignKeyField.reference.resource;  \n    const referenceFieldResource = descriptor.resources.find((resource) => resource.name === resourceName);\n    \n    const getLayoutColumns = (field) => {\n      switch(field) {\n        case 'reporting':\n        case 'partner':\n        case 'currency|year|reporting':\n          return '1/4'\n        default:\n          return '1/2'\n      }\n    }\n    const validateFixedValues = () => {\n      if (field.split('|').length > 0) {\n        const invalidValue = values(this.state.fixedValues).filter((fixedValue) => !fixedValue);\n        return invalidValue.length > 0;\n      } else return !this.state.fixedValues[field];\n    }\n    const mapFieldValue = (field, value) => {\n      return field.split('|').map((f, index) => {\n        return  {\n          value: value.split('|')[index],\n          field: f,\n          referenceField: typeof(foreignKeyField.reference.fields) === 'string' ?\n            foreignKeyField.reference.fields:foreignKeyField.reference.fields[index]\n        }\n      })\n    }\n    const originalValues = mapFieldValue(field, value);\n\n    const layoutColumn = getLayoutColumns(modificationItem.field);\n\n    const isSubmitDisabled = validateFixedValues();\n\n    return (\n      <div style={{height: '60vh'}}>\n        <form>\n          <Columns>\n            <Column isSize={layoutColumn}>\n              <FieldContainer>\n                <Label>Original value of \"{field}\":</Label>\n                {/* <Input value={value} disabled /> */}\n                <div className=\"has-text-danger\">{value}</div>\n                <Help isColor=\"danger\">{message}</Help>\n              </FieldContainer>\n              {!this.state.showSolving && modificationItem.fixed && this.renderFixed()}\n              {this.state.showSolving && this.renderSolving()}\n            </Column>\n            { this.state.showNewForm && \n              <Column className='new-resource-form' style={{flex: 'auto'}}>\n                <ReferenceResourceForm \n                  originalValues={originalValues}\n                  descriptor={descriptor}\n                  resourceDescriptor={referenceFieldResource}\n                  referenceTables={tables}\n                  onCancel={this.handleCancel}\n                  onAddNew={this.handleAddNewResource} />\n              </Column>\n            }\n            {\n              this.state.newResource && \n              <Column>\n                <NewResourceRow resource={this.state.newResource}/>\n                <Button onClick={this.handleClickCreate}>Reset</Button>\n              </Column>\n            }\n            {\n              this.state.newReference && \n              <Column>\n                <NewResourceRow resource={this.state.newReference}/>\n              </Column>\n            }\n            {\n              this.state.newRefReference && \n              <Column>\n                <NewResourceRow resource={this.state.newRefReference}/>\n              </Column>\n            }\n          </Columns>\n          {\n            this.state.showSolving &&\n            <FieldContainer isGrouped>\n              {\n                modificationItem.fixed &&\n                <Control>\n                  <Button isColor=\"info\" onClick={this.handleHideSolving}>Cancel</Button>\n                </Control>\n              }\n              <Control>\n                <Button isColor=\"info\" isDisabled={isSubmitDisabled} onClick={this.handleSubmitForm}>Confirm this fix</Button>\n              </Control>\n            </FieldContainer>\n          }\n\n        </form>\n      </div>\n    )\n  }\n}\nexport default connect(null, {\n  validateResource\n})(ForeignKeyCorrection);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {isEqual} from 'lodash';\n\nimport ContextTable from '../../components/ContextTable'\nimport FormatCorrection from '../../components/FormatCorrection';\nimport ForeignkeyCorrection from '../../components/ForeignkeyCorrection';\n\nconst ModificationComponent = ({\n  className,\n  flows,\n  tables,\n  descriptor,\n  schema,\n  modificationItem,\n  modificationIndex,\n  onSubmitModification,\n}) => {\n  const handleSubmitModification = (payload) => {\n    const {fixedValues, fixedReferenceTable} = payload;\n    return onSubmitModification({\n      ...modificationItem,\n      fixedValues,\n      fixedReferenceTable,\n      index: modificationIndex\n    })\n  }\n\n  const getFieldDescriptor = () => {\n    const {field}= modificationItem;\n    const descriptor = schema.fields.find((f) => f.name === field)\n    return descriptor;\n  }\n\n  const getForeignKeyField = () => {\n    let foreignKeyField;\n    if (modificationItem.field.indexOf('|') !== -1) {\n      const fieldList = modificationItem.field.split('|');\n      foreignKeyField = schema.foreignKeys.find((f) => isEqual(f.fields, fieldList));\n    }\n    else {\n      foreignKeyField = schema.foreignKeys.find((f) => f.fields === modificationItem.field);\n    }\n    return foreignKeyField;\n  }  \n  return (\n    <div>\n      {\n        modificationItem.errorType === 'ERROR_FORMAT' &&\n        <FormatCorrection \n          fieldDescriptor={getFieldDescriptor()} \n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      {\n        modificationItem.errorType === 'ERROR_FOREIGN_KEY' &&\n        <ForeignkeyCorrection \n          schema={schema}\n          descriptor={descriptor}\n          foreignKeyField={getForeignKeyField()}\n          tables={tables}\n          modificationItem={modificationItem}\n          modificationIndex={modificationIndex}\n          onSubmitForm={handleSubmitModification} \n        /> \n      }\n      <ContextTable flows={flows} modificationItem={modificationItem} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  descriptor: state.schemaValidation.descriptor,\n  tables: state.tables.tables\n});\n\nexport default connect(mapStateToProps)(ModificationComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {uniq} from 'lodash';\n\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {\n  setStep,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError\n} from '../../redux/modules/ui';\n\nimport {updateFlows} from '../../redux/modules/flows';\nimport {revalidateRows} from '../../redux/modules/schemaValidation';\nimport {submitModification} from '../../redux/modules/modification';\nimport {getResourceSchema} from '../../redux/modules/schemaValidation';\nimport {updateTable} from '../../redux/modules/tables';\n\nimport SummaryTable from '../../components/SummaryTable';\nimport ModificationComponent from './ModificationComponent';\n\n\nclass DataModification extends React.Component {\n  \n  render() {\n    const {flows, schema, isModification, modificationIndex, modificationList, schemaFeedback} = this.props;\n    const nonFixedList = modificationList.filter((item) => item.fixed === false)\n\n    const handlePrevStep = () => this.props.setStep({id: '1'})\n    const handleNextStep = () => this.props.setStep({id: '3'})\n\n    const handlePrevError = () => {\n      if (modificationIndex > 0) this.props.goPrevError();\n    }\n\n    const handleNextError = () => {\n      if (modificationIndex < modificationList.length - 1) this.props.goNextError();\n    }\n\n    const handleSelectError = (index) => {\n      if (index < modificationList.length) {\n        this.props.selectError({\n          index\n        })\n      }\n    }\n\n    const handleSelectFirstError = () => {\n      this.props.selectError({\n        index: nonFixedList[0].index\n      })\n    }\n\n    const handleSubmitModification = (payload) => {\n      const {schema, flows, tables} = this.props;\n      const {index, errors, errorType, fixedReferenceTable} = payload;      \n    \n      if (errorType === 'ERROR_FORMAT' || payload.field === 'source') {\n        this.props.updateFlows(payload);\n      }\n      \n      if(payload.field === 'year') {\n        const rowNumbers = errors.map((e) => e.rowNumber)\n        const columnIndex = flows[0].indexOf('year');\n        const source = [flows[0]].concat(errors.map((e) => {\n          const row = flows[e.rowNumber -1]\n          row[columnIndex] = payload.fixedValues['year'];\n          return row;\n        }));\n        const relations = {currencies: tables['currencies']}\n        this.props.revalidateRows({\n          originalValue: payload.value,\n          fixedValues: payload.fixedValues,\n          rowNumbers,\n          source,\n          schema,\n          relations,\n        });\n      }\n\n      if (errorType === 'ERROR_FOREIGN_KEY') {\n        const {fixedReferenceTable} = payload;\n        fixedReferenceTable.forEach((table) => {\n          this.props.updateTable(table)\n        })\n      }\n\n      this.props.submitModification(payload);\n\n      if ( index+1 < modificationList.length && nonFixedList.length > 0) {\n        handleSelectError(index+1)\n      }\n      else {\n        this.props.hideModification()\n      }\n    }\n\n    return (\n      <div>\n        {\n          !isModification &&\n            <div>\n              {\n                modificationList.length > 0 &&\n                <div className=\"has-text-danger has-text-weight-bold\">{modificationList.length} different errors need to modify</div>\n              }\n              {\n                modificationList && \n                <SummaryTable modificationList={modificationList} onSelectError={handleSelectError} />\n              }\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <Button \n                  isColor=\"info\" \n                  onClick={handlePrevStep}>\n                    Previous Step\n                </Button>\n                {\n                  nonFixedList.length === 0 ?\n                    <Button isColor=\"info\" onClick={handleNextStep}>\n                      Ready to publish\n                    </Button> :\n                    <Button isColor=\"info\" onClick={handleSelectFirstError}>\n                      Start fix error\n                    </Button>\n                }\n              </div>\n            </div>\n        }\n        {\n          isModification &&\n          <div>\n            <ModificationComponent \n              flows={flows}\n              schema={schema}\n              modificationIndex={modificationIndex}\n              modificationItem={modificationList[modificationIndex]} \n              onSubmitModification={handleSubmitModification} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <div>\n                <Button isColor=\"info\" onClick={this.props.hideModification}>\n                  Back to summary\n                </Button>\n              </div>\n              <span className=\"has-text-danger has-text-weight-bold\">{modificationIndex + 1} / {modificationList.length }</span>\n              <div>\n                {\n                  modificationIndex !==0 &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handlePrevError}>\n                      Prev Error\n                    </Button>\n                }\n                {\n                  modificationIndex !== (modificationList.length-1) &&\n                    <Button isColor=\"info\" style={{marginLeft: '10px'}}\n                      onClick={handleNextError}>\n                      Next Error\n                    </Button>\n                }\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  tables: state.tables.tables,\n  schema: getResourceSchema(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList,\n  isModification: state.ui.isModification,\n  modificationIndex: state.modification.modificationIndex\n})\n\nexport default connect(mapStateToProps, {\n  setStep,\n  updateFlows,\n  updateTable,\n  revalidateRows,\n  hideModification,\n  selectError,\n  goNextError,\n  goPrevError,\n  submitModification\n})(DataModification);","import DataModification from './DataModification'\n\nexport default DataModification","import XLSX from 'xlsx';\nimport {\n  csvFormatRows,\n} from 'd3-dsv';\n\nimport FileSaver from 'file-saver';\n\nexport function downloadFile ( array, fileName, ext) {\n  let file;\n  const header = array[0]\n  switch(ext) {\n    case 'csv': {\n      const csvString = csvFormatRows(array)\n      file = new File(\n        [csvString],\n        fileName,\n        { type: 'text/csv;charset=utf-8' }\n      )\n      FileSaver.saveAs(file)\n      break\n    }\n    case 'xlsx':\n    default: {\n      const sheet = XLSX.utils.aoa_to_sheet(array, {header});\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, sheet, 'SheetJS');\n      XLSX.writeFile(wb, fileName);\n      break\n    }\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Button,\n} from 'design-workshop';\n\nimport {exportFlows} from '../../redux/modules/flows';\nimport {downloadFile} from '../../utils/fileExporter';\n\nclass DataPublish extends React.Component {\n\n  render () {\n    const handleExport = () => {\n      const {file, data} = this.props.flows;\n      downloadFile(data, file.name, 'xlsx')\n    }\n    return (\n      <div>\n        <Button onClick={handleExport}>Export fixed data</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  flows: state.flows\n})\n\nexport default connect(mapStateToProps, {exportFlows})(DataPublish);","import DataPublish from './DataPublish'\n\nexport default DataPublish","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {\n  Label,\n  Button,\n  Help,\n  Select\n} from 'design-workshop';\n\nimport { \n  selectBranch,\n  fetchBranches,\n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    // const {repoData} = this.props\n    // if (!repoData.tables && !repoData.datapackage) {\n    //   this.props.fetchDatapackage()\n    //   this.props.fetchAllTables({branch:'master'})\n    // }\n    this.props.fetchDatapackage()\n    this.props.fetchBranches()\n  }  \n\n  render () {\n    const {repoData} = this.props;\n    const {branches, selectedBranch, tables} = repoData;\n    const handleSelectBranch = (event) => {\n      this.props.selectBranch({\n        branch: event.target.value\n      })\n    }\n    const handleGetTables = () => {\n      this.props.fetchAllTables({branch: selectedBranch});\n    }\n    return (\n      <div>\n        {branches && \n          <div>\n            <Label>Get tables from {selectedBranch} branch</Label>\n            <Select value={selectedBranch} onChange={handleSelectBranch}>\n              {\n                branches.map((item, index) => {\n                  return (\n                    <option key={index}>{item.name}</option>\n                  )\n                })\n              }\n            </Select>\n            <Button isColor=\"info\" onClick={handleGetTables}>Fetch</Button>\n            {tables &&\n              <Help isColor=\"success\">tables from {selectedBranch} branch are loaded</Help>\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchBranches,\n  selectBranch,\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","import React from 'react';\nimport {difference} from 'lodash';\n\nimport {\n  HelpPin\n} from 'design-workshop';\n\nconst HeaderValidation = ({\n  headerNames,\n  fieldNames\n}) => {\n  const diffLength = headerNames.length - fieldNames.length;\n  let diff;\n  if (diffLength > 0) {\n    diff = difference(headerNames, fieldNames);\n  }\n  else diff = difference(fieldNames, headerNames);\n  const validationMap = headerNames.map((name, index) => {\n    if (fieldNames[index] && fieldNames[index] === name) {\n      return {\n        name,\n        valid: true\n      }\n    } else {\n      return {\n        name,\n        valid: false\n      }\n    }\n  });\n\n  return (\n    <div style={{\n      }}>\n      {diff.length === diffLength && diffLength > 0 &&\n        <div className=\"has-text-danger\">\n          <span>Extra headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      } \n      {diff.length === Math.abs(diffLength) && diffLength < 0 &&\n        <div className=\"has-text-danger has-text-weight-bold\">\n          <span>Missing headers - </span>\n          { diff.map((field) => {\n             return <span>\"{field}\" </span>\n            })\n          }\n        </div>\n      }\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      }}>\n        <div>\n          <div className=\"has-text-weight-bold\">headers </div>\n          {\n            validationMap.map((item, index) => {\n              return (\n                <div key={index} className={item.valid ? 'has-text-black': 'has-text-danger'}>\n                  {item.name}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <div className=\"has-text-weight-bold\">schema fields</div>\n          {\n            fieldNames.map((columnName, index) => {\n              return (\n                <div key={index}>\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderValidation;","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Button, DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {\n  validateHeader, \n  getResourceSchema\n} from '../../redux/modules/schemaValidation';\nimport DataPrep from '../DataPrep';\n\nimport HeaderValidation from '../../components/HeaderValidation';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\nimport { MAXIMUM_FILE_SIZE } from '../../constants';\n\nconst FileUpload = ({\n  schema,\n  tables,\n  flows,\n  headerFeedback,\n  setStep,\n  importFlows,\n  validateHeader\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => {\n        console.error(error)\n        console.error('fail to parse file')\n      })\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        validateHeader({source: data, schema})\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  const handleDropRejected = (file, event) => {\n    console.log(\"file is invalid\")\n  }\n  const handleNextStep = () => setStep({id: '1'})\n  return (\n    <div>\n      <DataPrep />\n      {\n        tables &&\n        <DropZone\n          maxSize={MAXIMUM_FILE_SIZE}\n          onDrop={handleDrop}\n          onDropRejected={handleDropRejected}\n          isSize=\"small\">\n          <span className=\"tech-info\">Drag and drop .xlsx, .csv file here(maximum 10MB)</span>\n        </DropZone>\n      }\n      {\n        headerFeedback && headerFeedback.status === 'loading' &&\n        <span>Validating Headers</span>\n      }\n      {\n        headerFeedback && headerFeedback.valid &&\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n          }}>\n          <span className=\"has-text-success has-text-weight-bold\">Headers of \"{flows.file.name}\" are valid</span>\n          <Button \n            isColor=\"info\" \n            onClick={handleNextStep}>\n              Next Step\n          </Button>\n        </div>\n      }\n      {\n        headerFeedback && !headerFeedback.valid && headerFeedback.type === 'ERROR_HEADER' &&\n        <div style={{\n          textAlign:'center'\n          }}>\n          <span className=\"has-text-danger has-text-weight-bold\">Headers of \"{flows.file.name}\" do not match schema fields, please fix your file and re-upload</span>\n          <HeaderValidation \n            headerNames = {headerFeedback.headerNames}\n            fieldNames = {headerFeedback.fieldNames}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  schema: state.repoData.descriptor && getResourceSchema(state),\n  flows: state.flows,\n  tables: state.repoData.tables,\n  headerFeedback: state.schemaValidation.headerFeedback\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep,\n  validateHeader\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary', \n        // raw: true //If true, plain text parsing will not parse values **\n      }); \n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        // raw: false, // use raw values (true) or formatted strings (false)\n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\n\nimport {\n  Button,\n  Card,\n  Modal,\n  ModalBackground,\n  ModalContent,\n  ModalCard,\n  ModalCardBody,\n  ModalCardFooter,\n  ModalClose\n} from 'design-workshop';\n\nconst ConfirmationModal = ({\n  flows,\n  onSelectDiscard, \n  onSelectDownload,\n  isActive,\n  closeModal\n}) => {\n\n  const handleAction = (id, e) => {\n    switch(id) {\n      case 'cacnel':\n      default: \n        closeModal(); \n        break;\n      case 'download':\n        onSelectDownload();\n        break;\n      case 'discard':\n        onSelectDiscard();\n        break;\n    }\n  }\n  return (\n    <div>\n          <Modal isActive={isActive}>\n            <ModalBackground onClick={closeModal} />\n            <ModalContent>\n              <Card \n                // title=\"Modal title\" \n                bodyContent=\"Leave this step, you might lost your modification?\"\n                onAction = {handleAction}\n                footerActions={[\n                  {label: 'Download', id: 'download', isColor: 'success' }, \n                  {label: 'Discard', id: 'discard', isColor: 'danger'},\n                  {label: 'Cancel', id: 'cancel', isColor: 'info'},\n                ]} />\n            </ModalContent>\n            {/* <ModalCard>\n              <ModalCardBody>\n                You might lost your modification? \n              </ModalCardBody>\n              <ModalCardFooter>\n                  <Button isColor='success'>Download file to local</Button>\n                  <Button isColor=\"danger\">Discard</Button>\n                  <Button isColor='info'>Cancel</Button>\n              </ModalCardFooter>\n            </ModalCard> */}\n            <ModalClose onClick={closeModal} />\n          </Modal>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport {groupBy, sortBy} from 'lodash';\n\nimport {RANKED_FIELDS} from '../constants'\n\nconst OverviewTable = ({\n  className,\n  collectedErrors,\n}) => {\n  const columnNames = ['Field', 'Error Type', 'Error Overview']\n  const orderedErrors = sortBy(collectedErrors, (field) => {\n    return RANKED_FIELDS[field.name]\n  })\n  return (\n    <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n      \n      <div className={`action-table ${className}`}>\n        <div className={'action-table-header'}>\n          {\n            columnNames.map((columnName, index) => {\n              return (\n                <div key={index} className=\"table-cell\">\n                  {columnName}\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className={'action-table-main'}>\n          {\n            orderedErrors.map((field, rowIndex) => {\n              // const field = collectedErrors[errorKey];\n              const totalErrors = field.errors.length;\n              const groupedErrors = groupBy(field.errors, (v)=> {return v.value});\n              const distinctErrors = Object.keys(groupedErrors).length;\n              return (\n                <div key={rowIndex} className=\"table-row\">\n                  {\n                    columnNames.map((columnName, columnIndex) => {\n                      let cellValue;\n                      if(columnIndex === 0) cellValue = field.name;\n                      else if(columnIndex === 1) cellValue = field.errorType;\n                      else cellValue = `${distinctErrors} different invalid values, ${totalErrors} rows affected in total`\n                      return (<div key={columnIndex} className=\"table-cell\">{cellValue}</div>)\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OverviewTable","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport { \n  setStep\n} from '../../redux/modules/ui';\nimport {startModification} from '../../redux/modules/modification';\n\nimport OverviewTable from '../../components/OverviewTable';\n\nimport {validateTable, getRelations, getResourceSchema, getOrderedErrors} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, relations, schemaFeedback} = this.props;\n    if (!schemaFeedback) {\n      this.props.validateTable({source:flows, schema, relations});\n    }\n  }\n  render() {\n    const {schemaFeedback, modificationList} = this.props;\n    let isNextStepDisabled = false;\n    if (schemaFeedback && schemaFeedback.collectedErrors) {\n      isNextStepDisabled = (schemaFeedback.collectedErrors['reporting'] && schemaFeedback.collectedErrors['reporting'].errorType === 'ERROR_FORMAT') || \n                            (schemaFeedback.collectedErrors['partner'] && schemaFeedback.collectedErrors['partner'].errorType === 'ERROR_FORMAT')\n    }\n    const handlePrevStep = () => this.props.setStep({id: '0'})\n    const handleNextStep = () => {\n      if (!modificationList) {\n        const orderedErrors = getOrderedErrors(schemaFeedback.collectedErrors);\n        this.props.startModification(orderedErrors)\n      }\n      this.props.setStep({id: '2'});\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>{schemaFeedback.loader}</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.collectedErrors &&\n          <div>\n            <span className=\"has-text-danger has-text-weight-bold\">\n              Found errors in {schemaFeedback.errors.length} rows of {Object.keys(schemaFeedback.collectedErrors).length} fields\n              {isNextStepDisabled && <span>, value of required field is missing, please fix it locally first</span>}\n            </span>\n            <OverviewTable collectedErrors={schemaFeedback.collectedErrors} />\n            <div style={{\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <Button \n                isColor=\"info\" \n                onClick={handlePrevStep}>\n                  Previous Step\n              </Button>\n              <Button \n                isColor=\"info\"\n                isDisabled= {isNextStepDisabled}\n                onClick={handleNextStep}>\n                  Review Errors\n              </Button>\n            </div>\n           \n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span className=\"has-text-success has-text-weight-bold\">Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: getResourceSchema(state),\n  relations: getRelations(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback,\n  modificationList: state.modification.modificationList\n})\n\nexport default connect(mapStateToProps, {\n  validateTable,\n  setStep,\n  startModification,\n})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataModification from './containers/DataModification';\nimport DataPublish from './containers/DataPublish';\nimport FileUpload from './containers/FileUpload';\n\nimport ConfirmationModal from './components/ConfirmationModal';\n\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\n\nimport {downloadFile} from './utils/fileExporter';\n\nimport styles from 'design-workshop/themes/default/style.css';\nimport './App.css';\n\nimport { \n  setStep,\n  showModal,\n  hideModal\n} from './redux/modules/ui';\n\nimport { initTables } from './redux/modules/tables';\n\nconst App = ({\n  steps,\n  isModalDisplay,\n  selectedStep,\n  repoData,\n  flows,\n  modificationList,\n  //actions\n  initTables,\n  setStep,\n  showModal,\n  hideModal\n}) => {\n\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n      case '2':\n        return <DataModification />;\n      case '3':\n        return <DataPublish />;\n    }\n  }\n  const handleExport = () => {\n    const {file, data} = flows;\n    downloadFile(data, file.name, 'xlsx')\n  }\n\n  const handleSetStep = (step) => {\n    let fixed\n    if (modificationList) {\n      fixed = modificationList.filter((item) => item.fixed)\n    }\n    if(fixed && step.id === '0') showModal();\n    else setStep(step)\n  }\n\n  const handleDiscard = () => {\n    initTables(repoData.tables);\n    setStep(steps[0]);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Layout \n        steps={steps}\n        selectedStep={selectedStep}\n        onSetStep={handleSetStep}>\n        {renderChildren()}\n      </Layout>\n      <ConfirmationModal \n        isActive={isModalDisplay}\n        onSelectDiscard={handleDiscard}\n        onSelectDownload={handleExport}\n        closeModal={hideModal} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  isModalDisplay: state.ui.isModalDisplay,\n  flows: state.flows,\n  selectedStep: state.ui.selectedStep,\n  modificationList: state.modification.modificationList,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  initTables,\n  showModal,\n  hideModal,\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport tables from './modules/tables';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\nimport modification from './modules/modification';\nexport default combineReducers({\n  ui,\n  flows,\n  tables,\n  schemaValidation,\n  modification,\n  repoData\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport * as storage from 'localforage';\n\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  let store = createStore(\n    // rootReducer,\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  )\n  let persistor = persistStore(store)\n  return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst {store} = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}