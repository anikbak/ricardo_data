{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/datapackage/lib/profiles sync /^/.//.*/.json$","redux/modules/repoData.js","containers/DataPrep/DataPrep.js","containers/DataPrep/index.js","redux/modules/flows.js","redux/modules/ui.js","containers/FileUpload/FileUpload.js","containers/FileUpload/index.js","utils/fileParser.js","components/FeedbackTable.js","redux/modules/schemaValidation.js","containers/SchemaValidation/SchemaValidation.js","containers/SchemaValidation/index.js","containers/Layout/index.js","containers/Layout/Layout.js","App.js","serviceWorker.js","redux/rootReducer.js","index.js","redux/configureStore.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./data-package.json","./data-resource.json","./fiscal-data-package.json","./registry.json","./tabular-data-package.json","./tabular-data-resource.json","FETCH_DATAPACKAGE_SUCCESS","FETCH_TABLES_SUCCESS","tablesList","name","path","initialState","DataPrep","this","props","fetchDatapackage","fetchAllTables","branch","repoData","react_default","a","createElement","tables","datapackage","React","Component","connect","state","payload","dispatch","type","Promise","all","table","get","concat","apiUri","then","res","forEach","item","data","split","catch","error","UPDATE_FLOW","IMPORT_FLOWS","SET_STEP","setStep","steps","title","selectedStep","FileUpload","flow","importFlows","_ref","components","maxSize","onDrop","_ref2","file","slicedToArray","reject","reader","FileReader","onload","event","bstr","target","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","blankrows","undefined","onerror","readAsBinaryString","parseSheet","console","csvParseRows","tsvParse","readAsText","parseTable","className","FeedbackTable","_this$props","_this$props$columnNam","columnNames","_this$props$values","values","style","position","width","height","columnName","index","key","obj","rowIndex","wordBreak","color","valid","value","place","errorType","message","VALIDATE_TABLE_REQUEST","VALIDATE_TABLE_SUCCESS","VALIDATE_TABLE_FAILURE","tableValidated","schemaFeedback","getSchema","schemaValidation","descriptor","resources","find","resource","schema","getRelations","foreignKeys","getForeignKeys","relations","tableName","reference","SchemaValidation","flows","validateTable","source","_this$props2","errorTypes","status","errors","length","components_FeedbackTable","output","row","rowNumber","tableRow","reduce","selectedErrors","err","selectedError","columnNumber","objectSpread","defineProperty","push","getFeedbackTable","asyncToGenerator","regenerator_default","mark","_callee2","rows","wrap","_context2","prev","next","Table","load","sent","forceCast","limit","filter","t0","stop","Layout","onSetStep","children","hasConfig","isConfig","step","isSelectedStep","isStepDisabled","isColor","isDisabled","onClick","isWorkspace","isSecondary","isPrimary","ui","containers_DataPrep","containers_Layout","containers_FileUpload","containers_SchemaValidation","renderChildren","Boolean","window","location","hostname","match","combineReducers","arguments","action","csvParse","Base64","decode","content","JSON","parse","store","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","rootReducer","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c594af0b.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 299,\n\t\"./table-schema.json\": 768,\n\t\"./topojson.json\": 300\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 767;","var map = {\n\t\"./data-package.json\": 836,\n\t\"./data-resource.json\": 837,\n\t\"./fiscal-data-package.json\": 838,\n\t\"./registry.json\": 839,\n\t\"./tabular-data-package.json\": 840,\n\t\"./tabular-data-resource.json\": 841\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 835;","import {get} from 'axios';\nimport {apiUri, repoUrl} from '../../config/default';\nimport { Base64 } from 'js-base64';\n\nexport const FETCH_TABLE_REQUEST = 'FETCH_TABLE_REQUEST';\nexport const FETCH_TABLE_SUCCESS = 'FETCH_TABLE_SUCCESS';\nexport const FETCH_TABLE_FAILURE = 'FETCH_TABLE_FAILURE';\n\nexport const FETCH_DATAPACKAGE_REQUEST = 'FETCH_DATAPACKAGE_REQUEST';\nexport const FETCH_DATAPACKAGE_SUCCESS = 'FETCH_DATAPACKAGE_SUCCESS';\nexport const FETCH_DATAPACKAGE_FAILURE = 'FETCH_DATAPACKAGE_FAILURE';\n\nexport const FETCH_TABLES_REQUEST = 'FETCH_TABLES_REQUEST';\nexport const FETCH_TABLES_SUCCESS = 'FETCH_TABLES_SUCCESS';\nexport const FETCH_TABLES_FAILURE = 'FETCH_TABLES_FAILURE';\n\n\n\nexport const tablesList = [\n  {\n    name: 'sources',\n    path: 'data/sources.csv'\n  },\n  // {\n  //   name: 'RICentities',\n  //   path: 'data/RICentities.csv'\n  // },\n  // {\n  //   name: 'RICentities_groups',\n  //   path: 'data/RICentities_groups.csv'\n  // },\n  // {\n  //   name: 'currencies',\n  //   path: 'data/currencies.csv'\n  // },\n  {\n    name: 'entity_names',\n    path: 'data/entity_names.csv'\n  },\n  // {\n  //   name: 'exchange_rates',\n  //   path: 'data/exchange_rates.csv'\n  // },\n  // {\n  //   name: 'expimp_spegen',\n  //   path: 'data/expimp_spegen.csv'\n\n  // }\n];\n\n/**\n * ACTIONS\n */\n export const fetchTable = (payload) => (dispatch) => {\n  const {branch, table} = payload\n  dispatch({\n    type: FETCH_TABLE_REQUEST,\n    payload\n  });\n  return get(`${apiUri}/${table.path}?ref=${branch}`)\n    .then((res) => dispatch({\n      type: FETCH_TABLE_SUCCESS,\n      payload: {\n        ...payload,\n        data: res.data\n      }\n    })).catch((error) => dispatch({\n      type: FETCH_TABLE_FAILURE,\n      payload,\n      error\n    }))\n}\n\nexport const fetchAllTables = (payload) => (dispatch) => {\n  const {branch} = payload;\n  dispatch({\n    type: FETCH_TABLES_REQUEST,\n  });\n  Promise.all(tablesList.map((table) => {\n    return get(`${apiUri}/${table.path}?ref=${branch}`)\n  }))\n  .then((res) => {\n    let tables = {}\n    res.forEach((item) => {\n      const id = item.data.name.split('.')[0]\n      tables[id] = item.data\n    })\n    dispatch({\n      type: FETCH_TABLES_SUCCESS,\n      payload: tables\n    })\n  })\n  .catch((error) => dispatch({\n    type: FETCH_TABLES_FAILURE,\n    payload,\n    error\n  }))\n}\n\nexport const fetchDatapackage = () => (dispatch) => {\n  dispatch({\n    type: FETCH_DATAPACKAGE_REQUEST,\n  });\n  return get(`${apiUri}/datapackage.json?ref=master`)\n    .then((res) => dispatch({\n      type: FETCH_DATAPACKAGE_SUCCESS,\n      payload: res.data\n    })).catch((error) => dispatch({\n      type: FETCH_DATAPACKAGE_FAILURE,\n      error\n    }))\n}\n\n\n/**\n * REDUCER\n */\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case FETCH_TABLES_SUCCESS:\n      // newDescriptor = {...state.descriptor};\n      // newDescriptor.resources.forEach((resource)=> {\n      //   if (payload[resource.name]) {\n      //     delete resource.path;\n      //     resource.data = csvParseRows(atob(payload[resource.name].content))\n      //   }\n      // });\n      return {\n        ...state,\n        tables: payload\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        datapackage: payload,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport { \n  fetchAllTables,\n  fetchDatapackage\n} from '../../redux/modules/repoData';\n\nclass DataPrep extends React.Component {\n  componentDidMount() {\n    this.props.fetchDatapackage()\n    this.props.fetchAllTables({branch:'master'})\n  }\n\n  render () {\n    const {repoData} = this.props\n    return (\n      <div>\n        {!repoData.tables && <span>loading tables</span>}\n        {!repoData.datapackage && <span>loading datapackage</span>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n repoData: state.repoData\n})\n\nexport default connect(mapStateToProps, {\n  fetchAllTables,\n  fetchDatapackage\n})(DataPrep);","import DataPrep from './DataPrep'\n\nexport default DataPrep","export const UPDATE_FLOW = 'UPDATE_FLOW';\nexport const IMPORT_FLOWS = 'IMPORT_FLOWS';\n\nexport const updateFlow = (payload) => ({\n  type: UPDATE_FLOW,\n  payload\n});\n\nexport const importFlows = (payload) => ({\n  type: IMPORT_FLOWS,\n  payload\n});\n\n\nconst initialState = {}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case IMPORT_FLOWS: \n      return payload;\n    case UPDATE_FLOW:\n      return {\n        ...state,\n        data: payload.data\n      };\n    default:\n     return state\n  }\n}","export const SET_STEP = 'SET_STEP';\n\nexport const setStep = (payload) => ({\n  type: SET_STEP,\n  payload\n});\n\nconst steps = [\n  {\n    id: '0',\n    name: 'Upload file',\n    title: 'Choose a file'\n  },\n  // {\n  //   id: '1',\n  //   name: 'Data Summary',\n  //   title: 'Statistics summary of your uploaded data'\n  // },\n  {\n    id: '1',\n    name: 'Schema Validation',\n    title: 'Schema validation against datapackage'\n  },\n  // {\n  //   id: '3',\n  //   name: 'Data Validation',\n  //   title: 'Data validation'\n  // },\n  // {\n  //   id: '4',\n  //   name: 'Export/Publish Data',\n  //   title: 'Export or Publish your data to Github'\n  // }\n];\n\nconst initialState = {\n  steps, \n  selectedStep: steps[0]\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP:\n      return {\n        ...state,\n        selectedStep: steps.find((step) => payload.id === step.id)\n      }\n    default:\n     return state\n  }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {DropZone} from 'design-workshop'\nimport { \n  importFlows,\n} from '../../redux/modules/flows';\n\nimport { \n  setStep\n} from '../../redux/modules/ui';\n\nimport {parseSheet, parseTable} from '../../utils/fileParser';\n\nconst FileUpload = ({\n  setStep,\n  importFlows\n}) => {\n  const handleDrop = ([file]) => {\n    if (file.name.split('.')[1] === 'xlsx') {\n      parseSheet(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        setStep({id: '1'});\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n    else {\n      parseTable(file)\n      .then((data) => {\n        importFlows({\n          file: {\n            name: file.name\n          },\n          data\n        });\n        setStep({id: '1'});\n      })\n      .catch((error) => console.error('fail to parse file'))\n    }\n  }\n  return (\n    <DropZone\n      maxSize={10000000}\n      onDrop={handleDrop}>\n      <span className=\"tech-info\">Drag and drop .xlsx, .csv file here</span>\n    </DropZone>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  flow: state.flow\n })\n \n export default connect(mapStateToProps, {\n  importFlows,\n  setStep\n })(FileUpload);\n","import FileUpload from './FileUpload'\n\nexport default FileUpload","\nimport XLSX from 'xlsx';\nimport {\n  csvParse,\n  csvParseRows,\n  tsvParse,\n} from 'd3-dsv';\n\nexport function parseTable( file ) {\n  return new Promise( ( resolve, reject ) => {\n    let reader = new FileReader();\n    reader.onload = ( event ) => {\n      let data;\n      if (file.name.split('.')[1] === 'csv') {\n        data = csvParseRows(event.target.result);\n      }\n      else {\n        data = tsvParse(event.target.result);\n      }\n      resolve(data);\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    return reader.readAsText( file );\n  } );\n}\n\nexport function parseSheet( file ) {\n  return new Promise( (resolve, reject) => {\n    let reader = new FileReader();\n    // Handle errors loadrABS\n    reader.onload = ( event ) => {\n      const bstr = event.target.result;\n      const wb = XLSX.read(bstr, {type: 'binary'});\n\t\t\t// Get first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Convert to \"2D Array\"\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1, \n        defval: '', // set null and undefined to empty string for validation\n        blankrows: false // skip blank rows\n      });\n      resolve(data)\n      reader = undefined;\n    };\n    reader.onerror = ( event ) => {\n      reject( event.target.error );\n      reader = undefined;\n    };\n    // Read file into memory as UTF-8\n    reader.readAsBinaryString( file );\n  })\n}","import React from 'react';\nimport {\n  Field,\n  Control,\n  Input,\n  Help,\n  HelpPin,\n  ActionableTable\n} from 'design-workshop';\n\nclass FeedbackTable extends React.Component {\n\n  render() {\n    const {\n      className,\n      columnNames = [],\n      values = []} = this.props;\n    return (\n      <div style={{position: 'relative', width: '100%', height: '70vh'}}>\n        <div className={`action-table ${className}`}>\n          <div className={'action-table-header'}>\n            {\n              columnNames.map((columnName, index) => {\n                return (\n                  <div key={index} className=\"table-cell\">\n                    {columnName}\n                  </div>\n                );\n              })\n            }\n          </div>\n          <div className={'action-table-main'}>\n            {\n              values.map((obj, rowIndex) => {\n                return (\n                  <div key={rowIndex} className=\"table-row\">\n                    {\n                      columnNames.map((columnName, index) => {\n                      return (\n                        <div key={index} className=\"table-cell\" style={{ wordBreak: 'break-all', color: obj[columnName].valid ? 'black': 'red'}}>\n                          {obj[columnName].value}\n                          {!obj[columnName].valid && \n                            <HelpPin place='right'>{obj[columnName].errorType}:{obj[columnName].message}</HelpPin>\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackTable","import { createSelector } from 'reselect'\n\nimport {Package} from 'datapackage';\nimport {Table} from 'tableschema';\nimport {Base64} from 'js-base64';\n\nimport {\n  csvParse,\n} from 'd3-dsv';\n\nimport {repoUrl} from '../../config/default';\nimport {SET_STEP} from './ui';\nimport {IMPORT_FLOWS} from './flows';\n\nimport {\n  FETCH_TABLES_SUCCESS,\n  FETCH_DATAPACKAGE_SUCCESS,\n} from './repoData';\n\nexport const VALIDATE_RESOURCE_REQUEST = 'VALIDATE_RESOURCE_REQUEST';\nexport const VALIDATE_RESOURCE_SUCCESS = 'VALIDATE_RESOURCE_SUCCESS';\nexport const VALIDATE_RESOURCE_FAILURE = 'VALIDATE_RESOURCE_FAILURE';\n\nexport const VALIDATE_TABLE_REQUEST = 'VALIDATE_TABLE_REQUEST';\nexport const VALIDATE_TABLE_SUCCESS = 'VALIDATE_TABLE_SUCCESS';\nexport const VALIDATE_TABLE_FAILURE = 'VALIDATE_TABLE_FAILURE';\n\n// not used yet\nexport const validateResource = (payload) => (dispatch) => {\n  const {descriptor, relations} = payload;\n  dispatch(async () => {\n    let resource;\n    try {\n      const dataPackage = await Package.load(descriptor, {basePath: repoUrl});\n      resource = dataPackage.getResource('flows');\n      \n      dispatch({\n        type: VALIDATE_RESOURCE_SUCCESS,\n        payload: {\n          valid: true\n        }\n      })\n    } catch (error) {\n      if (error.multiple) {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: error.errors.map((err) => { \n              return {\n              ...err,\n              message: err.message\n              }\n            })\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_RESOURCE_FAILURE,\n          payload : {\n            rowNumber: error.rowNumber,\n            messages: [\n              {\n                ...error,\n                message: error.message\n              }\n            ]\n          }\n        })\n      }\n    }\n  })\n}\n\nexport const validateTable = (payload) => (dispatch) => {\n  dispatch({\n    type: VALIDATE_TABLE_REQUEST,\n    payload: {\n      status: 'loading'\n    }\n  })\n  const {source, schema, relations} = payload;\n\n  dispatch(async() => {\n    try {\n      const table = await Table.load(source, {schema});\n      const rows = await table.read({forceCast: true, relations, limit: 500});\n      const errors = rows.filter((row) => row.errors)\n      if (errors.length) {\n        dispatch({\n          type: VALIDATE_TABLE_FAILURE,\n          payload: {\n            status: 'done',\n            valid: false,\n            errors\n          }\n        })\n      } else {\n        dispatch({\n          type: VALIDATE_TABLE_SUCCESS,\n          payload: {\n            status: 'done',\n            valid: true\n          }\n        })\n      }\n    } catch (error) {\n      dispatch({\n        type: VALIDATE_TABLE_FAILURE,\n        payload: error\n      })\n    }\n  })\n}\n\n/**\n * REDUCER\n */\n\nconst initialState = {\n  tableValidated: 'flows',\n  schemaFeedback: null,\n  tables: null\n}\n\nexport default function reducer(state = initialState, action){\n  const {payload} = action;\n  switch (action.type){\n    case SET_STEP: \n      if (payload.id === '0') {\n        return {\n          ...state,\n          schemaFeedback: null\n        }\n      }\n      return state\n    case FETCH_TABLES_SUCCESS:\n      const tables = {}\n      Object.keys(payload).forEach((id) => {\n        tables[id] = csvParse(Base64.decode(payload[id].content))\n      })\n      return {\n        ...state,\n        tables\n      }\n    case FETCH_DATAPACKAGE_SUCCESS:\n      return {\n        ...state,\n        descriptor: JSON.parse(Base64.decode(payload.content))\n      }\n    // case IMPORT_FLOWS:\n    //   newDescriptor = {...state.descriptor};\n    //   // newDescriptor.resources.forEach((resource)=> {\n    //   //   resource.path = `${repoUrl}/${resource.path}`\n    //   // });\n    //   delete newDescriptor.resources[0].path\n    //   // newDescriptor.resources[0].dialect = {\n    //   //   delimiter: ';',\n    //   //   header: true\n    //   // }\n    //   newDescriptor.resources[0].data = payload.data\n    //   return {\n    //     ...state,\n    //     descriptor: newDescriptor\n    //   }\n    // case VALIDATE_RESOURCE_SUCCESS:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: true\n    //     }\n    //   }\n    // case VALIDATE_RESOURCE_FAILURE:\n    //   return {\n    //     ...state,\n    //     schemaFeedback: {\n    //       valid: false,\n    //       ...payload\n    //     }\n    //   }\n    case VALIDATE_TABLE_REQUEST: \n    case VALIDATE_TABLE_FAILURE:\n    case VALIDATE_TABLE_SUCCESS: \n      return {\n        ...state,\n        schemaFeedback: payload\n      }\n    default:\n    return state\n  }\n}\n\n/** \n* SELECTORS\n*/\n\nexport const getSchema = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  return resource.schema\n}\n\nexport const getRelations = (state) => {\n  const foreignKeys = getForeignKeys(state)\n  const relations = {};\n  foreignKeys.forEach((key) => {\n    const tableName = key.reference.resource;\n    relations[tableName] = state.schemaValidation.tables[tableName]\n  });\n  return relations;\n}\n\nexport const getForeignKeys = (state) => {\n  const {tableValidated} = state.schemaValidation;\n  const resource = state.schemaValidation.descriptor.resources.find((resource) => resource.name === tableValidated);\n  const {foreignKeys} = resource.schema;\n  return foreignKeys\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Button} from 'design-workshop';\nimport FeedbackTable from '../../components/FeedbackTable';\nimport {validateTable, getRelations, getForeignKeys, getSchema} from '../../redux/modules/schemaValidation';\n\nclass SchemaValidation extends React.Component {\n  componentDidMount () {\n    const {flows, schema, schemaFeedback, relations} = this.props;\n    this.props.validateTable({source:flows, schema, relations});\n  }\n  render() {\n    const {flows, schema, schemaFeedback, relations} = this.props;\n\n    const columnNames = flows[0]\n    const errorTypes = ['ERROR_FORMAT', 'ERROR_UNIQUE_KEY', 'ERROR_FOREIGN_KEY'];\n  \n    const getFeedbackTable = () => {\n      const output = []\n      schemaFeedback.errors.forEach((error)=>{\n        const row = flows[error.rowNumber -1]\n        const tableRow = columnNames.reduce((res, name, index) => {\n          let item = {\n            name,\n            value: row[index],\n            valid: true\n          };\n          errorTypes.forEach((errorType) => {\n            const selectedErrors = error.errors.find((err) => err.type === errorType)\n            if (selectedErrors && selectedErrors.errors) {\n              const selectedError = selectedErrors.errors.find((err) => {\n                if (err.columnNumber) return err.columnNumber === index + 1;\n                else if (err.columnName) return err.columnName[0] === name;\n                else return;\n              });\n              if (selectedError) {\n                item = {\n                  ...item, \n                  valid: false, \n                  errorType,\n                  message: selectedError.message,\n                }\n              }\n            }\n          })\n          return {...res, [name]: item}\n        }, {});\n        output.push(tableRow)\n      });\n      return output;\n    }\n    return (\n      <div>\n        {\n          schemaFeedback && schemaFeedback.status === 'loading' &&\n          <span>validating flows</span>\n        }\n        {\n          schemaFeedback && !schemaFeedback.valid && schemaFeedback.errors &&\n          <div>\n            <span>Found {schemaFeedback.errors.length} rows has errors</span>\n            {<FeedbackTable\n              values={getFeedbackTable()}\n              columnNames={columnNames} /> }\n          </div>\n        }\n        {\n          schemaFeedback && schemaFeedback.valid && <span>Flows data is valid</span>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  flows: state.flows.data,\n  schema: state.schemaValidation.descriptor && getSchema(state),\n  relations: state.schemaValidation.descriptor && getRelations(state),\n  foreignKeys: state.schemaValidation.descriptor && getForeignKeys(state),\n  schemaFeedback: state.schemaValidation.schemaFeedback\n})\n\n\nexport default connect(mapStateToProps, {validateTable})(SchemaValidation);","import SchemaValidation from './SchemaValidation'\n\nexport default SchemaValidation","import Layout from './Layout'\n\nexport default Layout","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport {\n    LayoutWrapper,\n    LayoutContainer,\n    LayoutNav,\n    LayoutFooter,\n    LayoutFooterColumn,\n    LayoutContent,\n    LayoutContentColumn,\n    LayoutHeader,\n    AppTitle,\n    RunningTitle,\n    Content,\n    ButtonContainer,\n    Button\n} from 'design-workshop';\n\nconst Layout = ({\n  steps, \n  selectedStep, \n  onSetStep,\n  children\n}) => {\n  return (\n    <LayoutWrapper hasConfig>\n      <LayoutHeader>\n        <AppTitle>Ricardo Data App</AppTitle>\n        <RunningTitle>{selectedStep.title}</RunningTitle>\n      </LayoutHeader>\n      <LayoutContainer>\n        <LayoutContent>\n          <LayoutContentColumn isConfig>\n            {steps.map((step, index) => {\n              const isSelectedStep = (selectedStep.id === step.id)\n              const isStepDisabled = step.id > selectedStep.id;\n              const handleClickStep = () => onSetStep(step)\n              return (\n                <ButtonContainer key={index} >\n                  <Button \n                    isColor={isSelectedStep ? \"info\" : null} \n                    isDisabled={isStepDisabled}\n                    onClick={handleClickStep}>\n                    {step.name}\n                  </Button>\n                </ButtonContainer>)\n              })\n            }\n          </LayoutContentColumn>\n          <LayoutContentColumn isWorkspace>\n            {children}\n          </LayoutContentColumn>\n        </LayoutContent>\n        <LayoutFooter>\n          <LayoutFooterColumn isSecondary>\n            <h3>médialab SciencesPo</h3>\n          </LayoutFooterColumn>\n          <LayoutFooterColumn isPrimary>\n            Ricardo Data App\n          </LayoutFooterColumn>\n        </LayoutFooter>\n      </LayoutContainer>\n    </LayoutWrapper>\n  )\n};\n\nexport default Layout;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport DataPrep from './containers/DataPrep';\nimport DataSummary from './containers/DataSummary';\nimport FileUpload from './containers/FileUpload';\nimport SchemaValidation from './containers/SchemaValidation';\nimport Layout from './containers/Layout';\nimport styles from 'design-workshop/themes/default/style.css';\n\nimport { \n  setStep\n} from './redux/modules/ui';\n\nconst App = ({\n  steps,\n  selectedStep,\n  repoData,\n  //actions\n  setStep\n}) => {\n  const renderChildren = () => {\n    switch(selectedStep.id) {\n      case '0':\n      default:\n        return <FileUpload />;\n      case '1':\n        return <SchemaValidation />;\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <DataPrep />\n      { repoData.descriptor &&\n        <Layout \n          steps={steps}\n          selectedStep={selectedStep}\n          onSetStep={setStep}>\n          {renderChildren()}\n        </Layout>\n      }\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  steps: state.ui.steps,\n  selectedStep: state.ui.selectedStep,\n  repoData: state.repoData\n })\n \n export default connect(mapStateToProps, {\n  setStep\n })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport ui from './modules/ui';\nimport flows from './modules/flows';\nimport repoData from './modules/repoData';\nimport schemaValidation from './modules/schemaValidation';\n\nexport default combineReducers({\n  ui,\n  flows,\n  schemaValidation,\n  repoData\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/configureStore';\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nexport default function configureStore ( initialState = {} ) {\n  const enhancers = []\n  const middleware = [thunk]\n  \n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension())\n    }\n  }\n  \n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  )\n  \n  return createStore(\n    rootReducer,\n    initialState,\n    composedEnhancers\n  )\n}"],"sourceRoot":""}